{"map":"{\"version\":3,\"sources\":[\"/home/ubuntu/PROJECT/Deliverable_1_Documentation/Hi-Fidelity-Prototype/Hare_Frontend/src/components/App.js\",\"/home/ubuntu/PROJECT/Deliverable_1_Documentation/Hi-Fidelity-Prototype/Hare_Frontend/src/serviceWorker.js\",\"/home/ubuntu/PROJECT/Deliverable_1_Documentation/Hi-Fidelity-Prototype/Hare_Frontend/src/index.js\"],\"names\":[\"Navbar\",\"react_default\",\"a\",\"createElement\",\"Box\",\"tag\",\"background\",\"pad\",\"elevation\",\"justify\",\"direction\",\"align\",\"flex\",\"Heading\",\"level\",\"margin\",\"Menu\",\"items\",\"label\",\"href\",\"icon\",\"Apps\",\"color\",\"Component\",\"Body\",\"Footer\",\"App\",\"Grommet\",\"plain\",\"full\",\"App_Navbar\",\"App_Body\",\"App_Footer\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"4QAOMA,0LAEJ,OACCC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACCC,IAAI,SACJC,WAAW,YACXC,IAAI,QACJC,UAAU,SACVC,QAAQ,UACRC,UAAU,MACVC,MAAM,SACNC,MAAM,GAENX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASC,MAAO,EAAGC,OAAO,QAA1B,QAGAd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACCC,MACC,CACC,CACCC,MAAO,SACPC,KAAM,MAITC,KACCnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAYC,MAAM,qBA1BHC,EAAAA,YAkCfC,mLAEJ,OAAOvB,EAAAC,EAAAC,cAAA,MAAA,KAAA,YAFUoB,EAAAA,WAMbE,mLAEJ,OAAOxB,EAAAC,EAAAC,cAAA,MAAA,KAAA,YAFYoB,EAAAA,WAkBNG,mLAVb,OACCzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAASC,OAAK,EAACC,MAAM,GACpB5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,MACA9B,EAAAC,EAAAC,cAAC6B,EAAD,cANcT,EAAAA,WCzCEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,EAAAA,EAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"// Main container for website application. \\nimport React, { Component } from 'react'; \\nimport { Grommet, Box, Heading, Menu } from 'grommet';\\nimport * as Icons from 'grommet-icons';\\nimport Theme from './Theme.js'; \\nimport View from './View.js'; \\n\\nclass Navbar extends Component { \\n\\trender() { \\n\\t\\treturn(\\n\\t\\t\\t<Box\\n\\t\\t\\t\\ttag='header' // Tag that appears in rendered HTML\\n\\t\\t\\t\\tbackground='neutral-3' // Colour of fill \\n\\t\\t\\t\\tpad='small' // Internal padding | --> contents <-- |\\n\\t\\t\\t\\televation='xsmall' // Drop shadow \\\"distance\\\" above ground\\n\\t\\t\\t\\tjustify='between' // Pushes items inside of box to both sides\\n\\t\\t\\t\\tdirection='row' // Stretch sideways instead of upwards \\n\\t\\t\\t\\talign='center'\\n\\t\\t\\t\\tflex={false}\\n\\t\\t\\t>\\n\\t\\t\\t\\t<Heading level={3} margin='none'>\\n\\t\\t\\t\\t\\tTEST\\n\\t\\t\\t\\t</Heading>\\n\\t\\t\\t\\t<Menu\\n\\t\\t\\t\\t\\titems={\\n\\t\\t\\t\\t\\t\\t[\\n\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\tlabel: 'Logout',\\n\\t\\t\\t\\t\\t\\t\\t\\thref: '#'\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\ticon={\\n\\t\\t\\t\\t\\t\\t<Icons.Apps color='dark-3'/>\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</Box>\\n\\t\\t);\\n\\t}\\n} \\n\\nclass Body extends Component { \\n\\trender() { \\n\\t\\treturn(<div>3</div>);\\n\\t}\\n}  \\n\\nclass Footer extends Component { \\n\\trender() { \\n\\t\\treturn(<div>4</div>);\\n\\t}\\n}; \\n\\nclass App extends Component { \\n\\trender() { \\n\\t\\treturn(\\n\\t\\t\\t<Grommet plain full={true}>\\n\\t\\t\\t\\t<Navbar />\\n\\t\\t\\t\\t<Body\\t/>\\n\\t\\t\\t\\t<Footer />\\n\\t\\t\\t</Grommet>\\n\\t\\t); \\n\\t}\\n} \\n\\nexport default App; \\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{60:function(e,t,n){e.exports=n(75)},65:function(e,t){},75:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(10),o=n.n(c),i=n(14),l=n(15),u=n(17),s=n(16),b=n(18),m=n(87),h=n(86),j=n(83),d=n(85),f=n(84),p=(n(65),function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(m.a,{tag:\"header\",background:\"neutral-3\",pad:\"small\",elevation:\"xsmall\",justify:\"between\",direction:\"row\",align:\"center\",flex:!1},r.a.createElement(h.a,{level:3,margin:\"none\"},\"TEST\"),r.a.createElement(j.a,{items:[{label:\"Logout\",href:\"#\"}],icon:r.a.createElement(f.a,{color:\"dark-3\"})}))}}]),t}(a.Component)),O=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"3\")}}]),t}(a.Component),w=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",null,\"4\")}}]),t}(a.Component),v=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(d.a,{plain:!0,full:!0},r.a.createElement(p,null),r.a.createElement(O,null),r.a.createElement(w,null))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(v,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[60,1,2]]]);","extractedComments":[]}