{"ast":null,"code":"import styled, { css, keyframes } from 'styled-components';\nimport { baseStyle, backgroundStyle, breakpointStyle } from '../../utils';\nimport { defaultProps } from '../../default-props';\nvar hiddenPositionStyle = css([\"left:-100%;right:100%;z-index:-1;position:fixed;\"]);\nvar desktopLayerStyle = \"\\n  position: fixed;\\n  top: 0px;\\n  left: 0px;\\n  right: 0px;\\n  bottom: 0px;\\n  width: 100vw;\\n  height: 100vh;\\n\";\nvar responsiveLayerStyle = \"\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  min-height: 100vh;\\n\";\nvar StyledLayer = styled.div.withConfig({\n  displayName: \"StyledLayer\",\n  componentId: \"rmtehz-0\"\n})([\"\", \" background:unset;position:relative;z-index:\", \";pointer-events:none;outline:none;\", \" \", \";\"], baseStyle, function (props) {\n  return props.theme.layer.zIndex;\n}, function (props) {\n  if (props.position === 'hidden') {\n    return hiddenPositionStyle;\n  }\n\n  var styles = [desktopLayerStyle];\n\n  if (props.responsive && props.theme.layer.responsiveBreakpoint) {\n    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];\n    styles.push(breakpointStyle(breakpoint, responsiveLayerStyle));\n  }\n\n  return styles;\n}, function (props) {\n  return props.theme.layer && props.theme.layer.extend;\n});\nStyledLayer.defaultProps = {};\nObject.setPrototypeOf(StyledLayer.defaultProps, defaultProps);\nvar StyledOverlay = styled.div.withConfig({\n  displayName: \"StyledLayer__StyledOverlay\",\n  componentId: \"rmtehz-1\"\n})([\"position:absolute;\", \" top:0px;left:0px;right:0px;bottom:0px;\", \" pointer-events:all;\"], function (props) {\n  if (props.responsive && props.theme.layer.responsiveBreakpoint) {\n    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];\n    return breakpointStyle(breakpoint, 'position: relative;');\n  }\n\n  return '';\n}, function (props) {\n  return !props.plain && props.theme.layer.overlay.background && backgroundStyle(props.theme.layer.overlay.background, props.theme);\n});\n\nvar getMargin = function getMargin(margin, theme, position) {\n  var axis = position.includes('top') || position.includes('bottom') ? 'vertical' : 'horizontal';\n  var marginValue = margin[position] || margin[axis] || margin;\n  var marginApplied = theme.global.edgeSize[marginValue] || marginValue;\n  var marginInTheme = !!theme.global.edgeSize[marginValue];\n  return !marginInTheme && typeof marginValue !== 'string' ? '0px' : marginApplied;\n};\n\nvar MARGINS = function MARGINS(margin, theme, position) {\n  if (position === void 0) {\n    position = undefined;\n  }\n\n  if (position) {\n    return getMargin(margin, theme, position);\n  }\n\n  return {\n    bottom: getMargin(margin, theme, 'bottom'),\n    'bottom-left': getMargin(margin, theme, 'bottom-left'),\n    'bottom-right': getMargin(margin, theme, 'bottom-right'),\n    left: getMargin(margin, theme, 'left'),\n    right: getMargin(margin, theme, 'right'),\n    top: getMargin(margin, theme, 'top'),\n    'top-right': getMargin(margin, theme, 'top-right'),\n    'top-left': getMargin(margin, theme, 'top-left')\n  };\n};\n\nvar KEYFRAMES = {\n  center: {\n    vertical: keyframes([\"0%{transform:translateX(-50%) scale(0.8);}100%{transform:translateX(-50%) scale(1);}\"]),\n    horizontal: keyframes([\"0%{transform:translateY(-50%) scale(0.8);}100%{transform:translateY(-50) scale(1);}\"]),\n    true: keyframes([\"0%{transform:scale(0.8);}100%{transform:scale(1);}\"]),\n    false: keyframes([\"0%{transform:translate(-50%,-50%) scale(0.8);}100%{transform:translate(-50%,-50%) scale(1);}\"])\n  },\n  top: {\n    vertical: keyframes([\"0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}\"]),\n    horizontal: keyframes([\"0%{transform:translateY(-100%);}100%{transform:translateY(0);}\"]),\n    true: keyframes([\"0%{transform:translateY(-100%);}100%{transform:translateY(0);}\"]),\n    false: keyframes([\"0%{transform:translate(-50%,-100%);}100%{transform:translate(-50%,0);}\"])\n  },\n  bottom: {\n    vertical: keyframes([\"0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}\"]),\n    horizontal: keyframes([\"0%{transform:translateY(100%);}100%{transform:translateY(0);}\"]),\n    true: keyframes([\"0%{transform:translateY(100%);}100%{transform:translateY(0);}\"]),\n    false: keyframes([\"0%{transform:translate(-50%,100%);}100%{transform:translate(-50%,0);}\"])\n  },\n  left: {\n    vertical: keyframes([\"0%{transform:translateX(-100%);}100%{transform:translateX(0);}\"]),\n    horizontal: keyframes([\"0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}\"]),\n    true: keyframes([\"0%{transform:translateX(-100%);}100%{transform:translateX(0);}\"]),\n    false: keyframes([\"0%{transform:translate(-100%,-50%);}100%{transform:translate(0,-50%);}\"])\n  },\n  right: {\n    vertical: keyframes([\"0%{transform:translateX(100%);}100%{transform:translateX(0);}\"]),\n    horizontal: keyframes([\"0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}\"]),\n    true: keyframes([\"0%{transform:translateX(100%);}100%{transform:translateX(0);}\"]),\n    false: keyframes([\"0%{transform:translate(100%,-50%);}100%{transform:translate(0,-50%);}\"])\n  }\n};\n\nvar getAnimationStyle = function getAnimationStyle(animate, position, full) {\n  if (animate === void 0) {\n    animate = true;\n  }\n\n  var defaultAnimation = css([\"animation:\", \" 0.2s ease-in-out forwards\"], KEYFRAMES[position][full]);\n  return animate ? defaultAnimation : '';\n}; // POSITIONS combines 'position', 'full', and 'margin' properties, since\n// they are all interdependent.\n// Basically, non-full axes combine 50% position with -50% translation.\n// full axes pin to the window edges offset by any margin.\n// The keyframe animations are included as they are done via translations\n// as well so they must take into account the non-animated positioning.\n\n\nvar POSITIONS = {\n  center: {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";left:50%;transform:translateX(-50%);\", \"\"], margin.top, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'center', 'vertical');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:50%;transform:translateY(-50%);\", \"\"], margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'center', 'horizontal');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'center', 'true');\n      });\n    },\n    false: function _false() {\n      return css([\"top:50%;left:50%;transform:translate(-50%,-50%);\", \"\"], function (props) {\n        return getAnimationStyle(props.animate, 'center', 'false');\n      });\n    }\n  },\n  top: {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";left:50%;transform:translate(-50%,0%);\", \"\"], margin.top, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'vertical');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:\", \";transform:translateY(0);\", \"\"], margin.left, margin.right, margin.top, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'horizontal');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateY(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"top:\", \";left:50%;transform:translate(-50%,0);\", \"\"], margin.top, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'false');\n      });\n    }\n  },\n  bottom: {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \" bottom:\", \";left:50%;transform:translate(-50%,0);\", \"\"], margin.top, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'vertical');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";bottom:\", \";transform:translateY(0);\", \"\"], margin.left, margin.top, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'horizontal');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateY(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"bottom:\", \";left:50%;transform:translate(-50%,0);\", \"\"], margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'false');\n      });\n    }\n  },\n  left: {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'left', 'vertical');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:50%;transform:translate(0,-50%);\", \"\"], margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'left', 'horizontal');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'left', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"left:\", \";top:50%;transform:translate(0,-50%);\", \"\"], margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'left', 'false');\n      });\n    }\n  },\n  right: {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'right', 'vertical');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:50%;transform:translate(0,-50%);\", \"\"], margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'right', 'horizontal');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'right', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"right:\", \";top:50%;transform:translate(0,-50%);\", \"\"], margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'right', 'false');\n      });\n    }\n  },\n  'top-right': {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";right:\", \";transform:translateX(0);\", \";\"], margin.top, margin.bottom, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:0;transform:translateX(0);\", \";\"], margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \";\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"top:\", \";right:\", \";transform:translateY(0);\", \";\"], margin.top, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    }\n  },\n  'top-left': {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";top:0;transform:translateX(0);\", \"\"], margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"top:\", \";left:\", \";transform:translateY(0);\", \"\"], margin.top, margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'top', 'true');\n      });\n    }\n  },\n  'bottom-right': {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";bottom:\", \";transform:translateY(0);\", \"\"], margin.left, margin.right, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"bottom:\", \";right:\", \";transform:translateY(0);\", \"\"], margin.bottom, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    }\n  },\n  'bottom-left': {\n    vertical: function vertical(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    horizontal: function horizontal(margin) {\n      return css([\"left:\", \";right:\", \";bottom:\", \";transform:translateY(0);\", \"\"], margin.left, margin.right, margin.bottom, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    true: function _true(margin) {\n      return css([\"top:\", \";bottom:\", \";left:\", \";right:\", \";transform:translateX(0);\", \"\"], margin.top, margin.bottom, margin.left, margin.right, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    },\n    false: function _false(margin) {\n      return css([\"bottom:\", \";left:\", \";transform:translateY(0);\", \"\"], margin.bottom, margin.left, function (props) {\n        return getAnimationStyle(props.animate, 'bottom', 'true');\n      });\n    }\n  }\n};\nvar desktopContainerStyle = css([\"position:\", \";max-height:\", \";max-width:\", \";border-radius:\", \";\", \";\"], function (props) {\n  return props.modal ? 'absolute' : 'fixed';\n}, function (props) {\n  return \"calc(100% - \" + MARGINS(props.margin, props.theme, 'top') + \" - \" + MARGINS(props.margin, props.theme, 'bottom') + \")\";\n}, function (props) {\n  return \"calc(100% - \" + MARGINS(props.margin, props.theme, 'left') + \" - \" + MARGINS(props.margin, props.theme, 'right') + \")\";\n}, function (props) {\n  return props.plain ? 0 : props.theme.layer.border.radius;\n}, function (props) {\n  return props.position !== 'hidden' && POSITIONS[props.position][props.full](MARGINS(props.margin, props.theme)) || '';\n});\nvar responsiveContainerStyle = css([\"position:relative;max-height:none;max-width:none;border-radius:0;top:0;bottom:0;left:0;right:0;transform:none;animation:none;height:100vh;width:100vw;\"]);\nvar StyledContainer = styled.div.withConfig({\n  displayName: \"StyledLayer__StyledContainer\",\n  componentId: \"rmtehz-2\"\n})([\"\", \" display:flex;flex-direction:column;min-height:\", \";\", \" outline:none;pointer-events:all;z-index:\", \";\", \" \", \";\"], function (props) {\n  return !props.modal ? baseStyle : '';\n}, function (props) {\n  return props.theme.global.size.xxsmall;\n}, function (props) {\n  return !props.plain && props.theme.layer.background && backgroundStyle(props.theme.layer.background, props.theme);\n}, function (props) {\n  return props.theme.layer.container.zIndex;\n}, desktopContainerStyle, function (props) {\n  if (props.responsive && props.theme.layer.responsiveBreakpoint) {\n    var breakpoint = props.theme.global.breakpoints[props.theme.layer.responsiveBreakpoint];\n\n    if (breakpoint) {\n      return breakpointStyle(breakpoint, responsiveContainerStyle);\n    }\n  }\n\n  return '';\n});\nStyledContainer.defaultProps = {};\nObject.setPrototypeOf(StyledContainer.defaultProps, defaultProps);\nexport { StyledLayer, StyledOverlay, StyledContainer };","map":null,"metadata":{},"sourceType":"module"}