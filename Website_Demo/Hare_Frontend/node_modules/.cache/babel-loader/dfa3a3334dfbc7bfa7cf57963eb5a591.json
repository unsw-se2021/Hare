{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { colorPropType, getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(RangeSelector) {\n  var DocumentedRangeSelector = describe(RangeSelector).availableAt(getAvailableAtBadge('RangeSelector')).description('A control to input a range of values.').usage(\"import { RangeSelector } from 'grommet';\\n<RangeSelector />\").intrinsicElement('div');\n  DocumentedRangeSelector.propTypes = {\n    color: colorPropType.description('What color to use to indicate the selection.'),\n    direction: PropTypes.oneOf(['horizontal', 'vertical']).description('').defaultValue('horizontal'),\n    invert: PropTypes.bool.description('Whether to indicate what has not been selected.'),\n    max: PropTypes.number.description('The maximum value permitted.').defaultValue(100),\n    messages: PropTypes.shape({\n      lower: PropTypes.string,\n      upper: PropTypes.string\n    }).description('Custom messages. Used for accessibility by screen readers.'),\n    min: PropTypes.number.description('The minimum value permitted.').defaultValue(0),\n    onChange: PropTypes.func.description(\"Function that will be called when the user changes one of the\\n      values. It will be passed an array of two numbers indicating\\n      the new values selected.\"),\n    opacity: PropTypes.oneOf(['weak', 'medium', 'strong']).description('').defaultValue('medium'),\n    round: PropTypes.oneOfType([PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'full']), PropTypes.string]).description('How much to round the corners.'),\n    size: PropTypes.oneOfType([PropTypes.oneOf(['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'full']), PropTypes.string]).description('How thick to make the selection indicator.').defaultValue('medium'),\n    step: PropTypes.number.description('The step interval between values.').defaultValue(1),\n    values: PropTypes.arrayOf(PropTypes.number).description('The current values.').isRequired\n  };\n  return DocumentedRangeSelector;\n};\nexport var themeDoc = {\n  'global.colors.controls': {\n    description: 'The color foe the edge controls',\n    type: 'string | { dark: undefined, light: undefined }',\n    defaultValue: '{dark: accent-1, light: brand}'\n  },\n  'global.spacing': {\n    description: 'The size of the edge controls thumb.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'rangeSelector.background.invert.color': {\n    description: 'The background color on an invert display',\n    type: 'string',\n    defaultValue: 'light-4'\n  },\n  'rangeSelector.edge.type': {\n    description: 'The edge style type',\n    type: 'string',\n    defaultValue: undefined\n  }\n};","map":null,"metadata":{},"sourceType":"module"}