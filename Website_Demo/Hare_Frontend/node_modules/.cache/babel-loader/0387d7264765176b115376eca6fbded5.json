{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(Form) {\n  var DocumentedForm = describe(Form).availableAt(getAvailableAtBadge('Form')).description('A form that manages state for its fields.').usage(\"import { Form } from 'grommet';\\n<Form />\").intrinsicElement('form');\n  DocumentedForm.propTypes = {\n    errors: PropTypes.shape({}).description(\"An object representing any errors in the data. They keys should\\n        match the keys in the value object.\").defaultValue({}),\n    messages: PropTypes.shape({\n      invalid: PropTypes.string,\n      required: PropTypes.string\n    }).description('Custom validation messages.').defaultValue({\n      invalid: 'invalid',\n      required: 'required'\n    }),\n    onChange: PropTypes.func.description('Function that will be called when any fields are updated.'),\n    onSubmit: PropTypes.func.description(\"Function that will be called when the form is submitted. The\\n      single argument is an event containing the latest value object\\n      via `event.value`.\"),\n    value: PropTypes.shape({}).description('An object representing all of the data in the form.').defaultValue({})\n  };\n  return DocumentedForm;\n};","map":null,"metadata":{},"sourceType":"module"}