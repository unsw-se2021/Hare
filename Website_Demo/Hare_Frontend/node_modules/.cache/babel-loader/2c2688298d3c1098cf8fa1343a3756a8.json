{"ast":null,"code":"import _classCallCheck from \"/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _inherits from \"/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/src/components/Navbar.js\";\nimport React, { Component } from 'react';\nimport { Grommet, grommet, Box, Button, Heading, Menu, Image, Text } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { browserHistory, Redirect, Route, Link, Router, withRouter } from 'react-router-dom';\nimport Home from './pages/Home'; //import Login from './Login'; \n//import Register from './Register'; \n\nimport Colors from './Color';\nimport logomark from \"./logomark.svg\";\n\nvar NavbarText = function NavbarText(Contents) {\n  return React.createElement(Text, {\n    direction: \"row\",\n    color: Colors.dark3,\n    size: \"small\",\n    weight: \"bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, Contents);\n};\n\nvar NavbarDiv = function NavbarDiv() {\n  return React.createElement(Box, {\n    width: \"50px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  });\n};\n\nvar imgprops = \"fill: \" + Colors.primary;\n\nvar NavbarObj = function NavbarObj() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Box, {\n    tag: \"header\",\n    background: Colors.grey - 3,\n    direction: \"row\",\n    elevation: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Box, {\n    direction: \"row\",\n    width: \"33%\",\n    background: Colors.grey3,\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), NavbarText(\"About\"), React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), NavbarText(\"Team\"), React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), NavbarText(\"Source Code\")), React.createElement(Box, {\n    width: \"33%\",\n    background: Colors.grey3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: logomark,\n    height: \"30px\",\n    margin: \"15px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Box, {\n    direction: \"row\",\n    align: \"center\",\n    justify: \"end\",\n    background: Colors.grey3,\n    width: \"33%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Icons.User, {\n    color: Colors.dark3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(NavbarDiv, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))));\n};\n\nvar setNavbarTransparent = function setNavbarTransparent() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, NavbarObj());\n};\n\nvar setNavbarWhite = function setNavbarWhite() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, NavbarObj());\n};\n\nvar Navbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Navbar, _Component);\n\n  function Navbar(props) {\n    var _this;\n\n    _classCallCheck(this, Navbar);\n\n    var pathname = _this.props.location.pathname;\n\n    if (_this.props.location.pathname == \"/\" || _this.props.location.pathname == \"/home\") {\n      _this.navbar = setNavbarTransparent();\n    } else {\n      _this.navbar = setNavbarWhite();\n    }\n\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(Navbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.routeChanged();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var pathname = this.props.location.pathname;\n      if (prevProps.location.pathname === pathname) return;\n      this.routeChanged();\n    }\n  }, {\n    key: \"routeChanged\",\n    value: function routeChanged() {\n      var _this$props = this.props,\n          location = _this$props.location,\n          push = _this$props.push,\n          replace = _this$props.replace,\n          actions = _this$props.actions;\n\n      if (this.props.location.pathname != \"/\" || this.props.location.pathname != \"/home\") {\n        this.navbar = setNavbarWhite();\n      } else {\n        this.navbar = setNavbarTransparent();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.navbar);\n    }\n  }]);\n\n  return Navbar;\n}(Component);\n\nexport default withRouter(Navbar);\n/*\n<div>\n\t<Box \n${navprops}>\n\t</Box> \n\n\t<Box\ntag='header' // Tag that appears in rendered HTML\nbackground='light-3' // Colour of fill \nalign='center'\npad='small' // Internal padding | --> contents <-- |\nelevation='medium' // Drop shadow \"distance\" above ground\njustify='between' // Pushes items inside of box to both sides\ndirection='row' // Stretch sideways instead of upwards \nflex={false}>\n\t<Link to='/home' style={{ textDecoration: 'none' }}> \t\n\t<Box direction=\"row\" gap=\"small\" width=\"medium\" align=\"center\" alignContent=\"center\"> \n\t<Icons.Image />\n\t<h3>Hare</h3>\t\t\t\t\n\t</Box>\n\t</Link>\n\t<Box direction=\"row\">\n\t<Button icon={<Icons.CircleQuestion />} onClick={() => { this.navigateToHelp(); } } />\n\t<Menu id='user_button'\nitems={\n\t[\n\t\t{ label: \"You aren't logged in\", disabled: true},\n\t\t{ label: 'Register', onClick: () => { this.navigateToRegister(); } },\n\t\t{ label: 'Log in', onClick: () => { this.navigateToLogin(); } }\n\t]\n}\n\nicon={<Icons.ContactInfo color='black'/>} \n\t/>\n\t</Box>\n\t</Box>\n\t</div>*/","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/src/components/Navbar.js"],"names":["React","Component","Grommet","grommet","Box","Button","Heading","Menu","Image","Text","Icons","browserHistory","Redirect","Route","Link","Router","withRouter","Home","Colors","NavbarText","Contents","dark3","NavbarDiv","imgprops","primary","NavbarObj","grey","grey3","logomark","setNavbarTransparent","setNavbarWhite","Navbar","props","pathname","location","navbar","routeChanged","prevProps","push","replace","actions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport { Grommet, grommet, Box, Button, Heading, Menu, Image, Text} from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { browserHistory, Redirect, Route, Link, Router, withRouter } from 'react-router-dom';\nimport Home from './pages/Home'; \n//import Login from './Login'; \n//import Register from './Register'; \nimport Colors from './Color'; \nimport logomark from './logomark.svg';\n\nconst NavbarText = (Contents) => { \n\treturn(\n\t\t<Text direction=\"row\" color={Colors.dark3} size=\"small\" weight=\"bold\"> \n\t\t{Contents}\n\t\t</Text> \n\t); \n};\n\nconst NavbarDiv = () => { \n\treturn( \n\t\t<Box width=\"50px\"> \n\t\t</Box> \n\t); \n}; \n\nconst imgprops = \"fill: \" + Colors.primary; \n\nconst NavbarObj = () => { \n\treturn( \n\t\t<div>\n\t\t\t<Box tag='header' \n\t\t\tbackground={Colors.grey-3}\n\t\t\tdirection=\"row\"\n\t\t\televation=\"small\">\n\t\t\t\t\t<Box direction=\"row\" width=\"33%\" background={Colors.grey3} align=\"center\">\n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t\t{NavbarText(\"About\")} \n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t\t{NavbarText(\"Team\")}\n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t\t{NavbarText(\"Source Code\")}\n\t\t\t\t\t</Box> \n\t\t\t\t\t<Box width=\"33%\" background={Colors.grey3}> \n\t\t\t\t\t\t<Image src={logomark} height=\"30px\" margin=\"15px\"/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box direction=\"row\" align=\"center\" justify=\"end\" background={Colors.grey3} width=\"33%\">\n\t\t\t\t\t\t<Icons.User color={Colors.dark3}/>\n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t\t<NavbarDiv/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box> \n\t\t</div>\n\t);\n}\n\nconst setNavbarTransparent = () => { \n\treturn(\n\t\t<div>\n\t\t{NavbarObj()}\n\t\t</div>\n\t); \n};  \n\n\nconst setNavbarWhite = () => { \n\treturn(\n\t\t<div> \n\t\t{NavbarObj()}\n\t\t</div>\n\t); \n}; \n\nclass Navbar extends Component { \n\n\tconstructor(props) {\n\t\tlet { location: { pathname } } = this.props\n\t\tif(this.props.location.pathname == \"/\" \n\t\t\t|| this.props.location.pathname == \"/home\") { \n\t\t\tthis.navbar = setNavbarTransparent();\n\t\t} else { \n\t\t\tthis.navbar = setNavbarWhite();\n\t\t} \n\t} \n\n\tnavigateToHome = () => { \n\t\tthis.props.history.push('/home'); \n\t} \n\n\tnavigateToHelp = () => {\n\t\tthis.props.history.push('/help');\n\t}\n\n\tnavigateToLogin = () => { \n\t\tthis.props.history.push('/login'); \n\t} \n\n\tnavigateToRegister = () => { \n\t\tthis.props.history.push('/register'); \n\t} \n\n  componentDidMount () {\n    this.routeChanged()\n  }\n\n  componentDidUpdate (prevProps) {\n    let { location: { pathname } } = this.props\n\n    if (prevProps.location.pathname === pathname) return\n    this.routeChanged()\n  }\n\n  routeChanged () {\n    let { location, push, replace, actions } = this.props \n\t\tif(this.props.location.pathname != \"/\" || this.props.location.pathname != \"/home\") { \n\t\t\tthis.navbar = setNavbarWhite(); \n\t\t} else { \n\t\t\tthis.navbar = setNavbarTransparent();  \n\t\t}\n    }\n\n\n\trender() { \n\t\treturn(\n\t\t<div> \n\t\t\t{this.navbar}\n\t\t</div> \n\t\t);\n\t}\n} \nexport default withRouter(Navbar);\n\n/*\n<div>\n\t<Box \n${navprops}>\n\t</Box> \n\n\t<Box\ntag='header' // Tag that appears in rendered HTML\nbackground='light-3' // Colour of fill \nalign='center'\npad='small' // Internal padding | --> contents <-- |\nelevation='medium' // Drop shadow \"distance\" above ground\njustify='between' // Pushes items inside of box to both sides\ndirection='row' // Stretch sideways instead of upwards \nflex={false}>\n\t<Link to='/home' style={{ textDecoration: 'none' }}> \t\n\t<Box direction=\"row\" gap=\"small\" width=\"medium\" align=\"center\" alignContent=\"center\"> \n\t<Icons.Image />\n\t<h3>Hare</h3>\t\t\t\t\n\t</Box>\n\t</Link>\n\t<Box direction=\"row\">\n\t<Button icon={<Icons.CircleQuestion />} onClick={() => { this.navigateToHelp(); } } />\n\t<Menu id='user_button'\nitems={\n\t[\n\t\t{ label: \"You aren't logged in\", disabled: true},\n\t\t{ label: 'Register', onClick: () => { this.navigateToRegister(); } },\n\t\t{ label: 'Log in', onClick: () => { this.navigateToLogin(); } }\n\t]\n}\n\nicon={<Icons.ContactInfo color='black'/>} \n\t/>\n\t</Box>\n\t</Box>\n\t</div>*/\n"]},"metadata":{},"sourceType":"module"}