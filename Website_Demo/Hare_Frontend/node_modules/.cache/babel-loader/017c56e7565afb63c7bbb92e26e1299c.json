{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { normalizeColor, removeUndefined } from '../../utils';\nimport { Box } from '../Box';\nimport { withForwardRef } from '../hocs';\nimport { StyledRadioButton, StyledRadioButtonContainer, StyledRadioButtonIcon, StyledRadioButtonInput, StyledRadioButtonBox } from './StyledRadioButton';\n\nvar RadioButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(RadioButton, _Component);\n\n  function RadioButton() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = RadioButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        checked = _this$props.checked,\n        disabled = _this$props.disabled,\n        focus = _this$props.focus,\n        forwardRef = _this$props.forwardRef,\n        id = _this$props.id,\n        label = _this$props.label,\n        name = _this$props.name,\n        onChange = _this$props.onChange,\n        theme = _this$props.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"checked\", \"disabled\", \"focus\", \"forwardRef\", \"id\", \"label\", \"name\", \"onChange\", \"theme\"]);\n\n    var normalizedLabel = typeof label === 'string' ? React.createElement(\"span\", null, label) : label;\n    var Icon = theme.radioButton.icons.circle;\n    var borderColor = normalizeColor(theme.radioButton.border.color, theme);\n\n    if (checked) {\n      borderColor = normalizeColor(theme.radioButton.color || 'control', theme);\n    }\n\n    return React.createElement(StyledRadioButtonContainer, _extends({\n      as: function as(props) {\n        return React.createElement(Box, _extends({\n          as: \"label\"\n        }, props));\n      },\n      direction: \"row\",\n      align: \"center\"\n    }, removeUndefined({\n      htmlFor: id,\n      disabled: disabled\n    }), {\n      onClick: function onClick(event) {\n        // prevents clicking on the label trigging the event twice\n        // https://stackoverflow.com/questions/24501497/why-the-onclick-element-will-trigger-twice-for-label-element\n        if (event.target.type !== 'radio') {\n          event.stopPropagation();\n        }\n      }\n    }), React.createElement(StyledRadioButton, {\n      as: Box,\n      margin: {\n        right: theme.radioButton.gap || 'small'\n      }\n    }, React.createElement(StyledRadioButtonInput, _extends({}, rest, {\n      ref: forwardRef,\n      type: \"radio\"\n    }, removeUndefined({\n      id: id,\n      name: name,\n      checked: checked,\n      disabled: disabled,\n      onChange: onChange\n    }))), React.createElement(StyledRadioButtonBox, {\n      focus: focus,\n      as: Box,\n      align: \"center\",\n      justify: \"center\",\n      width: theme.radioButton.size,\n      height: theme.radioButton.size,\n      border: {\n        size: theme.radioButton.border.width,\n        color: borderColor\n      },\n      round: theme.radioButton.check.radius\n    }, checked && (Icon ? React.createElement(Icon, {\n      as: StyledRadioButtonIcon\n    }) : React.createElement(StyledRadioButtonIcon, {\n      viewBox: \"0 0 24 24\",\n      preserveAspectRatio: \"xMidYMid meet\"\n    }, React.createElement(\"circle\", {\n      cx: 12,\n      cy: 12,\n      r: 6\n    }))))), normalizedLabel);\n  };\n\n  return RadioButton;\n}(Component);\n\nRadioButton.defaultProps = {};\nObject.setPrototypeOf(RadioButton.defaultProps, defaultProps);\nvar RadioButtonDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioButtonDoc = require('./doc').doc(RadioButton); // eslint-disable-line global-require\n}\n\nvar RadioButtonWrapper = compose(withTheme, withForwardRef)(RadioButtonDoc || RadioButton);\nexport { RadioButtonWrapper as RadioButton };","map":null,"metadata":{},"sourceType":"module"}