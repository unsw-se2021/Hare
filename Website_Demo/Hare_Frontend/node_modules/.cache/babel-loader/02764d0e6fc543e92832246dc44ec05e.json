{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { normalizeColor } from '../../utils';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Collapsible } from '../Collapsible';\nimport { Heading } from '../Heading';\nimport { withForwardRef } from '../hocs';\nimport { AccordionContext } from '../Accordion/AccordionContext';\n\nvar AccordionPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(AccordionPanel, _Component);\n\n  function AccordionPanel() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(_args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      hover: undefined\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOver\", function () {\n      var _this$props = _this.props,\n          onMouseOver = _this$props.onMouseOver,\n          dark = _this$props.theme.dark;\n\n      _this.setState({\n        hover: dark ? 'light-4' : 'dark-3'\n      });\n\n      if (onMouseOver) {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        onMouseOver(args);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOut\", function () {\n      var onMouseOut = _this.props.onMouseOut;\n\n      _this.setState({\n        hover: undefined\n      });\n\n      if (onMouseOut) {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        onMouseOut(args);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocus\", function () {\n      var _this$props2 = _this.props,\n          onFocus = _this$props2.onFocus,\n          dark = _this$props2.theme.dark;\n\n      _this.setState({\n        hover: dark ? 'light-4' : 'dark-3'\n      });\n\n      if (onFocus) {\n        for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        onFocus(args);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onBlur\", function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        hover: undefined\n      });\n\n      if (onBlur) {\n        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          args[_key5] = arguments[_key5];\n        }\n\n        onBlur(args);\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = AccordionPanel.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props3 = this.props,\n        children = _this$props3.children,\n        header = _this$props3.header,\n        label = _this$props3.label,\n        theme = _this$props3.theme,\n        onMouseOut = _this$props3.onMouseOut,\n        onMouseOver = _this$props3.onMouseOver,\n        onFocus = _this$props3.onFocus,\n        onBlur = _this$props3.onBlur,\n        rest = _objectWithoutPropertiesLoose(_this$props3, [\"children\", \"header\", \"label\", \"theme\", \"onMouseOut\", \"onMouseOver\", \"onFocus\", \"onBlur\"]);\n\n    var hover = this.state.hover;\n    var iconColor = normalizeColor(theme.accordion.icons.color || 'control', theme);\n    return React.createElement(AccordionContext.Consumer, null, function (panelContext) {\n      var active = panelContext.active,\n          animate = panelContext.animate,\n          onPanelChange = panelContext.onPanelChange;\n      var AccordionIcon = active ? theme.accordion.icons.collapse : theme.accordion.icons.expand;\n      return React.createElement(Box, {\n        flex: false\n      }, React.createElement(Button, {\n        role: \"tab\",\n        \"aria-selected\": active,\n        \"aria-expanded\": active,\n        onClick: onPanelChange,\n        onMouseOver: _this2.onMouseOver,\n        onMouseOut: _this2.onMouseOut,\n        onFocus: _this2.onFocus,\n        onBlur: _this2.onBlur\n      }, header || React.createElement(Box, _extends({\n        align: \"center\",\n        direction: \"row\",\n        justify: \"between\"\n      }, rest), typeof label === 'string' ? React.createElement(Box, {\n        pad: {\n          horizontal: 'xsmall'\n        }\n      }, React.createElement(Heading, {\n        level: 4,\n        color: hover\n      }, label)) : label, AccordionIcon && React.createElement(Box, {\n        pad: {\n          horizontal: 'small'\n        }\n      }, React.createElement(AccordionIcon, {\n        color: iconColor\n      })))), React.createElement(Box, {\n        border: {\n          side: 'bottom',\n          color: 'border'\n        }\n      }, animate ? React.createElement(Collapsible, {\n        open: active\n      }, children) : active && children));\n    });\n  };\n\n  return AccordionPanel;\n}(Component);\n\nAccordionPanel.defaultProps = {};\nObject.setPrototypeOf(AccordionPanel.defaultProps, defaultProps);\nvar AccordionPanelDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionPanelDoc = require('./doc').doc(AccordionPanel); // eslint-disable-line global-require\n}\n\nvar AccordionPanelWrapper = compose(withTheme, withForwardRef)(AccordionPanelDoc || AccordionPanel);\nexport { AccordionPanelWrapper as AccordionPanel };","map":null,"metadata":{},"sourceType":"module"}