{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\n\nvar Value = function Value(_ref) {\n  var basis = _ref.basis,\n      children = _ref.children;\n  return React.createElement(Box, {\n    basis: basis,\n    flex: \"shrink\",\n    overflow: \"hidden\"\n  }, children);\n};\n\nValue.propTypes = {\n  basis: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nvar Distribution =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Distribution, _Component);\n\n  function Distribution() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Distribution.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        basis = _this$props.basis,\n        children = _this$props.children,\n        direction = _this$props.direction,\n        fill = _this$props.fill,\n        gap = _this$props.gap,\n        values = _this$props.values,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"basis\", \"children\", \"direction\", \"fill\", \"gap\", \"values\"]);\n\n    if (values.length === 1) {\n      var value = values[0];\n      return React.createElement(Value, {\n        value: value,\n        basis: basis\n      }, children(value));\n    }\n\n    if (values.length > 1) {\n      // calculate total\n      var total = 0;\n      values.forEach(function (v) {\n        total += v.value;\n      }); // figure out how many of the values area needed to represent half of the total\n\n      var subTotal = 0;\n      var subIndex;\n      values.some(function (v, index) {\n        subTotal += v.value;\n\n        if (subTotal >= total * 0.4) {\n          subIndex = index + 1;\n          return true;\n        }\n\n        return false;\n      });\n\n      if (subIndex === values.length) {\n        var _value = values[0];\n        return React.createElement(Value, {\n          value: _value,\n          basis: basis\n        }, children(_value));\n      }\n\n      var childBasis;\n\n      if (subTotal > total * 0.7) {\n        childBasis = ['3/4', '1/4'];\n      } else if (subTotal > total * 0.6) {\n        childBasis = ['2/3', '1/3'];\n      } else {\n        childBasis = ['1/2', '1/2'];\n      }\n\n      return React.createElement(Box, _extends({\n        direction: direction,\n        basis: basis,\n        flex: basis ? 'shrink' : true,\n        overflow: \"hidden\",\n        gap: gap,\n        fill: fill\n      }, rest), React.createElement(Distribution, {\n        values: values.slice(0, subIndex),\n        basis: childBasis[0],\n        direction: direction === 'row' ? 'column' : 'row',\n        gap: gap\n      }, children), React.createElement(Distribution, {\n        values: values.slice(subIndex),\n        basis: childBasis[1],\n        direction: direction === 'row' ? 'column' : 'row',\n        gap: gap\n      }, children));\n    }\n\n    return null;\n  };\n\n  return Distribution;\n}(Component);\n\n_defineProperty(Distribution, \"defaultProps\", {\n  basis: undefined,\n  children: function children(value) {\n    return React.createElement(Box, {\n      fill: true,\n      border: true\n    }, React.createElement(Text, null, value.value));\n  },\n  direction: 'row',\n  gap: 'xsmall',\n  values: []\n});\n\nvar DistributionDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  DistributionDoc = require('./doc').doc(Distribution); // eslint-disable-line global-require\n}\n\nvar DistributionWrapper = DistributionDoc || Distribution;\nexport { DistributionWrapper as Distribution };","map":null,"metadata":{},"sourceType":"module"}