{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Text } from '../Text';\nimport { withForwardRef } from '../hocs';\nimport { normalizeColor } from '../../utils';\nimport { StyledTab } from './StyledTab';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tab, _Component);\n\n  function Tab() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOver\", function (event) {\n      var onMouseOver = _this.props.onMouseOver;\n\n      _this.setState({\n        over: true\n      });\n\n      if (onMouseOver) {\n        onMouseOver(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOut\", function (event) {\n      var onMouseOut = _this.props.onMouseOut;\n\n      _this.setState({\n        over: undefined\n      });\n\n      if (onMouseOut) {\n        onMouseOut(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickTab\", function (event) {\n      var onActivate = _this.props.onActivate;\n\n      if (event) {\n        event.preventDefault();\n      }\n\n      onActivate();\n    });\n\n    return _this;\n  }\n\n  Tab.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var active = nextProps.active;\n    var over = prevState.over;\n\n    if (active && over) {\n      return {\n        over: undefined\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Tab.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        forwardRef = _this$props.forwardRef,\n        plain = _this$props.plain,\n        title = _this$props.title,\n        onMouseOver = _this$props.onMouseOver,\n        onMouseOut = _this$props.onMouseOut,\n        theme = _this$props.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"forwardRef\", \"plain\", \"title\", \"onMouseOver\", \"onMouseOut\", \"theme\"]);\n\n    var over = this.state.over;\n    delete rest.onActivate;\n    var normalizedTitle = title;\n    var tabStyles = {};\n\n    if (!plain) {\n      if (typeof title !== 'string') {\n        normalizedTitle = title;\n      } else if (active) {\n        normalizedTitle = React.createElement(Text, theme.tab.active, title);\n      } else {\n        normalizedTitle = React.createElement(Text, {\n          color: over ? theme.tab.hover.color : theme.tab.color\n        }, title);\n      }\n\n      if (theme.tab.border) {\n        var borderColor = theme.tab.border.color || theme.global.control.border.color;\n\n        if (active) {\n          borderColor = theme.tab.border.active.color || borderColor;\n        } else if (over) {\n          borderColor = theme.tab.border.hover.color || borderColor;\n        }\n\n        borderColor = normalizeColor(borderColor, theme);\n        tabStyles.border = {\n          side: theme.tab.border.side,\n          size: theme.tab.border.size,\n          color: borderColor\n        };\n      }\n\n      tabStyles.background = active ? theme.tab.active.background || theme.tab.background : theme.tab.background;\n      tabStyles.pad = theme.tab.pad;\n      tabStyles.margin = theme.tab.margin;\n    }\n\n    return React.createElement(Button, _extends({\n      ref: forwardRef,\n      plain: true,\n      role: \"tab\",\n      \"aria-selected\": active,\n      \"aria-expanded\": active\n    }, rest, {\n      onClick: this.onClickTab,\n      onMouseOver: this.onMouseOver,\n      onMouseOut: this.onMouseOut,\n      onFocus: this.onMouseOver,\n      onBlur: this.onMouseOut\n    }), React.createElement(StyledTab, _extends({\n      as: Box,\n      plain: plain\n    }, tabStyles), normalizedTitle));\n  };\n\n  return Tab;\n}(Component);\n\nTab.defaultProps = {};\nObject.setPrototypeOf(Tab.defaultProps, defaultProps);\nvar TabDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  TabDoc = require('./doc').doc(Tab); // eslint-disable-line global-require\n}\n\nvar TabWrapper = compose(withTheme, withForwardRef)(TabDoc || Tab);\nexport { TabWrapper as Tab };","map":null,"metadata":{},"sourceType":"module"}