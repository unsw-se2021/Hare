{"ast":null,"code":"import { css } from 'styled-components';\nimport { normalizeColor } from './colors';\nimport { breakpointStyle, parseMetricToNum } from './mixins';\nexport var baseStyle = css([\"font-family:\", \";font-size:\", \";line-height:\", \";font-weight:\", \";\", \" box-sizing:border-box;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;\"], function (props) {\n  return props.theme.global.font.family;\n}, function (props) {\n  return props.theme.global.font.size;\n}, function (props) {\n  return props.theme.global.font.height;\n}, function (props) {\n  return props.theme.global.font.weight;\n}, function (props) {\n  return !props.plain && props.theme.global.colors.background && css([\"background:\", \";color:\", \";\"], normalizeColor('background', props.theme, true), normalizeColor('text', props.theme, true));\n});\nexport var controlBorderStyle = css([\"border:\", \" solid \", \";border-radius:\", \";\"], function (props) {\n  return props.theme.global.control.border.width;\n}, function (props) {\n  return normalizeColor('border', props.theme);\n}, function (props) {\n  return props.theme.global.control.border.radius;\n});\nexport var edgeStyle = function edgeStyle(kind, data, responsive, responsiveBreakpoint, theme) {\n  var breakpoint = responsiveBreakpoint && theme.global.breakpoints[responsiveBreakpoint];\n\n  if (typeof data === 'string') {\n    return css([\"\", \":\", \";\", \";\"], kind, theme.global.edgeSize[data] || data, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \": \" + (breakpoint.edgeSize[data] || data) + \";\\n      \") : '');\n  }\n\n  var result = [];\n\n  if (data.horizontal) {\n    result.push(css([\"\", \"-left:\", \";\", \"-right:\", \";\", \";\"], kind, theme.global.edgeSize[data.horizontal] || data.horizontal, kind, theme.global.edgeSize[data.horizontal] || data.horizontal, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-left: \" + (breakpoint.edgeSize[data.horizontal] || data.horizontal) + \";\\n        \" + kind + \"-right: \" + (breakpoint.edgeSize[data.horizontal] || data.horizontal) + \";\\n      \") : ''));\n  }\n\n  if (data.vertical) {\n    result.push(css([\"\", \"-top:\", \";\", \"-bottom:\", \";\", \";\"], kind, theme.global.edgeSize[data.vertical] || data.vertical, kind, theme.global.edgeSize[data.vertical] || data.vertical, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-top: \" + (breakpoint.edgeSize[data.vertical] || data.vertical) + \";\\n        \" + kind + \"-bottom: \" + (breakpoint.edgeSize[data.vertical] || data.vertical) + \";\\n      \") : ''));\n  }\n\n  if (data.top) {\n    result.push(css([\"\", \"-top:\", \";\", \";\"], kind, theme.global.edgeSize[data.top] || data.top, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-top: \" + (breakpoint.edgeSize[data.top] || data.top) + \";\\n      \") : ''));\n  }\n\n  if (data.bottom) {\n    result.push(css([\"\", \"-bottom:\", \";\", \";\"], kind, theme.global.edgeSize[data.bottom] || data.bottom, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-bottom: \" + (breakpoint.edgeSize[data.bottom] || data.bottom) + \";\\n      \") : ''));\n  }\n\n  if (data.left) {\n    result.push(css([\"\", \"-left:\", \";\", \";\"], kind, theme.global.edgeSize[data.left] || data.left, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-left: \" + (breakpoint.edgeSize[data.left] || data.left) + \";\\n      \") : ''));\n  }\n\n  if (data.right) {\n    result.push(css([\"\", \"-right:\", \";\", \";\"], kind, theme.global.edgeSize[data.right] || data.right, responsive && breakpoint ? breakpointStyle(breakpoint, \"\\n        \" + kind + \"-right: \" + (breakpoint.edgeSize[data.right] || data.right) + \";\\n      \") : ''));\n  }\n\n  return result;\n}; // focus also supports clickable elements inside svg\n\nexport var focusStyle = css([\"> circle,> ellipse,> line,> path,> polygon,> polyline,> rect{outline:\", \" solid 2px;}border-color:\", \";box-shadow:0 0 2px 2px \", \";::-moz-focus-inner{border:0;}\"], function (props) {\n  return normalizeColor(props.theme.global.focus.border.color, props.theme);\n}, function (props) {\n  return normalizeColor(props.theme.global.focus.border.color, props.theme);\n}, function (props) {\n  return normalizeColor(props.theme.global.focus.border.color, props.theme);\n});\nexport var inputStyle = css([\"box-sizing:border-box;font-size:inherit;border:none;-webkit-appearance:none;padding:\", \"px;outline:none;background:transparent;color:inherit;\", \" margin:0;\", \" \", \"::-webkit-search-decoration{-webkit-appearance:none;}\"], function (props) {\n  return parseMetricToNum(props.theme.global.input.padding) - parseMetricToNum(props.theme.global.control.border.width);\n}, function (props) {\n  return props.theme.global.input.weight && css([\"font-weight:\", \";\"], props.theme.global.input.weight);\n}, function (props) {\n  return props.focus && (!props.plain || props.focusIndicator) && focusStyle;\n}, controlBorderStyle);\nexport var overflowStyle = function overflowStyle(overflowProp) {\n  if (typeof overflowProp === 'string') {\n    return css([\"overflow:\", \";\"], overflowProp);\n  }\n\n  return css([\"\", \" \", \";\"], overflowProp.horizontal && \"overflow-x: \" + overflowProp.horizontal + \";\", overflowProp.vertical && \"overflow-y: \" + overflowProp.vertical + \";\");\n};\nvar placeholderColor = css([\"color:\", \";\"], function (props) {\n  return props.theme.global.colors.placeholder;\n});\nexport var placeholderStyle = css([\"&::-webkit-input-placeholder{\", \";}&::-moz-placeholder{\", \";}&:-ms-input-placeholder{\", \";}\"], placeholderColor, placeholderColor, placeholderColor); // evalStyle() converts a styled-components item into a string\n\nexport var evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n\n  return arg;\n};\nvar ALIGN_SELF_MAP = {\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nexport var genericStyles = css([\"\", \" \", \" \", \"\"], function (props) {\n  return props.alignSelf && \"align-self: \" + ALIGN_SELF_MAP[props.alignSelf] + \";\";\n}, function (props) {\n  return props.gridArea && \"grid-area: \" + props.gridArea + \";\";\n}, function (props) {\n  return props.margin && edgeStyle('margin', props.margin, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);\n});","map":null,"metadata":{},"sourceType":"module"}