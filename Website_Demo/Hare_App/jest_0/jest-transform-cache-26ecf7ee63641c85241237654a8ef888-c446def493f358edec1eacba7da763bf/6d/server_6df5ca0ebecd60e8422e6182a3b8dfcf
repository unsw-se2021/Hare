c508d41d19d28bd859f1af59b7ca2a08
// Package imports 
const express = require('express');

const mongoose = require('mongoose');

const bodyParser = require('body-parser');

const compression = require('compression');

const cookieParser = require('cookie-parser');

const http = require('http');

const https = require('https');

const morgan = require('morgan'); // Express declarations 


const backport = 8081;
const frontport = 8080;
const deployport = 80;
const app = express();

const start = () => {
  app.use(bodyParser.json());
  app.use(compression());
  app.use(cookieParser());
  app.use(morgan('combined'));
}; // Database declarations 
//const database = require('.//db_keys'); 


module.exports = {
  "backport": backport,
  "frontport": frontport,
  "deployport": "80"
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiYm9keVBhcnNlciIsImNvbXByZXNzaW9uIiwiY29va2llUGFyc2VyIiwiaHR0cCIsImh0dHBzIiwibW9yZ2FuIiwiYmFja3BvcnQiLCJmcm9udHBvcnQiLCJkZXBsb3lwb3J0IiwiYXBwIiwic3RhcnQiLCJ1c2UiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNRyxXQUFXLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLE1BQU1JLFlBQVksR0FBR0osT0FBTyxDQUFDLGVBQUQsQ0FBNUI7O0FBQ0EsTUFBTUssSUFBSSxHQUFHTCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNTSxLQUFLLEdBQUdOLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU1PLE1BQU0sR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBdEIsQyxDQUVBOzs7QUFDQSxNQUFNUSxRQUFRLEdBQUcsSUFBakI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsSUFBbEI7QUFDQSxNQUFNQyxVQUFVLEdBQUcsRUFBbkI7QUFDQSxNQUFNQyxHQUFHLEdBQUdaLE9BQU8sRUFBbkI7O0FBQ0EsTUFBTWEsS0FBSyxHQUFHLE1BQU07QUFDbkJELEVBQUFBLEdBQUcsQ0FBQ0UsR0FBSixDQUFRWCxVQUFVLENBQUNZLElBQVgsRUFBUjtBQUNBSCxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUVYsV0FBVyxFQUFuQjtBQUNBUSxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUVQsWUFBWSxFQUFwQjtBQUNBTyxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUU4sTUFBTSxDQUFDLFVBQUQsQ0FBZDtBQUNBLENBTEQsQyxDQU9BO0FBQ0E7OztBQU9BUSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDaEIsY0FBWVIsUUFESTtBQUVoQixlQUFhQyxTQUZHO0FBR2hCLGdCQUFjO0FBSEUsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBQYWNrYWdlIGltcG9ydHMgXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpOyBcbmNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTsgXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTsgXG5jb25zdCBjb21wcmVzc2lvbiA9IHJlcXVpcmUoJ2NvbXByZXNzaW9uJyk7XG5jb25zdCBjb29raWVQYXJzZXIgPSByZXF1aXJlKCdjb29raWUtcGFyc2VyJyk7IFxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTsgXG5jb25zdCBodHRwcyA9IHJlcXVpcmUoJ2h0dHBzJyk7XG5jb25zdCBtb3JnYW4gPSByZXF1aXJlKCdtb3JnYW4nKTsgXG5cbi8vIEV4cHJlc3MgZGVjbGFyYXRpb25zIFxuY29uc3QgYmFja3BvcnQgPSA4MDgxOyBcbmNvbnN0IGZyb250cG9ydCA9IDgwODA7XG5jb25zdCBkZXBsb3lwb3J0ID0gODA7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7IFxuY29uc3Qgc3RhcnQgPSAoKSA9PiB7IFxuXHRhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTsgXG5cdGFwcC51c2UoY29tcHJlc3Npb24oKSk7IFxuXHRhcHAudXNlKGNvb2tpZVBhcnNlcigpKTsgXG5cdGFwcC51c2UobW9yZ2FuKCdjb21iaW5lZCcpKTsgXG59OyBcblxuLy8gRGF0YWJhc2UgZGVjbGFyYXRpb25zIFxuLy9jb25zdCBkYXRhYmFzZSA9IHJlcXVpcmUoJy4vL2RiX2tleXMnKTsgXG5cblxuXG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJiYWNrcG9ydFwiOiBiYWNrcG9ydCwgXG5cdFwiZnJvbnRwb3J0XCI6IGZyb250cG9ydCxcblx0XCJkZXBsb3lwb3J0XCI6IFwiODBcIlxufSBcbiJdfQ==