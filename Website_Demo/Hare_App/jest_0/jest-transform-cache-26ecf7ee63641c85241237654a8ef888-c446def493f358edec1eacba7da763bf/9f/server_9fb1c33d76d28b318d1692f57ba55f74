4b22436878fe85c8ee5d9b0ec5e59efc
// Package imports 
const express = require('express');

const mongoose = require('mongoose');

const bodyParser = require('body-parser');

const compression = require('compression');

const cookieParser = require('cookie-parser');

const http = require('http');

const https = require('https');

const morgan = require('morgan'); // Express declarations 


const backport = 8081;
const frontport = 8080;
const deployport = 80;
const app = express();

const start = () => {
  app.use(bodyParser.json());
  app.use(compression());
  app.use(cookieParser());
  app.use(morgan('combined'));
}; // Database declarations 
//const database = require('.//db_keys'); 


module.exports = {
  "backport": backport,
  "frontport": frontport,
  "deployport": deployport
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiYm9keVBhcnNlciIsImNvbXByZXNzaW9uIiwiY29va2llUGFyc2VyIiwiaHR0cCIsImh0dHBzIiwibW9yZ2FuIiwiYmFja3BvcnQiLCJmcm9udHBvcnQiLCJkZXBsb3lwb3J0IiwiYXBwIiwic3RhcnQiLCJ1c2UiLCJqc29uIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU1DLFFBQVEsR0FBR0QsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsYUFBRCxDQUExQjs7QUFDQSxNQUFNRyxXQUFXLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQTNCOztBQUNBLE1BQU1JLFlBQVksR0FBR0osT0FBTyxDQUFDLGVBQUQsQ0FBNUI7O0FBQ0EsTUFBTUssSUFBSSxHQUFHTCxPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNTSxLQUFLLEdBQUdOLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU1PLE1BQU0sR0FBR1AsT0FBTyxDQUFDLFFBQUQsQ0FBdEIsQyxDQUVBOzs7QUFDQSxNQUFNUSxRQUFRLEdBQUcsSUFBakI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsSUFBbEI7QUFDQSxNQUFNQyxVQUFVLEdBQUcsRUFBbkI7QUFDQSxNQUFNQyxHQUFHLEdBQUdaLE9BQU8sRUFBbkI7O0FBQ0EsTUFBTWEsS0FBSyxHQUFHLE1BQU07QUFDbkJELEVBQUFBLEdBQUcsQ0FBQ0UsR0FBSixDQUFRWCxVQUFVLENBQUNZLElBQVgsRUFBUjtBQUNBSCxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUVYsV0FBVyxFQUFuQjtBQUNBUSxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUVQsWUFBWSxFQUFwQjtBQUNBTyxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUU4sTUFBTSxDQUFDLFVBQUQsQ0FBZDtBQUNBLENBTEQsQyxDQU9BO0FBQ0E7OztBQU9BUSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDaEIsY0FBWVIsUUFESTtBQUVoQixlQUFhQyxTQUZHO0FBR2hCLGdCQUFjQztBQUhFLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gUGFja2FnZSBpbXBvcnRzIFxuY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTsgXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7IFxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7IFxuY29uc3QgY29tcHJlc3Npb24gPSByZXF1aXJlKCdjb21wcmVzc2lvbicpO1xuY29uc3QgY29va2llUGFyc2VyID0gcmVxdWlyZSgnY29va2llLXBhcnNlcicpOyBcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7IFxuY29uc3QgaHR0cHMgPSByZXF1aXJlKCdodHRwcycpO1xuY29uc3QgbW9yZ2FuID0gcmVxdWlyZSgnbW9yZ2FuJyk7IFxuXG4vLyBFeHByZXNzIGRlY2xhcmF0aW9ucyBcbmNvbnN0IGJhY2twb3J0ID0gODA4MTsgXG5jb25zdCBmcm9udHBvcnQgPSA4MDgwO1xuY29uc3QgZGVwbG95cG9ydCA9IDgwO1xuY29uc3QgYXBwID0gZXhwcmVzcygpOyBcbmNvbnN0IHN0YXJ0ID0gKCkgPT4geyBcblx0YXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7IFxuXHRhcHAudXNlKGNvbXByZXNzaW9uKCkpOyBcblx0YXBwLnVzZShjb29raWVQYXJzZXIoKSk7IFxuXHRhcHAudXNlKG1vcmdhbignY29tYmluZWQnKSk7IFxufTsgXG5cbi8vIERhdGFiYXNlIGRlY2xhcmF0aW9ucyBcbi8vY29uc3QgZGF0YWJhc2UgPSByZXF1aXJlKCcuLy9kYl9rZXlzJyk7IFxuXG5cblxuXG5cblxubW9kdWxlLmV4cG9ydHMgPSB7XG5cdFwiYmFja3BvcnRcIjogYmFja3BvcnQsIFxuXHRcImZyb250cG9ydFwiOiBmcm9udHBvcnQsXG5cdFwiZGVwbG95cG9ydFwiOiBkZXBsb3lwb3J0XG59IFxuIl19