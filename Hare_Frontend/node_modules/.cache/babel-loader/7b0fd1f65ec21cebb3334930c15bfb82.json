{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/styles/Style.js\";\n//\nimport Colors from './Color.js';\nimport React, { Component } from 'react';\nimport { Text } from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nvar Title = function Title(input, colors) {\n  var apply = Colors.dark3;\n\n  if (colors !== undefined || colors !== null) {\n    var _apply = colors;\n  }\n\n  return React.createElement(Text, {\n    size: \"36pt\",\n    color: apply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, input);\n};\n\nvar SubTitle = function SubTitle(input) {\n  var ptsize = \"12pt\";\n  return React.createElement(Text, {\n    size: ptsize,\n    color: Colors.grey1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, input);\n};\n\nvar Hint = function Hint(hint, colors) {\n  var ptsize = \"12pt\";\n  var ptcolor = Colors.grey2;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, hint);\n};\n\nvar Body = function Body(input) {\n  var ptsize = \"12pt\";\n  var ptcolor = Colors.dark3;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, input);\n};\n\nvar BodyColored = function BodyColored(input, color) {\n  var ptsize = \"12pt\";\n  var ptcolor = color;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, input);\n};\n\nexport default {\n  Title: Title,\n  SubTitle: SubTitle,\n  Hint: Hint,\n  Body: Body,\n  BodyColored: BodyColored\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/styles/Style.js"],"names":["Colors","React","Component","Text","Icons","Title","input","colors","apply","dark3","undefined","SubTitle","ptsize","grey1","Hint","hint","ptcolor","grey2","Body","BodyColored","color"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,QAEO,SAFP;AAGA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7B,MAAIC,KAAK,GAAGR,MAAM,CAACS,KAAnB;;AACA,MAAGF,MAAM,KAAKG,SAAX,IAAwBH,MAAM,KAAK,IAAtC,EAA4C;AACxC,QAAIC,MAAK,GAAGD,MAAZ;AACH;;AACD,SACF,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KADF,CADE;AAKH,CAVD;;AAYA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACL,KAAD,EAAW;AACxB,MAAIM,MAAM,GAAG,MAAb;AACA,SACF,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,MAAZ;AAAoB,IAAA,KAAK,EAAEZ,MAAM,CAACa,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEP,KADF,CADE;AAKH,CAPD;;AASA,IAAMQ,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAOR,MAAP,EAAkB;AAC3B,MAAIK,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGhB,MAAM,CAACiB,KAArB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ;AAKH,CARD;;AAUA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACZ,KAAD,EAAW;AACpB,MAAIM,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGhB,MAAM,CAACS,KAArB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEG,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KADL,CADJ;AAKH,CARD;;AAUA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACb,KAAD,EAAQc,KAAR,EAAkB;AAClC,MAAIR,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGI,KAAd;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAER,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KADL,CADJ;AAKH,CARD;;AAUA,eAAe;AACXD,EAAAA,KAAK,EAALA,KADW;AAEXM,EAAAA,QAAQ,EAARA,QAFW;AAGXG,EAAAA,IAAI,EAAJA,IAHW;AAIXI,EAAAA,IAAI,EAAJA,IAJW;AAKXC,EAAAA,WAAW,EAAXA;AALW,CAAf","sourcesContent":["//\nimport Colors from './Color.js';\nimport React, { Component } from 'react'; \nimport {\n    Text,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nconst Title = (input, colors) => { \n    let apply = Colors.dark3 \n    if(colors !== undefined || colors !== null) { \n        let apply = colors;\n    }\n    return( \n\t\t<Text size=\"36pt\" color={apply}> \n\t\t\t{input} \n\t\t</Text> \n    );\n};\n\nconst SubTitle = (input) => { \n    let ptsize = \"12pt\";\n    return( \n\t\t<Text size={ptsize} color={Colors.grey1}> \n\t\t\t{input}\n\t\t</Text> \n    );\n};\n\nconst Hint = (hint, colors) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = Colors.grey2;\n    return( \n        <Text size={ptsize} color={ptcolor}>\n            {hint}\n        </Text> \n    );\n};\n\nconst Body = (input) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = Colors.dark3; \n    return( \n        <Text size={ptsize} color={ptcolor}> \n            {input}\n        </Text> \n    );\n};\n\nconst BodyColored = (input, color) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = color; \n    return(\n        <Text size={ptsize} color={ptcolor}>\n            {input}\n        </Text> \n    );\n};\n\nexport default { \n    Title, \n    SubTitle, \n    Hint, \n    Body, \n    BodyColored \n}"]},"metadata":{},"sourceType":"module"}