{"ast":null,"code":"import axios from \"axios\";\nvar backendurl = 'https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io';\n\nvar startAuthService = function startAuthService() {\n  var key = localStorage.getItem('auth');\n\n  if (key === undefined || key === null) {\n    console.log(\"Auth service started: Not logged in.\");\n  } else {\n    console.log(\"Auth service started: Logged in\");\n  }\n}; // Log user in or out using set usr/pass\n\n\nvar authenticateUser = function authenticateUser(usr, pass) {\n  var p_user = String(usr);\n  var p_pass = String(pass);\n  var request = {\n    username: p_user,\n    password: p_pass\n  };\n  return axios.post(\"\".concat(backendurl, \"/auth\"), request);\n};\n\nvar setAuthKey = function setAuthKey(key) {\n  if (key != null && key !== undefined) {\n    axios.get().then(function (res) {\n      localStorage.setItem('userdata', res.data);\n      localStorage.setItem('auth', key);\n    });\n  } else {\n    console.log(\"INVALID KEY STORE ATTEMPT\");\n  }\n}; // Find out if the user is logged in or out \n\n\nvar hasAuthKey = function hasAuthKey() {\n  var key = localStorage.getItem('auth');\n  var authval = false;\n\n  if (key !== undefined && key !== null) {\n    authval = true;\n  }\n\n  if (authval == true) {\n    console.log(\"[AuthService.js isAuthenticated()]: authval is truthy\");\n    console.log(\"[ARGS]: \", authval, key);\n    return authval;\n  } else {\n    console.log(\"[AuthService.js isAuthenticated()]: Invalid authval\");\n    console.log(\"[ARGS]: \", authval, \"from\", localStorage.getItem('auth'));\n    return authval;\n  }\n};\n\nvar LogOut = function LogOut() {\n  localStorage.clear();\n};\n\nexport default {\n  startAuthService: startAuthService,\n  authenticateUser: authenticateUser,\n  setAuthKey: setAuthKey,\n  hasAuthKey: hasAuthKey,\n  LogOut: LogOut\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/actions/AuthService.js"],"names":["axios","backendurl","startAuthService","key","localStorage","getItem","undefined","console","log","authenticateUser","usr","pass","p_user","String","p_pass","request","username","password","post","setAuthKey","get","then","res","setItem","data","hasAuthKey","authval","LogOut","clear"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,4DAAnB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B,MAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAV;;AACA,MAAGF,GAAG,KAAKG,SAAR,IAAqBH,GAAG,KAAK,IAAhC,EAAsC;AACrCI,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,GAFD,MAEO;AACND,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA;AACD,CAPD,C,CASA;;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,IAAN,EAAe;AACvC,MAAIC,MAAM,GAAGC,MAAM,CAACH,GAAD,CAAnB;AACA,MAAII,MAAM,GAAGD,MAAM,CAACF,IAAD,CAAnB;AACA,MAAII,OAAO,GAAG;AACbC,IAAAA,QAAQ,EAAEJ,MADG;AAEbK,IAAAA,QAAQ,EAAEH;AAFG,GAAd;AAKA,SACCd,KAAK,CAACkB,IAAN,WAAcjB,UAAd,YAAiCc,OAAjC,CADD;AAGA,CAXD;;AAaA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAChB,GAAD,EAAS;AAC3B,MAAGA,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAKG,SAA1B,EAAqC;AACpCN,IAAAA,KAAK,CAACoB,GAAN,GACCC,IADD,CACM,UAAAC,GAAG,EAAI;AACZlB,MAAAA,YAAY,CAACmB,OAAb,CAAqB,UAArB,EAAiCD,GAAG,CAACE,IAArC;AACApB,MAAAA,YAAY,CAACmB,OAAb,CAAqB,MAArB,EAA6BpB,GAA7B;AACA,KAJD;AAKA,GAND,MAMO;AACNI,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACD,CAVD,C,CAYA;;;AACA,IAAMiB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,MAAItB,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAV;AACA,MAAIqB,OAAO,GAAG,KAAd;;AACA,MAAIvB,GAAG,KAAKG,SAAR,IAAqBH,GAAG,KAAK,IAAjC,EAAuC;AACtCuB,IAAAA,OAAO,GAAG,IAAV;AACA;;AAED,MAAGA,OAAO,IAAI,IAAd,EAAoB;AACnBnB,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkB,OAAxB,EAAiCvB,GAAjC;AACA,WAAOuB,OAAP;AACA,GAJD,MAIO;AACNnB,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBkB,OAAxB,EAAiC,MAAjC,EAAyCtB,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAzC;AACA,WAAOqB,OAAP;AACA;AACD,CAhBD;;AAkBA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACpBvB,EAAAA,YAAY,CAACwB,KAAb;AACA,CAFD;;AAIA,eAAe;AACd1B,EAAAA,gBAAgB,EAAhBA,gBADc;AAEdO,EAAAA,gBAAgB,EAAhBA,gBAFc;AAGdU,EAAAA,UAAU,EAAVA,UAHc;AAIdM,EAAAA,UAAU,EAAVA,UAJc;AAKdE,EAAAA,MAAM,EAANA;AALc,CAAf","sourcesContent":["\nimport axios from \"axios\";\n\nconst backendurl = 'https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io';\n\nconst startAuthService = () => { \n\tlet key = localStorage.getItem('auth'); \n\tif(key === undefined || key === null) { \n\t\tconsole.log(\"Auth service started: Not logged in.\");\n\t} else { \n\t\tconsole.log(\"Auth service started: Logged in\");\n\t}\n}\n\n// Log user in or out using set usr/pass\nconst authenticateUser = (usr, pass) => {\n\tlet p_user = String(usr);\n\tlet p_pass = String(pass);\n\tlet request = { \n\t\tusername: p_user,\n\t\tpassword: p_pass,\n\t};\n\n\treturn ( \n\t\taxios.post(`${backendurl}/auth`, request)\n\t)\n} \n\nconst setAuthKey = (key) => { \n\tif(key != null && key !== undefined) { \n\t\taxios.get()\n\t\t.then(res => { \n\t\t\tlocalStorage.setItem('userdata', res.data);\n\t\t\tlocalStorage.setItem('auth', key); \n\t\t});\n\t} else { \n\t\tconsole.log(\"INVALID KEY STORE ATTEMPT\");\n\t}\n}\n\n// Find out if the user is logged in or out \nconst hasAuthKey = () => { \n\tlet key = localStorage.getItem('auth');\n\tlet authval = false; \n\tif (key !== undefined && key !== null) { \n\t\tauthval = true; \n\t}\n\n\tif(authval == true) { \n\t\tconsole.log(\"[AuthService.js isAuthenticated()]: authval is truthy\"); \n\t\tconsole.log(\"[ARGS]: \", authval, key); \n\t\treturn authval; \t\n\t} else { \n\t\tconsole.log(\"[AuthService.js isAuthenticated()]: Invalid authval\"); \n\t\tconsole.log(\"[ARGS]: \", authval, \"from\", localStorage.getItem('auth')); \n\t\treturn authval; \n\t} \n} \n\nconst LogOut = () => { \n\tlocalStorage.clear(); \n} \n\nexport default { \n\tstartAuthService,\n\tauthenticateUser, \n\tsetAuthKey, \n\thasAuthKey, \n\tLogOut\n} \n"]},"metadata":{},"sourceType":"module"}