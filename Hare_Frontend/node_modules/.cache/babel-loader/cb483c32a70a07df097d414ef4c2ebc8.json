{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport { defaultProps } from '../../default-props';\nimport { FormContext } from './FormContext';\nvar defaultMessages = {\n  invalid: 'invalid',\n  required: 'required'\n};\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      errors: {},\n      value: {},\n      touched: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"validations\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSubmit\", function (event) {\n      var onSubmit = _this.props.onSubmit;\n      var _this$state = _this.state,\n          errors = _this$state.errors,\n          value = _this$state.value; // Don't submit the form via browser form action. We don't want it\n      // if the validation fails. And, we assume a javascript action handler\n      // otherwise.\n\n      event.preventDefault();\n\n      var nextErrors = _extends({}, errors);\n\n      Object.keys(_this.validations).forEach(function (name) {\n        var validate = _this.validations[name];\n        var error = validate && validate(value[name], value);\n\n        if (error) {\n          nextErrors[name] = error;\n        } else {\n          delete nextErrors[name];\n        }\n      });\n\n      if (Object.keys(nextErrors).length === 0 && onSubmit) {\n        event.persist(); // extract from React's synthetic event pool\n\n        var adjustedEvent = event;\n        adjustedEvent.value = value;\n        onSubmit(adjustedEvent);\n      } else {\n        _this.setState({\n          errors: nextErrors\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"update\", function (name, data, error) {\n      var _this$state2 = _this.state,\n          errors = _this$state2.errors,\n          touched = _this$state2.touched,\n          value = _this$state2.value;\n\n      var nextValue = _extends({}, value);\n\n      nextValue[name] = data;\n\n      var nextTouched = _extends({}, touched);\n\n      nextTouched[name] = true;\n\n      var nextErrors = _extends({}, errors);\n\n      if (errors[name]) {\n        var nextError = error || _this.validations[name] && _this.validations[name](data, nextValue);\n\n        if (nextError) {\n          nextErrors[name] = nextError;\n        } else {\n          delete nextErrors[name];\n        }\n      }\n\n      _this.setState({\n        value: nextValue,\n        errors: nextErrors,\n        touched: nextTouched\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"addValidation\", function (name, validate) {\n      _this.validations[name] = validate;\n    });\n\n    return _this;\n  }\n\n  Form.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var value = nextProps.value,\n        errors = nextProps.errors,\n        messages = nextProps.messages;\n    var stateValue = prevState.value,\n        stateErrors = prevState.errors,\n        priorValue = prevState.priorValue,\n        priorErrors = prevState.priorErrors,\n        priorMessages = prevState.priorMessages;\n\n    if (!priorValue || value !== priorValue || errors !== priorErrors || messages !== priorMessages) {\n      return {\n        value: value !== priorValue ? value : stateValue,\n        priorValue: value,\n        errors: (errors !== priorErrors ? errors : stateErrors) || {},\n        priorErrors: errors,\n        messages: _extends({}, defaultMessages, messages),\n        priorMessages: messages\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Form.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n    delete rest.messages;\n    delete rest.theme;\n    delete rest.value;\n    var _this$state3 = this.state,\n        errors = _this$state3.errors,\n        touched = _this$state3.touched,\n        value = _this$state3.value,\n        messages = _this$state3.messages;\n    return React.createElement(\"form\", _extends({}, rest, {\n      onSubmit: this.onSubmit\n    }), React.createElement(FormContext.Provider, {\n      value: {\n        addValidation: this.addValidation,\n        errors: errors,\n        messages: messages,\n        touched: touched,\n        update: this.update,\n        value: value\n      }\n    }, children));\n  };\n\n  return Form;\n}(Component);\n\n_defineProperty(Form, \"defaultProps\", {\n  messages: defaultMessages,\n  value: {}\n});\n\nObject.setPrototypeOf(Form.defaultProps, defaultProps);\nvar FormDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  FormDoc = require('./doc').doc(Form); // eslint-disable-line global-require\n}\n\nvar FormWrapper = FormDoc || Form;\nFormWrapper.displayName = 'Form';\nexport { FormWrapper as Form };","map":null,"metadata":{},"sourceType":"module"}