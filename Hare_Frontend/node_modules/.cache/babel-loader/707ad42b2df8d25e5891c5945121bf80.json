{"ast":null,"code":"import axios from \"axios\";\nvar backendurl = 'https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/'; // Log user in or out using set usr/pass\n\nvar authenticateUser = function authenticateUser(usr, pass) {\n  var p_usr = String(usr);\n  var p_pass = String(pass);\n  var request = {\n    username: p_user,\n    password: p_pass\n  };\n}; // Find out if the user is logged in or out \n\n\nvar isAuthenticated = function isAuthenticated() {\n  var authval = String(localStorage.getItem('auth'));\n\n  if (Boolean(authval)) {\n    console.log(\"[AuthService.js isAuthenticated()]: authval is truthy\");\n    console.log(\"[ARGS]: \", authval);\n    return authval;\n  } else {\n    console.log(\"[AuthService.js isAuthenticated()]: Invalid authval\");\n    console.log(\"[ARGS]: \", authval, \"from\", localStorage.getItem('auth'));\n    return authval;\n  }\n};\n\nvar LogOut = function LogOut() {\n  setPasswordLS(null);\n  setUsernameLS(null);\n  authenticateUser();\n};\n\nexport default {\n  setUsernameLS: setUsernameLS,\n  setPasswordLS: setPasswordLS,\n  authenticateUser: authenticateUser,\n  isAuthenticated: isAuthenticated,\n  LogOut: LogOut\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/actions/AuthService.js"],"names":["axios","backendurl","authenticateUser","usr","pass","p_usr","String","p_pass","request","username","p_user","password","isAuthenticated","authval","localStorage","getItem","Boolean","console","log","LogOut","setPasswordLS","setUsernameLS"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,6DAAnB,C,CAEA;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,IAAN,EAAe;AACvC,MAAIC,KAAK,GAAGC,MAAM,CAACH,GAAD,CAAlB;AACA,MAAII,MAAM,GAAGD,MAAM,CAACF,IAAD,CAAnB;AACA,MAAII,OAAO,GAAG;AACbC,IAAAA,QAAQ,EAAEC,MADG;AAEbC,IAAAA,QAAQ,EAAEJ;AAFG,GAAd;AAMA,CATD,C,CAWA;;;AACA,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,MAAIC,OAAO,GAAGP,MAAM,CAACQ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAApB;;AACA,MAAGC,OAAO,CAACH,OAAD,CAAV,EAAqB;AACpBI,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,OAAxB;AACA,WAAOA,OAAP;AACA,GAJD,MAIO;AACNI,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,OAAxB,EAAiC,MAAjC,EAAyCC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAzC;AACA,WAAOF,OAAP;AACA;AACD,CAXD;;AAaA,IAAMM,MAAM,GAAG,SAATA,MAAS,GAAM;AACpBC,EAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,EAAAA,aAAa,CAAC,IAAD,CAAb;AACAnB,EAAAA,gBAAgB;AAChB,CAJD;;AAMA,eAAe;AACdmB,EAAAA,aAAa,EAAbA,aADc;AAEdD,EAAAA,aAAa,EAAbA,aAFc;AAGdlB,EAAAA,gBAAgB,EAAhBA,gBAHc;AAIdU,EAAAA,eAAe,EAAfA,eAJc;AAKdO,EAAAA,MAAM,EAANA;AALc,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst backendurl = 'https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/';\n\n// Log user in or out using set usr/pass\nconst authenticateUser = (usr, pass) => {\n\tlet p_usr = String(usr);\n\tlet p_pass = String(pass);\n\tlet request = { \n\t\tusername: p_user,\n\t\tpassword: p_pass,\n\t}\n\n\n} \n\n// Find out if the user is logged in or out \nconst isAuthenticated = () => { \n\tlet authval = String(localStorage.getItem('auth'));\n\tif(Boolean(authval)) { \n\t\tconsole.log(\"[AuthService.js isAuthenticated()]: authval is truthy\"); \n\t\tconsole.log(\"[ARGS]: \", authval); \n\t\treturn authval; \t\n\t} else { \n\t\tconsole.log(\"[AuthService.js isAuthenticated()]: Invalid authval\"); \n\t\tconsole.log(\"[ARGS]: \", authval, \"from\", localStorage.getItem('auth')); \n\t\treturn authval; \n\t} \n} \n\nconst LogOut = () => { \n\tsetPasswordLS(null); \n\tsetUsernameLS(null); \n\tauthenticateUser(); \n} \n\nexport default { \n\tsetUsernameLS, \n\tsetPasswordLS,\n\tauthenticateUser, \n\tisAuthenticated,\n\tLogOut\n} \n"]},"metadata":{},"sourceType":"module"}