{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport styled, { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Button } from '../Button';\nimport { Box } from '../Box';\nvar SorterButton = styled(Button).withConfig({\n  displayName: \"Sorter__SorterButton\",\n  componentId: \"fzr2yb-0\"\n})([\"flex-shrink:1;height:100%;\"]);\n\nvar Sorter = function Sorter(_ref) {\n  var align = _ref.align,\n      children = _ref.children,\n      fill = _ref.fill,\n      onSort = _ref.onSort,\n      property = _ref.property,\n      sort = _ref.sort,\n      theme = _ref.theme,\n      themeProps = _ref.themeProps;\n  var icon;\n\n  if (sort && sort.property === property) {\n    var Icon = theme.dataTable.icons[sort.ascending ? 'ascending' : 'descending'];\n    icon = React.createElement(Icon, null);\n  }\n\n  var content = React.createElement(Box, _extends({}, themeProps, {\n    flex: \"shrink\",\n    direction: \"row\",\n    justify: align,\n    align: \"center\",\n    gap: \"xsmall\",\n    fill: fill\n  }), children, icon);\n\n  if (onSort) {\n    content = React.createElement(SorterButton, {\n      fill: fill,\n      hoverIndicator: true,\n      onClick: onSort(property)\n    }, content);\n  }\n\n  return content;\n};\n\nSorter.defaultProps = {};\nObject.setPrototypeOf(Sorter.defaultProps, defaultProps);\nvar SorterWrapper = compose(withTheme)(Sorter);\nexport { SorterWrapper as Sorter };","map":null,"metadata":{},"sourceType":"module"}