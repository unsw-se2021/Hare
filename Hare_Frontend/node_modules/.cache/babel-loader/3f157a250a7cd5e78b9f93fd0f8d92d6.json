{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Children, Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { normalizeColor } from '../../utils';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Keyboard } from '../Keyboard';\nimport { Stack } from '../Stack';\nimport { withFocus } from '../hocs';\n\nvar Carousel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Carousel, _Component);\n\n  function Carousel() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      activeIndex: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"play\", function () {\n      var play = _this.props.play;\n      clearInterval(_this.timer);\n      _this.timer = setInterval(function () {\n        var children = _this.props.children;\n        var activeIndex = _this.state.activeIndex;\n        var lastIndex = Children.count(children) - 1;\n\n        if (activeIndex < lastIndex) {\n          _this.setState({\n            activeIndex: activeIndex + 1,\n            priorActiveIndex: activeIndex\n          });\n        } else {\n          _this.setState({\n            activeIndex: 0,\n            priorActiveIndex: activeIndex\n          });\n        }\n      }, play);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onRight\", function () {\n      var activeIndex = _this.state.activeIndex;\n      clearInterval(_this.timer);\n\n      _this.setState({\n        activeIndex: activeIndex + 1,\n        priorActiveIndex: activeIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onLeft\", function () {\n      var activeIndex = _this.state.activeIndex;\n      clearInterval(_this.timer);\n\n      _this.setState({\n        activeIndex: activeIndex - 1,\n        priorActiveIndex: activeIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onSelect\", function (index) {\n      return function () {\n        var activeIndex = _this.state.activeIndex;\n        clearInterval(_this.timer);\n\n        _this.setState({\n          activeIndex: index,\n          priorActiveIndex: activeIndex\n        });\n      };\n    });\n\n    return _this;\n  }\n\n  var _proto = Carousel.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var play = this.props.play;\n\n    if (play) {\n      this.play();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var play = this.props.play;\n\n    if (play && (!prevProps.play || play !== prevProps.play)) {\n      this.play();\n    } else if (!play && prevProps.play) {\n      clearInterval(this.timer);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    clearInterval(this.timer);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        fill = _this$props.fill,\n        focus = _this$props.focus,\n        theme = _this$props.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"fill\", \"focus\", \"theme\"]);\n\n    var _this$state = this.state,\n        activeIndex = _this$state.activeIndex,\n        priorActiveIndex = _this$state.priorActiveIndex;\n    var lastIndex = Children.count(children) - 1;\n    var onLeft = activeIndex > 0 ? this.onLeft : undefined;\n    var onRight = activeIndex < lastIndex ? this.onRight : undefined;\n    var CurrentIcon = theme.carousel.icons.current;\n    var iconColor = normalizeColor(theme.carousel.icons.color || 'control', theme);\n    var selectors = [];\n    var wrappedChildren = Children.map(children, function (child, index) {\n      selectors.push(React.createElement(Button // eslint-disable-next-line react/no-array-index-key\n      , {\n        key: index,\n        icon: React.createElement(CurrentIcon, {\n          color: activeIndex === index ? iconColor : undefined\n        }),\n        onClick: _this2.onSelect(index)\n      }));\n      var animation;\n\n      if (index === activeIndex) {\n        if (priorActiveIndex !== undefined) {\n          animation = {\n            type: priorActiveIndex < activeIndex ? 'slideLeft' : 'slideRight',\n            size: 'xlarge'\n          };\n        }\n      } else if (index === priorActiveIndex) {\n        animation = {\n          type: 'fadeOut'\n        };\n      } else {\n        animation = {\n          type: 'fadeOut',\n          duration: 0\n        };\n      }\n\n      return React.createElement(Box, {\n        overflow: \"hidden\"\n      }, React.createElement(Box, {\n        animation: animation\n      }, child));\n    });\n    var NextIcon = theme.carousel.icons.next;\n    var PreviousIcon = theme.carousel.icons.previous;\n    return React.createElement(Keyboard, {\n      onLeft: onLeft,\n      onRight: onRight\n    }, React.createElement(Stack, _extends({\n      guidingChild: activeIndex,\n      fill: fill\n    }, rest), wrappedChildren, React.createElement(Box, {\n      tabIndex: \"0\",\n      focus: focus,\n      fill: true,\n      direction: \"row\",\n      justify: \"between\"\n    }, React.createElement(Box, {\n      fill: \"vertical\"\n    }, React.createElement(Button, {\n      fill: true,\n      disabled: activeIndex <= 0,\n      onClick: onLeft,\n      hoverIndicator: true\n    }, React.createElement(Box, {\n      justify: \"center\"\n    }, React.createElement(PreviousIcon, null)))), React.createElement(Box, {\n      justify: \"end\"\n    }, React.createElement(Box, {\n      direction: \"row\",\n      justify: \"center\"\n    }, selectors)), React.createElement(Box, {\n      fill: \"vertical\"\n    }, React.createElement(Button, {\n      fill: true,\n      disabled: activeIndex >= lastIndex,\n      onClick: onRight,\n      hoverIndicator: true\n    }, React.createElement(Box, {\n      justify: \"center\"\n    }, React.createElement(NextIcon, null)))))));\n  };\n\n  return Carousel;\n}(Component);\n\nCarousel.defaultProps = {};\nObject.setPrototypeOf(Carousel.defaultProps, defaultProps);\nvar CarouselDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  CarouselDoc = require('./doc').doc(Carousel); // eslint-disable-line global-require\n}\n\nvar CarouselWrapper = compose(withFocus(), withTheme)(CarouselDoc || Carousel);\nexport { CarouselWrapper as Carousel };","map":null,"metadata":{},"sourceType":"module"}