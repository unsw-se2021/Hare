{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Heading } from '../Heading';\nimport { Keyboard } from '../Keyboard';\nimport { StyledCalendar, StyledDay, StyledDayContainer, StyledWeek, StyledWeeks, StyledWeeksContainer } from './StyledCalendar';\nimport { addDays, addMonths, betweenDates, daysApart, endOfMonth, startOfMonth, subtractDays, subtractMonths, withinDates, updateDateRange } from './utils';\nvar headingPadMap = {\n  small: 'xsmall',\n  medium: 'small',\n  large: 'medium'\n};\n\nvar buildStartEnd = function buildStartEnd(reference, firstDayOfWeek) {\n  var start = new Date(reference);\n  start.setDate(1); // first of month\n\n  start = subtractDays(start, start.getDay() - firstDayOfWeek); // beginning of week\n\n  var end = addDays(start, 7 * 5 + 7); // 5 weeks to end of week\n\n  return {\n    start: start,\n    end: end\n  };\n};\n\nvar buildState = function buildState(props) {\n  var date = props.date,\n      dates = props.dates,\n      firstDayOfWeek = props.firstDayOfWeek,\n      reference = props.reference;\n  var normalizedReference;\n\n  if (reference) {\n    normalizedReference = new Date(reference);\n  } else if (date) {\n    normalizedReference = new Date(date);\n  } else if (dates && dates.length > 0) {\n    if (typeof dates[0] === 'string') {\n      normalizedReference = new Date(dates[0]);\n    } else if (Array.isArray(dates[0])) {\n      normalizedReference = new Date(dates[0][0]);\n    } else {\n      normalizedReference = new Date();\n    }\n  } else {\n    normalizedReference = new Date();\n  }\n\n  return _extends({}, buildStartEnd(normalizedReference, firstDayOfWeek), {\n    reference: normalizedReference\n  });\n};\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Calendar, _Component);\n\n  function Calendar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"dayRefs\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clearSlideStateLater\", function () {\n      clearTimeout(_this.timer);\n      _this.timer = setTimeout(function () {\n        var targetStartEnd = _this.state.targetStartEnd;\n\n        if (targetStartEnd) {\n          _this.setState({\n            start: targetStartEnd.start,\n            end: targetStartEnd.end,\n            targetStartEnd: undefined,\n            slide: undefined\n          });\n        } // Wait for animation to finish before cleaning up. Empirically determined.\n\n      }, 800);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setReference\", function (reference) {\n      var _this$props = _this.props,\n          animate = _this$props.animate,\n          bounds = _this$props.bounds,\n          firstDayOfWeek = _this$props.firstDayOfWeek,\n          onReference = _this$props.onReference;\n      var _this$state = _this.state,\n          start = _this$state.start,\n          end = _this$state.end,\n          targetStartEnd = _this$state.targetStartEnd;\n\n      if (betweenDates(reference, bounds)) {\n        var nextStartEnd = buildStartEnd(reference, firstDayOfWeek);\n        var nextState = {\n          reference: reference\n        }; // if we're changing too fast, bypass animation\n\n        if (!animate || targetStartEnd) {\n          nextState.targetStartEnd = nextStartEnd;\n          nextState.start = nextStartEnd.start;\n          nextState.end = nextStartEnd.end;\n          nextState.targetStartEnd = undefined;\n          nextState.slide = undefined;\n        } else {\n          nextState.targetStartEnd = nextStartEnd;\n\n          if (nextStartEnd.start.getTime() < start.getTime()) {\n            nextState.start = nextStartEnd.start;\n            nextState.slide = {\n              direction: 'down',\n              weeks: daysApart(start, nextStartEnd.start) / 7\n            };\n          } else if (nextStartEnd.end.getTime() > end.getTime()) {\n            nextState.end = nextStartEnd.end;\n            nextState.slide = {\n              direction: 'up',\n              weeks: daysApart(nextStartEnd.end, end) / 7\n            };\n          }\n        }\n\n        _this.clearSlideStateLater();\n\n        _this.setState(nextState, function () {\n          if (onReference) {\n            onReference(reference.toISOString());\n          }\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocus\", function (day) {\n      return function () {\n        var bounds = _this.props.bounds;\n        var reference = _this.state.reference;\n\n        if (betweenDates(day, bounds)) {\n          _this.setState({\n            focused: day\n          }, function () {\n            if (day.getMonth() !== reference.getMonth()) {\n              _this.setReference(day);\n            }\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClickDay\", function (dateString) {\n      return function () {\n        var _this$props2 = _this.props,\n            onSelect = _this$props2.onSelect,\n            range = _this$props2.range;\n\n        if (range) {\n          var nextState = updateDateRange(dateString, _this.state);\n\n          _this.setState(nextState);\n\n          if (onSelect) {\n            onSelect(nextState.dates || nextState.date || undefined);\n          }\n        } else if (onSelect) {\n          onSelect(dateString);\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setFocus\", function (day) {\n      var ref = _this.dayRefs[day.toISOString()];\n\n      if (ref && ref.current) {\n        ref.current.focus();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderCalendarHeader\", function (previousMonth, nextMonth) {\n      var _this$props3 = _this.props,\n          bounds = _this$props3.bounds,\n          locale = _this$props3.locale,\n          size = _this$props3.size,\n          theme = _this$props3.theme;\n      var reference = _this.state.reference;\n      var PreviousIcon = size === 'small' ? theme.calendar.icons.small.previous : theme.calendar.icons.previous;\n      var NextIcon = size === 'small' ? theme.calendar.icons.small.next : theme.calendar.icons.next;\n      return React.createElement(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        align: \"center\"\n      }, React.createElement(Box, {\n        flex: true,\n        pad: {\n          horizontal: headingPadMap[size] || 'small'\n        }\n      }, React.createElement(Heading, {\n        level: size === 'small' ? 4 : 3,\n        size: size,\n        margin: \"none\"\n      }, reference.toLocaleDateString(locale, {\n        month: 'long',\n        year: 'numeric'\n      }))), React.createElement(Box, {\n        flex: false,\n        direction: \"row\",\n        align: \"center\"\n      }, React.createElement(Button, {\n        a11yTitle: previousMonth.toLocaleDateString(locale, {\n          month: 'long',\n          year: 'numeric'\n        }),\n        icon: React.createElement(PreviousIcon, {\n          size: size !== 'small' ? size : undefined\n        }),\n        disabled: !betweenDates(previousMonth, bounds),\n        onClick: function onClick() {\n          return _this.setReference(previousMonth);\n        }\n      }), React.createElement(Button, {\n        a11yTitle: nextMonth.toLocaleDateString(locale, {\n          month: 'long',\n          year: 'numeric'\n        }),\n        icon: React.createElement(NextIcon, {\n          size: size !== 'small' ? size : undefined\n        }),\n        disabled: !betweenDates(nextMonth, bounds),\n        onClick: function onClick() {\n          return _this.setReference(nextMonth);\n        }\n      })));\n    });\n\n    return _this;\n  }\n\n  Calendar.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var reference = nextProps.reference;\n    var prevReference = prevState.reference;\n\n    if (Object.prototype.hasOwnProperty.call(nextProps, 'date') || Object.prototype.hasOwnProperty.call(nextProps, 'dates') || !prevReference || reference) {\n      var state = {};\n\n      if (Object.prototype.hasOwnProperty.call(nextProps, 'date') || Object.prototype.hasOwnProperty.call(nextProps, 'dates')) {\n        state.date = nextProps.date;\n        state.dates = nextProps.dates;\n      }\n\n      if (!prevReference || reference) {\n        state = _extends({}, state, buildState(nextProps));\n      }\n\n      return state;\n    }\n\n    return null;\n  };\n\n  var _proto = Calendar.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var focused = this.state.focused;\n\n    if (focused) {\n      var ref = this.dayRefs[focused.toISOString()];\n\n      if (ref && ref.current && ref.current !== document.activeElement) {\n        ref.current.focus();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    clearTimeout(this.timer);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props4 = this.props,\n        bounds = _this$props4.bounds,\n        dateProp = _this$props4.date,\n        datesProp = _this$props4.dates,\n        disabled = _this$props4.disabled,\n        firstDayOfWeek = _this$props4.firstDayOfWeek,\n        header = _this$props4.header,\n        locale = _this$props4.locale,\n        onReference = _this$props4.onReference,\n        onSelect = _this$props4.onSelect,\n        range = _this$props4.range,\n        showAdjacentDays = _this$props4.showAdjacentDays,\n        size = _this$props4.size,\n        theme = _this$props4.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props4, [\"bounds\", \"date\", \"dates\", \"disabled\", \"firstDayOfWeek\", \"header\", \"locale\", \"onReference\", \"onSelect\", \"range\", \"showAdjacentDays\", \"size\", \"theme\"]);\n\n    var _this$state2 = this.state,\n        date = _this$state2.date,\n        dates = _this$state2.dates,\n        focused = _this$state2.focused,\n        start = _this$state2.start,\n        reference = _this$state2.reference,\n        end = _this$state2.end,\n        slide = _this$state2.slide; // We have to deal with reference being the end of a month with more\n    // days than the month we are changing to. So, we always set reference\n    // to the first of the month before changing the month.\n\n    var previousMonth = endOfMonth(subtractMonths(startOfMonth(reference), 1));\n    var nextMonth = startOfMonth(addMonths(startOfMonth(reference), 1));\n    var weeks = [];\n    var day = new Date(start);\n    var days;\n    this.dayRefs = {};\n\n    while (day.getTime() < end.getTime()) {\n      if (day.getDay() === firstDayOfWeek) {\n        if (days) {\n          weeks.push(React.createElement(StyledWeek, {\n            key: day.getTime()\n          }, days));\n        }\n\n        days = [];\n      }\n\n      var otherMonth = day.getMonth() !== reference.getMonth();\n\n      if (!showAdjacentDays && otherMonth) {\n        days.push(React.createElement(StyledDayContainer, {\n          key: day.getTime(),\n          sizeProp: size\n        }, React.createElement(StyledDay, {\n          sizeProp: size\n        })));\n      } else {\n        var dateString = day.toISOString();\n        this.dayRefs[dateString] = React.createRef();\n        var selected = false;\n        var inRange = false;\n        var selectedState = withinDates(day, date || dates);\n\n        if (selectedState === 2) {\n          selected = true;\n        } else if (selectedState === 1) {\n          inRange = true;\n        }\n\n        var dayDisabled = withinDates(day, disabled) || bounds && !betweenDates(day, bounds);\n        days.push(React.createElement(StyledDayContainer, {\n          key: day.getTime(),\n          sizeProp: size\n        }, React.createElement(Button, {\n          ref: this.dayRefs[dateString],\n          a11yTitle: day.toDateString(),\n          plain: true,\n          hoverIndicator: !dayDisabled,\n          disabled: dayDisabled,\n          onClick: this.onClickDay(dateString),\n          onFocus: this.onFocus(day),\n          onBlur: function onBlur() {\n            return _this2.setState({\n              focused: false\n            });\n          }\n        }, React.createElement(StyledDay, {\n          inRange: inRange,\n          otherMonth: day.getMonth() !== reference.getMonth(),\n          isSelected: selected,\n          sizeProp: size\n        }, day.getDate()))));\n      }\n\n      day = addDays(day, 1);\n    }\n\n    weeks.push(React.createElement(StyledWeek, {\n      key: day.getTime()\n    }, days));\n    return React.createElement(StyledCalendar, _extends({\n      sizeProp: size\n    }, rest), React.createElement(Keyboard, {\n      onUp: function onUp(event) {\n        event.preventDefault();\n\n        _this2.setFocus(addDays(focused, -7));\n      },\n      onDown: function onDown(event) {\n        event.preventDefault();\n\n        _this2.setFocus(addDays(focused, 7));\n      },\n      onLeft: function onLeft() {\n        return focused && _this2.setFocus(addDays(focused, -1));\n      },\n      onRight: function onRight() {\n        return focused && _this2.setFocus(addDays(focused, 1));\n      }\n    }, React.createElement(Box, null, header ? header({\n      date: reference,\n      locale: locale,\n      onPreviousMonth: function onPreviousMonth() {\n        return _this2.setReference(previousMonth);\n      },\n      onNextMonth: function onNextMonth() {\n        return _this2.setReference(nextMonth);\n      },\n      previousInBound: betweenDates(previousMonth, bounds),\n      nextInBound: betweenDates(nextMonth, bounds)\n    }) : this.renderCalendarHeader(previousMonth, nextMonth), React.createElement(StyledWeeksContainer, {\n      sizeProp: size\n    }, React.createElement(StyledWeeks, {\n      slide: slide,\n      sizeProp: size\n    }, weeks)))));\n  };\n\n  return Calendar;\n}(Component);\n\n_defineProperty(Calendar, \"defaultProps\", {\n  animate: true,\n  firstDayOfWeek: 0,\n  size: 'medium',\n  locale: 'en-US',\n  showAdjacentDays: true\n});\n\nObject.setPrototypeOf(Calendar.defaultProps, defaultProps);\nvar CalendarDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  CalendarDoc = require('./doc').doc(Calendar); // eslint-disable-line global-require\n}\n\nvar CalendarWrapper = compose(withTheme)(CalendarDoc || Calendar);\nexport { CalendarWrapper as Calendar };","map":null,"metadata":{},"sourceType":"module"}