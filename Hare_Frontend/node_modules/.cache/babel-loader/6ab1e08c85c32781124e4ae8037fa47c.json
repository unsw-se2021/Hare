{"ast":null,"code":"import _classCallCheck from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Upload.js\";\n// The page that users can use to upload an image, open to guests and users \n// Primary component: UploadPage\nimport React, { Component, createRef } from 'react';\nimport { Grommet, grommet, Box, Button, Heading, Menu, Paragraph, Text, Meter, Image, Layer, Drop } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { Switch, BrowserRouter as Router, browserHistory, Redirect, withRouter, Link } from 'react-router-dom'; // IMPORT: Style components \n\nimport Style from './styles/Style';\nimport Colors from './styles/Color'; // IMPORT: Action scripts \n\nimport AuthService from './actions/AuthService';\nimport ScanService from './actions/ScanService'; // IMPORT: React Pages \n\nimport Home from './Home';\n\nvar UploadPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UploadPage, _Component);\n\n  // ---------------------------------\t\n  // LIFE CYCLE MODIFIERS\n  // ---------------------------------\n  function UploadPage(props) {\n    var _this;\n\n    _classCallCheck(this, UploadPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadPage).call(this, props));\n\n    _this.modifyState = function (newState) {\n      _this.setState(newState);\n    };\n\n    _this.uploadHandler = function (event) {\n      var reader = new FileReader();\n      var file = event.target.files[0];\n\n      _this.setState({\n        error: undefined\n      }); // Try the code below, if it fails, produce an error msg\n\n\n      try {\n        // If too large, throw err \n        if (file.size / 1024 / 1024 > 5) {\n          throw \"File is too large (> 5mb)\";\n        } // Convert to b64\n\n\n        reader.readAsDataURL(event.target.files[0]);\n\n        _this.setState({\n          file: event.target.files[0]\n        });\n\n        reader.onload = function (e) {\n          // Set b64 image data\n          _this.setState({\n            imgurl: e.target.result\n          });\n\n          ScanService.getProductID(e.target.result).then(function (res) {\n            if (res.data.error !== undefined) {\n              throw res.data.error;\n            }\n\n            _this.setState({\n              product_id: res.data.product_id\n            });\n          }).catch(function (error) {\n            _this.setState({\n              error: e\n            });\n\n            throw e;\n          });\n        };\n      } catch (e) {\n        console.log(\"ERROR: uploadHandler: \", e);\n\n        _this.setState({\n          product_id: undefined,\n          imgurl: undefined,\n          file: undefined,\n          error: e\n        });\n\n        _this.render();\n      }\n    };\n\n    _this.errhandler = function () {\n      if (_this.state.error !== undefined) {\n        return React.createElement(Box, {\n          direction: \"row\",\n          justify: \"between\",\n          margin: {\n            top: \"medium\",\n            bottom: \"small\"\n          },\n          background: \"#ff9999\",\n          width: \"325px\",\n          border: {\n            color: \"red\"\n          },\n          round: \"xsmall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"row\",\n          gap: \"small\",\n          align: \"center\",\n          pad: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Icons.Alert, {\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"red\",\n          size: \"12pt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, _this.state.error)), React.createElement(Button, {\n          icon: React.createElement(Icons.Close, {\n            color: \"red\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }),\n          onClick: function onClick() {\n            _this.setState({\n              error: undefined\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.imagePreview = function () {\n      if (_this.state.file === undefined) {\n        // File submitted but base64 still encoding...\n        return React.createElement(Box, {\n          background: Colors.grey1,\n          pad: \"10%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Icons.Camera, {\n          color: Colors.grey3,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }));\n      } else if (_this.state.imgurl === undefined) {\n        // Base 64 loaded.\n        return React.createElement(Box, {\n          background: Colors.grey1,\n          pad: \"10%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(PreviewLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }));\n      } else {\n        // Nothing submitted or loaded\n        return React.createElement(ImagePreview, {\n          inherit: _this.state,\n          modify: _this.modifyState,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.uploadButton = function () {\n      return React.createElement(Box, {\n        width: \"45%\",\n        background: Colors.primary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        onChange: _this.uploadHandler,\n        style: {\n          display: 'none'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        gap: \"small\",\n        pad: \"small\",\n        align: \"center\",\n        justify: \"center\",\n        style: {\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Icons.Upload, {\n        color: Colors.grey3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), \" \", React.createElement(Text, {\n        color: Colors.grey3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Upload\"))));\n    };\n\n    _this.submitButton = function () {\n      if (_this.state.file === undefined) {\n        return React.createElement(Box, {\n          direction: \"row\",\n          background: Colors.primary,\n          pad: \"small\",\n          width: \"45%\",\n          justify: \"between\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(Icons.Send, {\n          color: Colors.grey1,\n          size: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \" Submit\"));\n      } else if (_this.state.product_id === undefined) {\n        return React.createElement(Box, {\n          direction: \"row\",\n          background: Colors.primary,\n          pad: \"small\",\n          width: \"45%\",\n          justify: \"between\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, React.createElement(SubmitLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: Colors.grey3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, \" Loading\"));\n      } else {\n        return React.createElement(Box, {\n          direction: \"row\",\n          background: Colors.primary,\n          pad: \"small\",\n          width: \"45%\",\n          justify: \"between\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(Icons.Send, {\n          color: Colors.grey3,\n          size: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"product/\".concat(_this.state.product_id),\n          product_id: _this.state.product_id,\n          style: {\n            textDecoration: 'none'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Text, {\n          color: Colors.grey3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, \" Submit\")));\n      }\n    };\n\n    _this.state = {}; // User wants to start over  \n\n    _this.state.refresh = false; // File location \n\n    _this.state.file = undefined; // File base64 data \n\n    _this.state.imgurl = undefined; // Scan Result id number\n\n    _this.state.product_id = undefined; // If something goes wrong, this creates a msg \n\n    _this.state.error = undefined;\n    return _this;\n  } // ---------------------------------\n  // STATE HANDLERS\n  // ---------------------------------\n  // Take in object newState and set this state to it. \n  // Used for children to modify page stuff.\n\n\n  _createClass(UploadPage, [{\n    key: \"render\",\n    // ---------------------------------\n    // RENDERING CALL\n    // ---------------------------------\n    value: function render() {\n      return React.createElement(Box, {\n        margin: \"large\",\n        justify: \"center\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, headerElements(), horizontalSpacer(\"10px\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"12pt\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \" Not sure how it works? You can find a guide \"), React.createElement(Text, {\n        size: \"12pt\",\n        color: Colors.primary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \" here \")), horizontalSpacer(\"20px\"), this.imagePreview(), horizontalSpacer(\"20px\"), React.createElement(Box, {\n        direction: \"row\",\n        justify: \"start\",\n        width: \"23.5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, this.uploadButton(), React.createElement(Box, {\n        width: \"10%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), this.submitButton()), this.errhandler());\n    }\n  }]);\n\n  return UploadPage;\n}(Component); // ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\n\nvar ImagePreview =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImagePreview, _React$Component);\n\n  function ImagePreview(props) {\n    var _this2;\n\n    _classCallCheck(this, ImagePreview);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ImagePreview).call(this, props));\n\n    _this2.onOpen = function () {\n      return _this2.setState({\n        open: true\n      });\n    };\n\n    _this2.onClose = function () {\n      return _this2.setState({\n        open: undefined\n      });\n    };\n\n    _this2.updateState = function (newState) {\n      _this2.props.modifyState(newState);\n    };\n\n    _this2.updateImage = function (img) {// STATE SETTER HERE\n      // TODO:\n    };\n\n    _this2.renderModal = function () {\n      return React.createElement(Layer, {\n        position: \"center\",\n        modal: true,\n        onClickOutside: _this2.onClose,\n        onEsc: _this2.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"column\",\n        pad: \"medium\",\n        gap: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"24pt\",\n        color: Colors.dark3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" Crop Image\"), React.createElement(Button, {\n        icon: React.createElement(Icons.Close, {\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }),\n        onClick: _this2.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))));\n    };\n\n    _this2.state = {};\n    _this2.state = _this2.props.inherit;\n    return _this2;\n  }\n\n  _createClass(ImagePreview, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Button, {\n        icon: React.createElement(Image, {\n          src: this.state.imgurl,\n          fit: \"cover\",\n          height: \"310px\",\n          width: \"310px\",\n          alt: \"preview\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }),\n        onClick: this.onOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), open && this.renderModal());\n    }\n  }]);\n\n  return ImagePreview;\n}(React.Component);\n\nvar PreviewLoader =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(PreviewLoader, _React$Component2);\n\n  function PreviewLoader() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, PreviewLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreviewLoader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      value: 20\n    };\n    return _this3;\n  }\n\n  _createClass(PreviewLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this4.state.value;\n\n        _this4.setState({\n          value: value < 100 ? value + 8 : 20\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        alignSelf: \"start\",\n        height: \"50px\",\n        width: \"50px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 50 ? \"\".concat(Colors.grey1) : \"\".concat(Colors.grey3)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PreviewLoader;\n}(React.Component);\n\nvar SubmitLoader =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(SubmitLoader, _React$Component3);\n\n  function SubmitLoader() {\n    var _getPrototypeOf3;\n\n    var _this5;\n\n    _classCallCheck(this, SubmitLoader);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this5 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(SubmitLoader)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this5.state = {\n      value: 20\n    };\n    return _this5;\n  }\n\n  _createClass(SubmitLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this6.state.value;\n\n        _this6.setState({\n          value: value < 100 ? value + 8 : 20\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        alignSelf: \"start\",\n        height: \"25px\",\n        width: \"25px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 50 ? \"\".concat(Colors.grey1) : \"\".concat(Colors.grey3)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return SubmitLoader;\n}(React.Component);\n\nvar headerElements = function headerElements() {\n  return React.createElement(Box, {\n    justify: \"between\",\n    width: \"100%\",\n    direction: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }, React.createElement(Box, {\n    width: \"33%\",\n    justify: \"center\",\n    align: \"start\",\n    pad: {\n      left: \"large\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(Icons.LinkPrevious, {\n    color: Colors.dark3,\n    size: \"large\",\n    justify: \"left\",\n    align: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }))), React.createElement(Box, {\n    width: \"33%\",\n    justify: \"center\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }, Style.Title(\"Upload an image\")), React.createElement(Box, {\n    width: \"33%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }));\n};\n\nvar horizontalSpacer = function horizontalSpacer(amt) {\n  return React.createElement(Box, {\n    width: \"100%\",\n    height: amt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(UploadPage);","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Upload.js"],"names":["React","Component","createRef","Grommet","grommet","Box","Button","Heading","Menu","Paragraph","Text","Meter","Image","Layer","Drop","Icons","Switch","BrowserRouter","Router","browserHistory","Redirect","withRouter","Link","Style","Colors","AuthService","ScanService","Home","UploadPage","props","modifyState","newState","setState","uploadHandler","event","reader","FileReader","file","target","files","error","undefined","size","readAsDataURL","onload","e","imgurl","result","getProductID","then","res","data","product_id","catch","console","log","render","errhandler","state","top","bottom","color","imagePreview","grey1","grey3","uploadButton","primary","display","cursor","submitButton","textDecoration","refresh","headerElements","horizontalSpacer","ImagePreview","onOpen","open","onClose","updateState","updateImage","img","renderModal","dark3","inherit","PreviewLoader","value","timer","setInterval","clearInterval","SubmitLoader","left","Title","amt"],"mappings":"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","sourcesContent":["// The page that users can use to upload an image, open to guests and users \n// Primary component: UploadPage\nimport React, { Component, createRef } from 'react'; \nimport { Grommet, grommet, Box, Button, Heading, Menu, Paragraph, Text, Meter, Image, Layer, Drop} from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { Switch, BrowserRouter as Router, browserHistory, Redirect, withRouter, Link  } from 'react-router-dom';\n\n// IMPORT: Style components \nimport Style from './styles/Style';\nimport Colors from './styles/Color';\n// IMPORT: Action scripts \nimport AuthService from './actions/AuthService';\nimport ScanService from './actions/ScanService'; \n// IMPORT: React Pages \nimport Home from './Home'; \n\nclass UploadPage extends Component { \n\n\t// ---------------------------------\t\n\t// LIFE CYCLE MODIFIERS\n\t// ---------------------------------\n\n\tconstructor(props) { \n\t\tsuper(props); \n\t\tthis.state = {};\n\t\t// User wants to start over  \n\t\tthis.state.refresh = false; \n\t\t// File location \n\t\tthis.state.file = undefined; \n\t\t// File base64 data \n\t\tthis.state.imgurl = undefined; \n\t\t// Scan Result id number\n\t\tthis.state.product_id = undefined; \n\t\t// If something goes wrong, this creates a msg \n\t\tthis.state.error = undefined;\n\t}\n\n\t// ---------------------------------\n\t// STATE HANDLERS\n\t// ---------------------------------\n\n\t// Take in object newState and set this state to it. \n\t// Used for children to modify page stuff.\n\tmodifyState = (newState) => { \n\t\tthis.setState(newState);\n\t}\n\n\t// ---------------------------------\n\t// EVENT HANDLERS \n\t// ---------------------------------\n\n\tuploadHandler = event => {\n\t\tlet reader = new FileReader(); \t\t\n\t\tlet file = event.target.files[0];\n\t\tthis.setState({ error: undefined});\n\t\t// Try the code below, if it fails, produce an error msg\n\t\ttry { \n\t\t\t// If too large, throw err \n\t\t\tif((file.size / 1024 / 1024) > 5) { \n\t\t\t\tthrow(\"File is too large (> 5mb)\"); \n\t\t\t}\n\t\t\t// Convert to b64\n\t\t\treader.readAsDataURL(event.target.files[0]); \n\t\t\tthis.setState({ file: event.target.files[0] });\n\t\t\treader.onload = (e) => {\n\t\t\t\t// Set b64 image data\n\t\t\t\tthis.setState({ imgurl: e.target.result }); \n\t\t\t\tScanService.getProductID(e.target.result)\n\t\t\t\t.then(res => { \n\t\t\t\t\tif(res.data.error !== undefined) { \n\t\t\t\t\t\tthrow(res.data.error); \n\t\t\t\t\t}\n\t\t\t\t\tthis.setState({ product_id: res.data.product_id });\n\t\t\t\t})\n\t\t\t\t.catch(error => { \n\t\t\t\t\tthis.setState({ error: e})\n\t\t\t\t\tthrow(e);\n\t\t\t\t});\n\t\t\t} \n\t\t} catch (e) { \n\t\t\tconsole.log(\"ERROR: uploadHandler: \", e); \n\t\t\tthis.setState({ product_id: undefined, imgurl: undefined, file: undefined, error: e});\n\t\t\tthis.render();\n\t\t}\n\t}\t\n\n\terrhandler = () => { \n\t\tif(this.state.error !== undefined) { \n\t\t\treturn ( \n\t\t\t\t<Box direction=\"row\" justify=\"between\" margin={{ top:\"medium\", bottom: \"small\"}} background=\"#ff9999\" width=\"325px\" border= {{ color: \"red\" }} round=\"xsmall\">\n\t\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"center\" pad=\"small\" >\n\t\t\t\t\t\t<Icons.Alert color=\"red\" /><Text color=\"red\" size=\"12pt\">{this.state.error}</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Button icon={<Icons.Close color=\"red\"  />} onClick={() => {this.setState({error: undefined})}} />\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else { \n\t\t\treturn <div />\n\t\t}\n\t}\n\n\t// ---------------------------------\n\t// COMPOSED OBJECTS\n\t// ---------------------------------\n\n\t// Image preview, which is clickable if an image is uploaded\n\t// So that it reveals a crop modal. \n\timagePreview = () => { \n\t\tif(this.state.file === undefined) { \n\t\t\t// File submitted but base64 still encoding...\n\t\t\treturn ( \n\t\t\t\t<Box background={Colors.grey1} pad=\"10%\">\n\t\t\t\t\t<Icons.Camera color={Colors.grey3} size=\"large\"/>\n\t\t\t\t</Box> \n\t\t\t);\n\t\t} else if(this.state.imgurl === undefined){ \n\t\t\t// Base 64 loaded.\n\t\t\treturn ( \n\t\t\t\t<Box background={Colors.grey1} pad=\"10%\">\n\t\t\t\t\t<PreviewLoader />\n\t\t\t\t</Box> \n\t\t\t);\n\t\t} else { \n\t\t\t// Nothing submitted or loaded\n\t\t\treturn ( \n\t\t\t\t<ImagePreview inherit={this.state} modify={this.modifyState}/>\n\t\t\t);\n\t\t}\n\t}\n\n\tuploadButton = () => { \n\t\treturn (\n\t\t\t<Box width=\"45%\" background={Colors.primary}>\n\t\t\t\t<input type=\"file\" name=\"file\" id=\"file\" onChange={this.uploadHandler} style={{ display: 'none' }} />\n\t\t\t\t<label htmlFor=\"file\">\n\t\t\t\t\t<Box direction=\"row\" gap=\"small\" pad=\"small\" align=\"center\" justify=\"center\" style={{ cursor: 'pointer' }}>\n\t\t\t\t\t\t<Icons.Upload color={Colors.grey3} /> <Text color={Colors.grey3}>Upload</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</label>\n\t\t\t</Box>\n\t\t);\n\t}\n\n\tsubmitButton = () => {\n\t\tif (this.state.file === undefined) {\n\t\t\treturn (\n\t\t\t\t<Box direction=\"row\" background={Colors.primary} pad=\"small\" width=\"45%\" justify=\"between\" align=\"center\">\n\t\t\t\t\t<Icons.Send color={Colors.grey1} size=\"medium\" />\n\t\t\t\t\t<Text color={Colors.grey1}> Submit</Text>\n\t\t\t\t</Box>\n\t\t\t);\n\t\t} else if (this.state.product_id === undefined) {\n\t\t\treturn (\n\t\t\t\t<Box direction=\"row\" background={Colors.primary} pad=\"small\" width=\"45%\" justify=\"between\" align=\"center\">\n\t\t\t\t\t<SubmitLoader />\n\t\t\t\t\t<Text color={Colors.grey3}> Loading</Text>\n\t\t\t\t</Box>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Box direction=\"row\" background={Colors.primary} pad=\"small\" width=\"45%\" justify=\"between\" align=\"center\">\n\t\t\t\t\t<Icons.Send color={Colors.grey3} size=\"medium\" />\n\t\t\t\t\t<Link to={`product/${this.state.product_id}`} product_id={this.state.product_id} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t<Text color={Colors.grey3}> Submit</Text>\n\t\t\t\t\t</Link>\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t}\n\n\t// ---------------------------------\n\t// RENDERING CALL\n\t// ---------------------------------\n\n\trender() { \n\t\treturn (\n\t\t\t<Box margin=\"large\" justify=\"center\" align=\"center\">\n\t\t\t\t{headerElements()}\n\t\t\t\t{horizontalSpacer(\"10px\")} \n\t\t\t\t<div> \n\t\t\t\t\t<Text size=\"12pt\" color={Colors.grey1}> Not sure how it works? You can find a guide </Text> \n\t\t\t\t\t<Text size=\"12pt\" color={Colors.primary}> here </Text>\n\t\t\t\t</div> \n\t\t\t\t{horizontalSpacer(\"20px\")}\n\t\t\t\t{this.imagePreview()}\n\t\t\t\t{horizontalSpacer(\"20px\")}\n\t\t\t\t<Box direction=\"row\" justify=\"start\" width=\"23.5%\">\n\t\t\t\t\t{this.uploadButton()}\n\t\t\t\t\t<Box width=\"10%\" />\n\t\t\t\t\t{this.submitButton()}\n\t\t\t\t</Box>\n\t\t\t\t{this.errhandler()}\n\t\t\t</Box>\n\t\t)\n\t}\n\n}\n\n// ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\nclass ImagePreview extends React.Component { \n\n\tconstructor(props) {\n\t\tsuper(props); \n\t\tthis.state = {}; \n\t\tthis.state = this.props.inherit;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\n\tonClose = () => this.setState({ open: undefined });\n\n\tupdateState = (newState) => { \n\t\tthis.props.modifyState(newState);\n\t}\n\n\tupdateImage = (img) => { \n\t\t// STATE SETTER HERE\n\t\t// TODO:\n\t}\n\n\trenderModal = () => { \n\t\treturn(\n\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t<Box direction=\"column\" pad=\"medium\" gap=\"medium\">\n\t\t\t\t\t<Box direction=\"row\" justify=\"between\">\n\t\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}> Crop Image</Text>\n\t\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} />} onClick={this.onClose}/>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Layer>\n\t\t);\n\t}\n\n\trender() { \n\t\tconst { open } = this.state;\n\t\treturn( \n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\ticon=\n\t\t\t\t\t{<Image src={this.state.imgurl} \n\t\t\t\t\tfit=\"cover\" \n\t\t\t\t\theight=\"310px\" \n\t\t\t\t\twidth=\"310px\" \n\t\t\t\t\talt=\"preview\" />}\n\t\t\t\t\tonClick={this.onOpen}\n\t\t\t\t/>\n\t\t\t\t{open && this.renderModal()}\n\t\t\t</div> \n\t\t)\n\t}\n}\n\nclass PreviewLoader extends React.Component {\n\tstate = { value: 20 };\n  \n\tcomponentDidMount() {\n\t  this.timer = setInterval(() => {\n\t\tconst { value } = this.state;\n\t\tthis.setState({ value: value < 100 ? value + 8 : 20 });\n\t  }, 50);\n\t}\n  \n\tcomponentWillUnmount() {\n\t  clearInterval(this.timer);\n\t}\n  \n\trender() {\n\t  const { value } = this.state;\n\t  return (\n\t\t\t<Meter\n\t\t\tmargin=\"0\"\n\t\t\talignSelf=\"start\"\n\t\t\theight=\"50px\"\n\t\t\twidth=\"50px\"\n\t\t\ttype=\"circle\"\n\t\t\tsize=\"small\"\n\t\t\tvalues={[{ value, color: value > 50 ? `${Colors.grey1}` : `${Colors.grey3}` }]}/>\n\t  );\n\t}\n  }\n\nclass SubmitLoader extends React.Component {\n\tstate = { value: 20 };\n  \n\tcomponentDidMount() {\n\t  this.timer = setInterval(() => {\n\t\tconst { value } = this.state;\n\t\tthis.setState({ value: value < 100 ? value + 8 : 20 });\n\t  }, 50);\n\t}\n  \n\tcomponentWillUnmount() {\n\t  clearInterval(this.timer);\n\t}\n  \n\trender() {\n\t  const { value } = this.state;\n\t  return (\n\t\t\t<Meter\n\t\t\tmargin=\"0\"\n\t\t\talignSelf=\"start\"\n\t\t\theight=\"25px\"\n\t\t\twidth=\"25px\"\n\t\t\ttype=\"circle\"\n\t\t\tsize=\"small\"\n\t\t\tvalues={[{ value, color: value > 50 ? `${Colors.grey1}` : `${Colors.grey3}` }]}/>\n\t  );\n\t}\n  }\n\nconst headerElements = () => {\n\treturn (\n\t\t<Box justify=\"between\" width=\"100%\" direction=\"row\">\n\t\t\t<Box width=\"33%\" justify=\"center\" align=\"start\" pad={{ left: \"large\" }}>\n\t\t\t\t<Link to='/home'>\n\t\t\t\t\t{<Icons.LinkPrevious color={Colors.dark3} size=\"large\" justify=\"left\" align=\"left\" />}\n\t\t\t\t</Link>\n\t\t\t</Box>\n\t\t\t<Box width=\"33%\" justify=\"center\" align=\"center\">\n\t\t\t\t{Style.Title(\"Upload an image\")}\n\t\t\t</Box>\n\t\t\t<Box width=\"33%\">\n\t\t\t</Box>\n\t\t</Box>\n\t);\n}\n\nconst horizontalSpacer = (amt) => { \n\treturn( \n\t\t<Box width=\"100%\" height={amt}> \n\t\t</Box> \n\t); \n} \n\nexport default withRouter(UploadPage); \n"]},"metadata":{},"sourceType":"module"}