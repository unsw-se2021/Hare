{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../../contexts';\nimport { Box } from '../Box';\nimport { withForwardRef } from '../hocs';\nimport { EdgeControl } from './EdgeControl';\nvar Container = styled(Box).withConfig({\n  displayName: \"RangeSelector__Container\",\n  componentId: \"siof5p-0\"\n})([\"user-select:none;\"]);\n\nvar RangeSelector =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(RangeSelector, _Component);\n\n  function RangeSelector() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"containerRef\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"valueForMouseCoord\", function (event) {\n      var _this$props = _this.props,\n          direction = _this$props.direction,\n          max = _this$props.max,\n          min = _this$props.min,\n          step = _this$props.step;\n\n      var rect = _this.containerRef.current.getBoundingClientRect();\n\n      var value;\n\n      if (direction === 'vertical') {\n        var y = event.clientY - (rect.y || 0); // unit test resilience\n\n        var scaleY = rect.height / (max - min + 1) || 1; // unit test resilience\n\n        value = Math.floor(y / scaleY) + min;\n      } else {\n        var x = event.clientX - (rect.x || 0); // unit test resilience\n\n        var scaleX = rect.width / (max - min + 1) || 1; // unit test resilience\n\n        value = Math.floor(x / scaleX) + min;\n      } // align with closest step within [min, max]\n\n\n      var result = value + value % step;\n\n      if (result < min) {\n        return min;\n      }\n\n      if (result > max) {\n        return max;\n      }\n\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClick\", function (event) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          values = _this$props2.values;\n      var lastChange = _this.state.lastChange;\n\n      var value = _this.valueForMouseCoord(event);\n\n      if (value <= values[0] || value < values[1] && lastChange === 'lower') {\n        _this.setState({\n          lastChange: 'lower'\n        }, function () {\n          return onChange([value, values[1]]);\n        });\n      } else if (value >= values[1] || value > values[0] && lastChange === 'upper') {\n        _this.setState({\n          lastChange: 'upper'\n        }, function () {\n          return onChange([values[0], value]);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"lowerMouseDown\", function () {\n      _this.setState({\n        changing: 'lower'\n      });\n\n      window.addEventListener('mousemove', _this.mouseMove);\n      window.addEventListener('mouseup', _this.mouseUp);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"upperMouseDown\", function () {\n      _this.setState({\n        changing: 'upper'\n      });\n\n      window.addEventListener('mousemove', _this.mouseMove);\n      window.addEventListener('mouseup', _this.mouseUp);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"selectionMouseDown\", function (event) {\n      var moveValue = _this.valueForMouseCoord(event);\n\n      _this.setState({\n        changing: 'selection',\n        moveValue: moveValue\n      });\n\n      window.addEventListener('mousemove', _this.mouseMove);\n      window.addEventListener('mouseup', _this.mouseUp);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mouseMove\", function (event) {\n      var _this$props3 = _this.props,\n          max = _this$props3.max,\n          min = _this$props3.min,\n          onChange = _this$props3.onChange,\n          values = _this$props3.values;\n      var _this$state = _this.state,\n          changing = _this$state.changing,\n          moveValue = _this$state.moveValue;\n\n      var value = _this.valueForMouseCoord(event);\n\n      var nextValues;\n\n      if (changing === 'lower' && value <= values[1] && value !== moveValue) {\n        nextValues = [value, values[1]];\n      } else if (changing === 'upper' && value >= values[0] && value !== moveValue) {\n        nextValues = [values[0], value];\n      } else if (changing === 'selection' && value !== moveValue) {\n        var delta = value - moveValue;\n\n        if (values[0] + delta >= min && values[1] + delta <= max) {\n          nextValues = [values[0] + delta, values[1] + delta];\n        }\n      }\n\n      if (nextValues) {\n        _this.setState({\n          lastChange: changing,\n          moveValue: value\n        }, function () {\n          onChange(nextValues);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mouseUp\", function () {\n      _this.setState({\n        changing: undefined\n      });\n\n      window.removeEventListener('mousemove', _this.mouseMove);\n      window.removeEventListener('mouseup', _this.mouseMove);\n    });\n\n    return _this;\n  }\n\n  var _proto = RangeSelector.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('mousemove', this.mouseMove);\n    window.removeEventListener('mouseup', this.mouseMove);\n  };\n\n  _proto.render = function render() {\n    var _this$props4 = this.props,\n        color = _this$props4.color,\n        direction = _this$props4.direction,\n        forwardRef = _this$props4.forwardRef,\n        invert = _this$props4.invert,\n        max = _this$props4.max,\n        messages = _this$props4.messages,\n        min = _this$props4.min,\n        onChange = _this$props4.onChange,\n        opacity = _this$props4.opacity,\n        round = _this$props4.round,\n        size = _this$props4.size,\n        step = _this$props4.step,\n        values = _this$props4.values,\n        propsTheme = _this$props4.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props4, [\"color\", \"direction\", \"forwardRef\", \"invert\", \"max\", \"messages\", \"min\", \"onChange\", \"opacity\", \"round\", \"size\", \"step\", \"values\", \"theme\"]);\n\n    var theme = this.context || propsTheme;\n    var _this$state2 = this.state,\n        nextLower = _this$state2.nextLower,\n        nextUpper = _this$state2.nextUpper;\n    var lower = nextLower !== undefined ? nextLower : values[0];\n    var upper = nextUpper !== undefined ? nextUpper : values[1]; // It needs to be true when vertical, due to how browsers manage height\n\n    var fill = direction === 'vertical' ? true : 'vertical';\n    return React.createElement(Container, _extends({\n      ref: this.containerRef,\n      direction: direction === 'vertical' ? 'column' : 'row',\n      fill: fill\n    }, rest, {\n      onClick: onChange ? this.onClick : undefined\n    }), React.createElement(Box, {\n      style: {\n        flex: lower - min + \" 0 0\"\n      },\n      background: invert ? // preserve existing dark, instead of using darknes of this color\n      {\n        color: color || theme.rangeSelector.background.invert.color,\n        opacity: opacity,\n        dark: theme.dark\n      } : undefined,\n      fill: fill,\n      round: round\n    }), React.createElement(EdgeControl, {\n      a11yTitle: messages.lower,\n      tabIndex: 0,\n      ref: forwardRef,\n      color: color,\n      direction: direction,\n      edge: \"lower\",\n      onMouseDown: onChange ? this.lowerMouseDown : undefined,\n      onDecrease: onChange && lower - step >= min ? function () {\n        return onChange([lower - step, upper]);\n      } : undefined,\n      onIncrease: onChange && lower + step <= upper ? function () {\n        return onChange([lower + step, upper]);\n      } : undefined\n    }), React.createElement(Box, {\n      style: {\n        flex: upper - lower + 1 + \" 0 0\",\n        cursor: direction === 'vertical' ? 'ns-resize' : 'ew-resize'\n      },\n      background: invert ? undefined : // preserve existing dark, instead of using darknes of this color\n      {\n        color: color || 'control',\n        opacity: opacity,\n        dark: theme.dark\n      },\n      fill: fill,\n      round: round,\n      onMouseDown: onChange ? this.selectionMouseDown : undefined\n    }), React.createElement(EdgeControl, {\n      a11yTitle: messages.upper,\n      tabIndex: 0,\n      color: color,\n      direction: direction,\n      edge: \"upper\",\n      onMouseDown: onChange ? this.upperMouseDown : undefined,\n      onDecrease: onChange && upper - step >= lower ? function () {\n        return onChange([lower, upper - step]);\n      } : undefined,\n      onIncrease: onChange && upper + step <= max ? function () {\n        return onChange([lower, upper + step]);\n      } : undefined\n    }), React.createElement(Box, {\n      style: {\n        flex: max - upper + \" 0 0\"\n      },\n      background: invert ? // preserve existing dark, instead of using darknes of this color\n      {\n        color: color || theme.rangeSelector.background.invert.color,\n        opacity: opacity,\n        dark: theme.dark\n      } : undefined,\n      fill: fill,\n      round: round\n    }));\n  };\n\n  return RangeSelector;\n}(Component);\n\n_defineProperty(RangeSelector, \"contextType\", ThemeContext);\n\n_defineProperty(RangeSelector, \"defaultProps\", {\n  direction: 'horizontal',\n  max: 100,\n  messages: {\n    lower: 'Lower Bounds',\n    upper: 'Upper Bounds'\n  },\n  min: 0,\n  opacity: 'medium',\n  size: 'medium',\n  step: 1,\n  values: []\n});\n\nvar RangeSelectorDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  RangeSelectorDoc = require('./doc').doc(RangeSelector); // eslint-disable-line global-require\n}\n\nvar RangeSelectorWrapper = compose(withForwardRef)(RangeSelectorDoc || RangeSelector);\nexport { RangeSelectorWrapper as RangeSelector };","map":null,"metadata":{},"sourceType":"module"}