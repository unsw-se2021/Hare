{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { FormSearch } from 'grommet-icons/icons/FormSearch';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { Keyboard } from '../Keyboard';\nimport { Text } from '../Text';\nimport { TextInput } from '../TextInput';\nimport { normalizeColor } from '../../utils';\n\nvar Searcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Searcher, _Component);\n\n  function Searcher() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"inputRef\", React.createRef());\n\n    return _this;\n  }\n\n  var _proto = Searcher.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    /* eslint-disable-next-line react/prop-types */\n    var _this$props = this.props,\n        filtering = _this$props.filtering,\n        property = _this$props.property;\n\n    if (this.inputRef.current && filtering === property) {\n      this.inputRef.current.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        filtering = _this$props2.filtering,\n        filters = _this$props2.filters,\n        onFilter = _this$props2.onFilter,\n        onFiltering = _this$props2.onFiltering,\n        property = _this$props2.property,\n        theme = _this$props2.theme;\n\n    if (filtering === property) {\n      return React.createElement(Keyboard, {\n        onEsc: function onEsc() {\n          return onFiltering(undefined);\n        }\n      }, React.createElement(Box, {\n        flex: true,\n        pad: {\n          horizontal: 'small'\n        }\n      }, React.createElement(TextInput, {\n        ref: this.inputRef,\n        value: filters[property],\n        onChange: function onChange(event) {\n          return onFilter(property, event.target.value);\n        },\n        onBlur: function onBlur() {\n          return onFiltering(undefined);\n        }\n      })));\n    }\n\n    return React.createElement(Fragment, null, filters[property] ? React.createElement(Box, {\n      flex: false,\n      pad: {\n        horizontal: 'small'\n      }\n    }, React.createElement(Text, null, filters[property])) : null, React.createElement(Button, {\n      icon: React.createElement(FormSearch, {\n        color: normalizeColor(filtering === property ? 'brand' : 'border', theme)\n      }),\n      hoverIndicator: true,\n      onClick: function onClick() {\n        return onFiltering(filtering === property ? undefined : property);\n      }\n    }));\n  };\n\n  return Searcher;\n}(Component);\n\nSearcher.defaultProps = {};\nObject.setPrototypeOf(Searcher.defaultProps, defaultProps);\nvar SearcherWrapper = compose(withTheme)(Searcher);\nexport { SearcherWrapper as Searcher };","map":null,"metadata":{},"sourceType":"module"}