{"ast":null,"code":"var React = require('react');\n\nvar FileInput = React.createClass({\n  getInitialState: function getInitialState() {\n    return {\n      value: '',\n      styles: {\n        parent: {\n          position: 'relative'\n        },\n        file: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          opacity: 0,\n          width: '100%',\n          zIndex: 1\n        },\n        text: {\n          position: 'relative',\n          zIndex: -1\n        }\n      }\n    };\n  },\n  handleChange: function handleChange(e) {\n    this.setState({\n      value: e.target.value.split(/(\\\\|\\/)/g).pop()\n    });\n    if (this.props.onChange) this.props.onChange(e);\n  },\n  render: function render() {\n    return React.DOM.div({\n      style: this.state.styles.parent\n    }, // Actual file input\n    React.DOM.input({\n      type: 'file',\n      name: this.props.name,\n      className: this.props.className,\n      onChange: this.handleChange,\n      disabled: this.props.disabled,\n      accept: this.props.accept,\n      style: this.state.styles.file\n    }), // Emulated file input\n    React.DOM.input({\n      type: 'text',\n      tabIndex: -1,\n      name: this.props.name + '_filename',\n      value: this.state.value,\n      className: this.props.className,\n      onChange: function onChange() {},\n      placeholder: this.props.placeholder,\n      disabled: this.props.disabled,\n      style: this.state.styles.text\n    }));\n  }\n});\nmodule.exports = FileInput;","map":null,"metadata":{},"sourceType":"script"}