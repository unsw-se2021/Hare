{"ast":null,"code":"import _classCallCheck from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Product.js\";\nimport React, { Component } from 'react';\nimport { Grommet, DataTable, grommet, Meter, TextInput, DropButton, Button, Box, Heading, Menu, Paragraph, Carousel, Accordion, AccordionPanel, Text, Image, Distribution, Layer } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { withRouter, Redirect, Route, Link, Router, BrowserRouter } from 'react-router-dom';\nimport Style from './styles/Style';\nimport Colors from './styles/Color';\nimport AuthService from './actions/AuthService';\nimport UserService from './actions/UserService';\nimport ScanService from './actions/ScanService';\n/*\nclass IngredientModal extends Component {\n\n\tstate = {}; \n\n\tcomponentDidMount() { \n\t\tlet data = this.getIngredientData(); \n\t\tthis.setState({ ingredientname: data.name, ingredientdesc: data.desc});\n\t} \n\n\tgetIngredientData = () => { \n\t\treturn this.props.ingredient; \t\n\t}\n\n\tgetColor = () => {\n\t\tif(this.props.color != undefined) {\n\t\t\treturn this.props.color; \n\t\t} else { \n\t\t\treturn;\n\t\t}\t\n\t} \n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\trenderModal = () => { \n\t\treturn(\n\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t<Box direction=\"row\" pad={{ left: 'medium', right: 'medium', top: 'medium'}} justify=\"between\">\n\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}> Ingredient: {this.state.ingredientname}</Text>\n\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} />} onClick={this.onClose}/>\n\t\t\t\t</Box>\n\t\t\t\t<Box pad=\"medium\"> \n\t\t\t\t\t<Text size=\"12pt\" > {this.state.ingredientdesc}</Text> \n\t\t\t\t</Box> \n\t\t\t</Layer>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\t\t\t\n\t\t\t<Box>\n\t\t\t\t<Button label={<Text size=\"10pt\"  color={this.getColor()}>{`${this.state.ingredientname}, `}</Text>}  onClick={this.onOpen} plain />\n\t\t\t\t{ open && this.renderModal()}\n\t\t\t</Box>\n\t\t);\n\t}\n\n}*/\n\n/*\nconst renderIngredientIcon = (preferences, ingredientlist) => { \n\tlet ingredientbuttons = []; \n\tlet pref_colors = {\n\t\t0: \"\", \n\t\t1: \"red\",\n\t\t2: \"blue\", \n\t\t3: \"green\", \n\t\t4: \"purple\", \n\t\t5: \"#33D1FF\", \n\t} \n\tlet match = false;\n\tlet color = \"\";\n\tlet col_index = 0; \n\tingredientlist.forEach(function (item) {\n\t\tif(preferences != null ) {\n\t\t\tmatch = false; \n\t\t\tObject.keys(preferences.special).forEach(function(key, index) {\n\t\t\t\tif(preferences.special[key].name == item.name) { \n\t\t\t\t\tmatch = true;\n\t\t\t\t\tcol_index = preferences.special[index].color;\n\t\t\t\t\tcolor = pref_colors[col_index]; \n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif(match == true) { \n\t\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} color={color} />); \n\t\t\t} else {\n\t\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} />); \n\t\t\t}\n\t\t} else { \n\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} />);\n\t\t} \n\t});\n\n\treturn(\n\t\t<div>\n\t\t\t{ingredientbuttons}\n\t\t</div> \n\t); \n} \n\nclass ProductPage extends Component { \n\n\n\trenderIngredientsNormally = () => {\n\t\twhile(this.state.productpage == null) { \n\t\t\tsetInterval(() => {}, 500);\n\t\t}\n\t\tconst obj = this.state.productpage; \n\t\tlet ingredients = obj.contents; \n\t\tlet panels = []; \n\t\tObject.keys(ingredients).forEach(function(key,index) {\n\t\t\tif(ingredients[key].length != 0 && key != null) { \n\t\t\t\tpanels.push( \n\t\t\t\t\t(\n\t\t\t\t\t\t<AccordionPanel label={key}>\n\t\t\t\t\t\t\t{renderIngredientIcon(null, ingredients[key])}  \n\t\t\t\t\t\t</AccordionPanel> \n\t\t\t\t\t)\n\t\t\t\t) \n\t\t\t} \n\t\t});\n\n\t\treturn( \n\t\t\t<Accordion> \n\t\t\t\t{panels}\t\n\t\t\t</Accordion> \n\t\t); \n\t} \n\n\trenderIngredientsPreferenced = () => {\n\t\twhile(this.state.productpage == null) { \n\t\t\tsetInterval(() => {}, 500);\n\t\t} \n\t\tconst product_obj = this.state.productpage; \n\t\tconst userdata = this.state.userdata;\n\t\tlet ingredients = product_obj.contents;\n\t\tlet panels = []; \n\n\t\tObject.keys(ingredients).forEach(function(key, index) { \n\t\t\tif(ingredients[key].length != 0 && key != null) { \n\t\t\t\tpanels.push( \n\t\t\t\t\t<AccordionPanel label={key}> \n\t\t\t\t\t\t{renderIngredientIcon(userdata.preferences, ingredients[key])} \n\t\t\t\t\t</AccordionPanel> \n\t\t\t\t); \n\t\t\t} \n\t\t}); \n\n\t\treturn( \n\t\t\t<Accordion>\t\t\n\t\t\t\t{panels} \n\t\t\t</Accordion> \n\t\t); \n\t} \n\n} \n\n*/\n// ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\nvar ProductPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductPage, _Component);\n\n  // All necessary states and data declared here\n  function ProductPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProductPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductPage).call(this, props));\n\n    _this.loadingScreen = function () {\n      if (_this.state.loaderr !== undefined) {\n        return React.createElement(Box, {\n          align: \"center\",\n          gap: \"small\",\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(Box, {\n          height: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), React.createElement(Box, {\n          align: \"center\",\n          pad: \"medium\",\n          gap: \"medium\",\n          border: {\n            color: \"status-error\",\n            size: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(Icons.Alert, {\n          size: \"xlarge\",\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Failure loading: \", _this.state.product_id, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"/upload\",\n          style: {\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(Icons.LinkPrevious, {\n          color: \"status-error\",\n          size: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"Go back\"))))));\n      } else {\n        return React.createElement(Box, {\n          align: \"center\",\n          gap: \"large\",\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(Box, {\n          height: \"25%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }), React.createElement(PreviewLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"Loading page: \", _this.state.product_id));\n      }\n    };\n\n    _this.updateSave = function () {\n      _this.setState({\n        saved: true\n      });\n    };\n\n    _this.saveIcon = function () {\n      if (_this.state.loggedin === undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        });\n      } else if (_this.state.saved === true) {\n        return React.createElement(Box, {\n          direction: \"row\",\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(Icons.StatusGood, {\n          size: \"large\",\n          color: \"#00C781\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"#00C781\",\n          size: \"12pt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"Saved!\"));\n      } else {\n        return React.createElement(Box, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(SaveModal, {\n          updateSave: _this.updateSave,\n          product_id: _this.state.product_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderPage = function () {\n      return React.createElement(Box, {\n        direction: \"column\",\n        pad: \"medium\",\n        align: \"center\",\n        width: \"625px\",\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        gap: \"medium\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(ImagePreview, {\n        img: _this.state.imgurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }), React.createElement(IngredientDistribution, {\n        data: _this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      })), React.createElement(Box, {\n        margin: \"medium\",\n        width: \"625px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(CategoryAccordion, Object.assign({}, _this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))));\n    };\n\n    _this.state = {}; // If page has acquired everything \n\n    _this.state.loading = true; // If loading resulted in an error \n\n    _this.state.loaderr = undefined; // The ID of this product page \n\n    _this.state.product_id = _this.props.match.params.productId; // A check to see if the user is authenticated \n\n    _this.state.loggedin = localStorage.getItem('auth'); // If the user is logged in, get their userdata \n\n    _this.state.userdata = JSON.parse(localStorage.getItem('userdata')); // Check if this productID has been saved before (by the user)\n\n    _this.state.saved = undefined; // Product Results page data \n\n    _this.state.page = undefined; // img url \n\n    _this.state.imgurl = undefined; // List of ingredients by category \n\n    _this.state.ingredients = undefined; // List of ingredients that were not found\n\n    _this.state.not_found = undefined;\n    return _this;\n  } // Data is fetched once react is mounting \n\n\n  _createClass(ProductPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ScanService.getProductPage(this.state.product_id).then(function (res) {\n        var isSaved = checkIfPageSaved(_this2.state);\n        var pageIngredients = getIngredients(res.data.contents);\n        var notFound = getNotFound(res.data.contents);\n        var page = res.data;\n\n        if (pageIngredients === undefined || page === undefined) {\n          _this2.setState({\n            loaderr: \"Invalid data during mount provided\"\n          });\n        } else {\n          _this2.setState({\n            saved: isSaved,\n            ingredients: pageIngredients,\n            imgurl: page.img_url,\n            not_found: notFound,\n            page: page\n          });\n\n          console.log(\"LOADING COMPLETE: OPENING PAGE\");\n\n          _this2.setState({\n            loading: false\n          });\n        }\n      }).catch(function (e) {\n        _this2.setState({\n          loaderr: e\n        });\n      });\n    } // The loading screen while the page awaits\n\n  }, {\n    key: \"render\",\n    // Primary render call. Updates whole page\n    value: function render() {\n      var loading = this.state.loading;\n\n      if (loading === true) {\n        return React.createElement(Box, {\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, loading && this.loadingScreen());\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, React.createElement(Box, {\n          margin: \"large\",\n          justify: \"center\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, React.createElement(Box, {\n          justify: \"between\",\n          width: \"100%\",\n          direction: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(Box, {\n          width: \"33%\",\n          justify: \"center\",\n          align: \"start\",\n          pad: {\n            left: \"large\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }, React.createElement(Icons.LinkPrevious, {\n          color: Colors.dark3,\n          size: \"large\",\n          justify: \"left\",\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }))), React.createElement(Box, {\n          width: \"33%\",\n          justify: \"center\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, Style.Title(\"Scan Results:\")), React.createElement(Box, {\n          direction: \"row\",\n          width: \"33%\",\n          justify: \"start\",\n          align: \"end\",\n          pad: {\n            left: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"column\",\n          align: \"center\",\n          justify: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, this.state.loggedin && this.saveIcon()))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \" Not sure how it works? You can find a guide \"), React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }, \"here\")), this.renderPage(), React.createElement(Box, {\n          direction: \"row\",\n          justify: \"start\",\n          width: \"23.5%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, React.createElement(Box, {\n          width: \"10%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return ProductPage;\n}(Component); // ---------------------------------// ---------------------------------// ---------------------------------\n// True or false return if page has already been saved by logged in user. \n\n\nvar checkIfPageSaved = function checkIfPageSaved(state) {\n  var userdata = state.userdata;\n  var product_id = state.product_id;\n\n  if (userdata == null || userdata == undefined) {\n    return false;\n  } else if (product_id === undefined) {\n    return false;\n  }\n\n  var saved_products = userdata.products;\n\n  if (saved_products.length == 0) {\n    return false;\n  } else if (saved_products.includes(product_id)) {\n    return true;\n  }\n\n  return false;\n}; // Gets ingredients cleaner from productpage data \n\n\nvar getIngredients = function getIngredients(contents) {\n  if (contents.length == 0) {\n    return undefined;\n  }\n\n  var ingredients = [];\n  Object.keys(contents).forEach(function (value, index) {\n    if (String(value) !== \"Not Found\") {\n      ingredients[value] = contents[value];\n    }\n  });\n  return ingredients;\n}; // Gets not founds that are rendered at the bottom of the page \n\n\nvar getNotFound = function getNotFound(contents) {\n  if (contents.length == 0) {\n    return [];\n  }\n\n  var ingredients = [];\n  Object.keys(contents).forEach(function (value, index) {\n    if (String(value) === \"Not Found\") {\n      ingredients = contents[value];\n    }\n  });\n  return ingredients;\n}; // Loading bar for the page \n\n\nvar PreviewLoader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewLoader, _React$Component);\n\n  function PreviewLoader() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, PreviewLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreviewLoader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      value: 10\n    };\n    return _this3;\n  }\n\n  _createClass(PreviewLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this4.state.value;\n\n        _this4.setState({\n          value: value < 100 ? value + 8 : 0\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        height: \"100px\",\n        width: \"100px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 10 ? \"\".concat(Colors.primary) : \"\".concat(Colors.primary)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PreviewLoader;\n}(React.Component); // Ingredient Accordion without preferencing flair \n\n\nvar CategoryAccordion =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(CategoryAccordion, _Component2);\n\n  function CategoryAccordion(props) {\n    var _this5;\n\n    _classCallCheck(this, CategoryAccordion);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryAccordion).call(this, props));\n\n    _this5.getPreferencedPanels = function () {\n      return _this5.getPanels();\n    };\n\n    _this5.getPanels = function () {\n      var contents = Object.entries(_this5.state.ingredients);\n      var panels = [];\n      contents.forEach(function (value, index) {\n        var label = React.createElement(Text, {\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        }, contents[index][0], \" \", \"(\".concat(contents[index][1].length, \")\"));\n        panels.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 460\n          },\n          __self: this\n        }, React.createElement(AccordionPanel, {\n          pad: \"small\",\n          background: Colors.grey3,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461\n          },\n          __self: this\n        }, React.createElement(IngredientButtons, Object.assign({\n          content: contents[index][1]\n        }, _this5.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          },\n          __self: this\n        })))));\n      });\n      return panels;\n    };\n\n    _this5.state = {}; // If page has acquired everything \n\n    _this5.state.loading = true; // A check to see if the user is authenticated \n\n    _this5.state.loggedin = _this5.props.loggedin; // If the user is logged in, get their userdata \n\n    _this5.state.userdata = _this5.props.userdata; // List of ingredients by category \n\n    _this5.state.ingredients = _this5.props.ingredients; // Panels rendered in the accordion\n\n    _this5.state.panels = [];\n    return _this5;\n  }\n\n  _createClass(CategoryAccordion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      var mounting = setInterval(function () {\n        clearInterval(mounting);\n\n        if (_this6.state.loggedin !== undefined || _this6.state.loggedin !== null) {\n          _this6.getPreferencedPanels();\n        } else {\n          _this6.getPanels();\n        }\n\n        _this6.setState({\n          loading: false\n        });\n      }, 500);\n    } // TODO: \n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(Box, {\n          width: \"800px\",\n          height: \"400px\",\n          border: {\n            size: \"small\",\n            color: \"\".concat(Colors.grey1)\n          },\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }, React.createElement(GeneralLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Box, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479\n          },\n          __self: this\n        }, React.createElement(Box, {\n          margin: {\n            bottom: \"20px\",\n            top: \"10px\"\n          },\n          direction: \"row\",\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480\n          },\n          __self: this\n        }, React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482\n          },\n          __self: this\n        }), React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484\n          },\n          __self: this\n        }), React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        })), React.createElement(Box, {\n          direction: \"column\",\n          margin: {\n            bottom: \"small\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }, React.createElement(Text, {\n          textAlign: \"center\",\n          size: \"10pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }, \"Information about specific ingredients by category.\"), React.createElement(Text, {\n          textAlign: \"center\",\n          size: \"10pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          },\n          __self: this\n        }, \"Click on a category, and ingredient to find out more about what we found.\")), React.createElement(Accordion, {\n          margin: {\n            top: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495\n          },\n          __self: this\n        }, this.getPanels()), React.createElement(Box, {\n          height: \"100px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return CategoryAccordion;\n}(Component);\n\nvar IngredientButtons =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(IngredientButtons, _Component3);\n\n  function IngredientButtons(props) {\n    var _this7;\n\n    _classCallCheck(this, IngredientButtons);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(IngredientButtons).call(this, props));\n\n    _this7.renderIngredientButtons = function () {\n      if (_this7.state.loggedin === null || _this7.state.loggedin === undefined || _this7.state.userdata === undefined || _this7.state.userdata === null) {\n        return _this7.renderIngredientsNormally();\n      } else {\n        return _this7.renderIngredientsHighlighted();\n      }\n    };\n\n    _this7.renderIngredientsHighlighted = function () {\n      return _this7.renderIngredientsNormally();\n    };\n\n    _this7.renderIngredientsNormally = function () {\n      var contents = _this7.props.content;\n      var buttons = [];\n      contents.forEach(function (value, index) {\n        buttons.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      });\n    };\n\n    _this7.state = {}; // If page has acquired everything \n\n    _this7.state.loading = true; // A check to see if the user is authenticated \n\n    _this7.state.loggedin = _this7.props.loggedin; // If the user is logged in, get their userdata \n\n    _this7.state.userdata = _this7.props.userdata; // List of ingredients by category \n\n    _this7.state.ingredients = _this7.props.ingredients;\n    return _this7;\n  }\n\n  _createClass(IngredientButtons, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Box, {\n        pad: {\n          left: \"small\",\n          right: \"small\",\n          top: \"medium\",\n          bottom: \"medium\"\n        },\n        wrap: true,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, this.renderIngredientButtons());\n    }\n  }]);\n\n  return IngredientButtons;\n}(Component); // Loading for elements on the page\n\n\nvar GeneralLoader =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(GeneralLoader, _React$Component2);\n\n  function GeneralLoader() {\n    var _getPrototypeOf3;\n\n    var _this8;\n\n    _classCallCheck(this, GeneralLoader);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this8 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(GeneralLoader)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this8.state = {\n      value: 10\n    };\n    return _this8;\n  }\n\n  _createClass(GeneralLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this9 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this9.state.value;\n\n        _this9.setState({\n          value: value < 100 ? value + 8 : 0\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        height: \"20px\",\n        width: \"20px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 10 ? \"\".concat(Colors.grey1) : \"\".concat(Colors.grey3)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GeneralLoader;\n}(React.Component); // Renders a distributions of ingredients by category and preference. \n\n\nvar IngredientDistribution =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(IngredientDistribution, _Component4);\n\n  function IngredientDistribution(props) {\n    var _this10;\n\n    _classCallCheck(this, IngredientDistribution);\n\n    _this10 = _possibleConstructorReturn(this, _getPrototypeOf(IngredientDistribution).call(this, props));\n\n    _this10.loadingBar = function () {\n      return React.createElement(Box, {\n        border: {\n          size: \"small\",\n          color: \"\".concat(Colors.grey1)\n        },\n        align: \"center\",\n        justify: \"center\",\n        height: \"200px\",\n        width: \"400px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, React.createElement(GeneralLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }));\n    };\n\n    _this10.state = {};\n    _this10.state.loading = true;\n    _this10.state.contents = _this10.props.data.ingredients;\n    _this10.state.ranked_categories = undefined;\n    _this10.state.values = undefined;\n    return _this10;\n  }\n\n  _createClass(IngredientDistribution, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this11 = this;\n\n      var mounting = setInterval(function () {\n        clearInterval(mounting);\n        var contents = Object.entries(_this11.state.contents);\n        contents.sort(function (a, b) {\n          return b[1].length - a[1].length;\n        });\n        var distributionContents = [];\n        var distributionValues = [];\n        contents.forEach(function (value, index) {\n          if (distributionContents.length < 5) {\n            var tuple = [contents[index][0], contents[index][1].length];\n            distributionContents.push(tuple);\n          }\n        });\n        distributionContents.forEach(function (value, index) {\n          var item = {\n            value: distributionContents[index][1],\n            label: distributionContents[index][0]\n          };\n          distributionValues.push(item);\n        });\n\n        _this11.setState({\n          ranked_categories: distributionContents,\n          values: distributionValues,\n          loading: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638\n          },\n          __self: this\n        }, this.loadingBar(), React.createElement(Box, {\n          direction: \"row\",\n          margin: {\n            top: \"small\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640\n          },\n          __self: this\n        }, React.createElement(Icons.CircleInformation, {\n          size: \"small\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        }), React.createElement(Text, {\n          size: \"8pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 643\n          },\n          __self: this\n        }, \"Distribution of ingredients by category (Top 5 included)\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651\n          },\n          __self: this\n        }, React.createElement(Distribution, {\n          height: \"200px\",\n          width: \"400px\",\n          values: this.state.values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 652\n          },\n          __self: this\n        }, function (value) {\n          return React.createElement(Box, {\n            pad: \"small\",\n            background: Colors.primary,\n            fill: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 654\n            },\n            __self: this\n          }, React.createElement(Text, {\n            size: \"8pt\",\n            color: Colors.grey3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 655\n            },\n            __self: this\n          }, value.value, \" \", value.label));\n        }), React.createElement(Box, {\n          direction: \"row\",\n          margin: {\n            top: \"xsmall\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 659\n          },\n          __self: this\n        }, React.createElement(Icons.CircleInformation, {\n          size: \"small\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 660\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 661\n          },\n          __self: this\n        }), React.createElement(Text, {\n          size: \"8pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 662\n          },\n          __self: this\n        }, \"Distribution of ingredients by category (Top 5 included)\")));\n      }\n    }\n  }]);\n\n  return IngredientDistribution;\n}(Component); // Click on an image to get the full thing.\n\n\nvar ImagePreview =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(ImagePreview, _Component5);\n\n  function ImagePreview(props) {\n    var _this12;\n\n    _classCallCheck(this, ImagePreview);\n\n    _this12 = _possibleConstructorReturn(this, _getPrototypeOf(ImagePreview).call(this, props));\n\n    _this12.onOpen = function () {\n      return _this12.setState({\n        open: true\n      });\n    };\n\n    _this12.onClose = function () {\n      return _this12.setState({\n        open: undefined\n      });\n    };\n\n    _this12.renderModal = function () {\n      return React.createElement(Layer, {\n        position: \"center\",\n        modal: true,\n        onClickOutside: _this12.onClose,\n        onEsc: _this12.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"column\",\n        gap: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        margin: {\n          top: \"xsmall\",\n          left: \"small\",\n          right: \"small\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, React.createElement(Icons.CircleInformation, {\n        size: \"small\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }), React.createElement(Box, {\n        width: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }), React.createElement(Text, {\n        size: \"8pt\",\n        color: Colors.primary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, \"This is the entire image we have associated with these scan results.\")), React.createElement(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, React.createElement(Image, {\n        alt: \"Preview not Found\",\n        src: _this12.state.imgurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697\n        },\n        __self: this\n      }))));\n    };\n\n    _this12.state = {};\n    _this12.state.imgurl = _this12.props.img;\n    return _this12;\n  }\n\n  _createClass(ImagePreview, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, React.createElement(Image, {\n        fit: \"cover\",\n        alt: \"Preview not Found\",\n        src: this.state.imgurl,\n        height: \"200px\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      })), open && this.renderModal(), React.createElement(Box, {\n        direction: \"row\",\n        margin: {\n          top: \"2\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, React.createElement(Icons.CircleInformation, {\n        size: \"small\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        },\n        __self: this\n      }), React.createElement(Box, {\n        width: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 714\n        },\n        __self: this\n      }), React.createElement(Text, {\n        size: \"8pt\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, \"Image Scanned\")));\n    }\n  }]);\n\n  return ImagePreview;\n}(Component); // Save button\n\n\nvar SaveModal =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(SaveModal, _Component6);\n\n  function SaveModal(props) {\n    var _this13;\n\n    _classCallCheck(this, SaveModal);\n\n    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(SaveModal).call(this, props));\n\n    _this13.onOpen = function () {\n      return _this13.setState({\n        open: true\n      });\n    };\n\n    _this13.onClose = function () {\n      return _this13.setState({\n        open: undefined\n      });\n    };\n\n    _this13.updateName = function (name) {\n      _this13.setState({\n        saved_name: name\n      });\n    };\n\n    _this13.getErrorMsg = function () {\n      return React.createElement(Box, {\n        direction: \"row\",\n        align: \"center\",\n        justify: \"between\",\n        background: \"#ff9999\",\n        border: {\n          color: \"red\"\n        },\n        wrap: true,\n        pad: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(Text, {\n        color: \"red\",\n        size: \"12pt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, _this13.state.err), React.createElement(Button, {\n        icon: React.createElement(Icons.Close, {\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 755\n          },\n          __self: this\n        }),\n        onClick: function onClick() {\n          _this13.setState({\n            err: undefined\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }));\n    };\n\n    _this13.sendSave = function () {\n      _this13.setState({\n        loading: true\n      });\n\n      UserService.saveProduct(_this13.state.saved_name, _this13.state.userdata, _this13.state.saved_id).then(function (res) {\n        _this13.setState({\n          loading: false,\n          err: undefined\n        });\n\n        _this13.state.updateSave();\n\n        _this13.onClose();\n\n        return;\n      }).catch(function (e) {\n        _this13.setState({\n          loading: false,\n          err: String(e)\n        });\n      });\n    };\n\n    _this13.renderModal = function () {\n      if (_this13.state.loading === true) {\n        return React.createElement(Box, {\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 777\n          },\n          __self: this\n        }, React.createElement(GeneralLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 778\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Layer, {\n          position: \"center\",\n          modal: true,\n          onClickOutside: _this13.onClose,\n          onEsc: _this13.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 783\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"column\",\n          pad: \"medium\",\n          gap: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"row\",\n          justify: \"between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785\n          },\n          __self: this\n        }, React.createElement(Text, {\n          size: \"24pt\",\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 786\n          },\n          __self: this\n        }, \" Save Scan Results\"), React.createElement(Button, {\n          icon: React.createElement(Icons.Close, {\n            color: Colors.dark3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 787\n            },\n            __self: this\n          }),\n          onClick: _this13.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 787\n          },\n          __self: this\n        })), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789\n          },\n          __self: this\n        }, \"Save as: \"), React.createElement(TextInputBar, {\n          onSet: _this13.updateName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790\n          },\n          __self: this\n        }), _this13.state.err && _this13.getErrorMsg(), React.createElement(Button, {\n          color: Colors.primary,\n          label: React.createElement(Text, {\n            color: Colors.primary,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 792\n            },\n            __self: this\n          }, \"Submit\"),\n          onClick: _this13.sendSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 792\n          },\n          __self: this\n        })));\n      }\n    };\n\n    _this13.state = {};\n    _this13.state.loading = false;\n    _this13.state.err = undefined;\n    _this13.state.saved_name = undefined;\n    _this13.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n    _this13.state.saved_id = _this13.props.product_id;\n    _this13.state.updateSave = _this13.props.updateSave;\n    return _this13;\n  }\n\n  _createClass(SaveModal, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return React.createElement(Box, {\n        align: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(Button, {\n        direction: \"column\",\n        margin: \"none\",\n        icon: React.createElement(Icons.Pin, {\n          size: \"large\",\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 804\n          },\n          __self: this\n        }),\n        label: React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805\n          },\n          __self: this\n        }, \"Save\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 805\n          },\n          __self: this\n        }), \"results\"),\n        onClick: this.onOpen,\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }), open && this.renderModal());\n    }\n  }]);\n\n  return SaveModal;\n}(Component); // Generic text input bar, takes in argument \"onSet\" as a function to \n// update text somewhere.\n\n\nvar TextInputBar =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(TextInputBar, _Component7);\n\n  function TextInputBar() {\n    var _getPrototypeOf4;\n\n    var _this14;\n\n    _classCallCheck(this, TextInputBar);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this14 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(TextInputBar)).call.apply(_getPrototypeOf4, [this].concat(args)));\n    _this14.state = {\n      value: \"\"\n    };\n    _this14.ref = React.createRef();\n\n    _this14.onChange = function (event) {\n      _this14.setName(event.target.value);\n\n      _this14.setState({\n        value: event.target.value\n      });\n    };\n\n    _this14.setName = function (name) {\n      return _this14.props.onSet(name);\n    };\n\n    return _this14;\n  }\n\n  _createClass(TextInputBar, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Box, {\n        width: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        ref: this.ref,\n        value: value,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextInputBar;\n}(Component);\n\nexport default withRouter(ProductPage);","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Product.js"],"names":["React","Component","Grommet","DataTable","grommet","Meter","TextInput","DropButton","Button","Box","Heading","Menu","Paragraph","Carousel","Accordion","AccordionPanel","Text","Image","Distribution","Layer","Icons","withRouter","Redirect","Route","Link","Router","BrowserRouter","Style","Colors","AuthService","UserService","ScanService","ProductPage","props","loadingScreen","state","loaderr","undefined","color","size","product_id","textDecoration","grey1","updateSave","setState","saved","saveIcon","loggedin","renderPage","imgurl","loading","match","params","productId","localStorage","getItem","userdata","JSON","parse","page","ingredients","not_found","getProductPage","then","res","isSaved","checkIfPageSaved","pageIngredients","getIngredients","data","contents","notFound","getNotFound","img_url","console","log","catch","e","left","dark3","Title","primary","saved_products","products","length","includes","Object","keys","forEach","value","index","String","PreviewLoader","timer","setInterval","clearInterval","CategoryAccordion","getPreferencedPanels","getPanels","entries","panels","label","push","grey3","mounting","bottom","top","IngredientButtons","renderIngredientButtons","renderIngredientsNormally","renderIngredientsHighlighted","content","buttons","right","GeneralLoader","IngredientDistribution","loadingBar","ranked_categories","values","sort","a","b","distributionContents","distributionValues","tuple","item","ImagePreview","onOpen","open","onClose","renderModal","img","SaveModal","updateName","name","saved_name","getErrorMsg","err","sendSave","saveProduct","saved_id","TextInputBar","ref","createRef","onChange","event","setName","target","onSet"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Grommet, DataTable, grommet, Meter, TextInput, DropButton, Button, Box, Heading, Menu, Paragraph, Carousel, Accordion, AccordionPanel, Text, Image, Distribution, Layer } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { withRouter, Redirect, Route, Link, Router, BrowserRouter } from 'react-router-dom';\n\nimport Style from './styles/Style';\nimport Colors from './styles/Color';\nimport AuthService from './actions/AuthService';\nimport UserService from './actions/UserService';\nimport ScanService from './actions/ScanService';\n\n\n/*\nclass IngredientModal extends Component {\n\n\tstate = {}; \n\n\tcomponentDidMount() { \n\t\tlet data = this.getIngredientData(); \n\t\tthis.setState({ ingredientname: data.name, ingredientdesc: data.desc});\n\t} \n\n\tgetIngredientData = () => { \n\t\treturn this.props.ingredient; \t\n\t}\n\n\tgetColor = () => {\n\t\tif(this.props.color != undefined) {\n\t\t\treturn this.props.color; \n\t\t} else { \n\t\t\treturn;\n\t\t}\t\n\t} \n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\trenderModal = () => { \n\t\treturn(\n\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t<Box direction=\"row\" pad={{ left: 'medium', right: 'medium', top: 'medium'}} justify=\"between\">\n\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}> Ingredient: {this.state.ingredientname}</Text>\n\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} />} onClick={this.onClose}/>\n\t\t\t\t</Box>\n\t\t\t\t<Box pad=\"medium\"> \n\t\t\t\t\t<Text size=\"12pt\" > {this.state.ingredientdesc}</Text> \n\t\t\t\t</Box> \n\t\t\t</Layer>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\t\t\t\n\t\t\t<Box>\n\t\t\t\t<Button label={<Text size=\"10pt\"  color={this.getColor()}>{`${this.state.ingredientname}, `}</Text>}  onClick={this.onOpen} plain />\n\t\t\t\t{ open && this.renderModal()}\n\t\t\t</Box>\n\t\t);\n\t}\n\n}*/\n\n/*\nconst renderIngredientIcon = (preferences, ingredientlist) => { \n\tlet ingredientbuttons = []; \n\tlet pref_colors = {\n\t\t0: \"\", \n\t\t1: \"red\",\n\t\t2: \"blue\", \n\t\t3: \"green\", \n\t\t4: \"purple\", \n\t\t5: \"#33D1FF\", \n\t} \n\tlet match = false;\n\tlet color = \"\";\n\tlet col_index = 0; \n\tingredientlist.forEach(function (item) {\n\t\tif(preferences != null ) {\n\t\t\tmatch = false; \n\t\t\tObject.keys(preferences.special).forEach(function(key, index) {\n\t\t\t\tif(preferences.special[key].name == item.name) { \n\t\t\t\t\tmatch = true;\n\t\t\t\t\tcol_index = preferences.special[index].color;\n\t\t\t\t\tcolor = pref_colors[col_index]; \n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif(match == true) { \n\t\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} color={color} />); \n\t\t\t} else {\n\t\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} />); \n\t\t\t}\n\t\t} else { \n\t\t\tingredientbuttons.push(<IngredientModal ingredient={item} />);\n\t\t} \n\t});\n\n\treturn(\n\t\t<div>\n\t\t\t{ingredientbuttons}\n\t\t</div> \n\t); \n} \n\nclass ProductPage extends Component { \n\n\n\trenderIngredientsNormally = () => {\n\t\twhile(this.state.productpage == null) { \n\t\t\tsetInterval(() => {}, 500);\n\t\t}\n\t\tconst obj = this.state.productpage; \n\t\tlet ingredients = obj.contents; \n\t\tlet panels = []; \n\t\tObject.keys(ingredients).forEach(function(key,index) {\n\t\t\tif(ingredients[key].length != 0 && key != null) { \n\t\t\t\tpanels.push( \n\t\t\t\t\t(\n\t\t\t\t\t\t<AccordionPanel label={key}>\n\t\t\t\t\t\t\t{renderIngredientIcon(null, ingredients[key])}  \n\t\t\t\t\t\t</AccordionPanel> \n\t\t\t\t\t)\n\t\t\t\t) \n\t\t\t} \n\t\t});\n\n\t\treturn( \n\t\t\t<Accordion> \n\t\t\t\t{panels}\t\n\t\t\t</Accordion> \n\t\t); \n\t} \n\n\trenderIngredientsPreferenced = () => {\n\t\twhile(this.state.productpage == null) { \n\t\t\tsetInterval(() => {}, 500);\n\t\t} \n\t\tconst product_obj = this.state.productpage; \n\t\tconst userdata = this.state.userdata;\n\t\tlet ingredients = product_obj.contents;\n\t\tlet panels = []; \n\n\t\tObject.keys(ingredients).forEach(function(key, index) { \n\t\t\tif(ingredients[key].length != 0 && key != null) { \n\t\t\t\tpanels.push( \n\t\t\t\t\t<AccordionPanel label={key}> \n\t\t\t\t\t\t{renderIngredientIcon(userdata.preferences, ingredients[key])} \n\t\t\t\t\t</AccordionPanel> \n\t\t\t\t); \n\t\t\t} \n\t\t}); \n\n\t\treturn( \n\t\t\t<Accordion>\t\t\n\t\t\t\t{panels} \n\t\t\t</Accordion> \n\t\t); \n\t} \n\n} \n\n*/\n\n\n// ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\nclass ProductPage extends Component {\n\n\t// All necessary states and data declared here\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// If loading resulted in an error \n\t\tthis.state.loaderr = undefined;\n\t\t// The ID of this product page \n\t\tthis.state.product_id = this.props.match.params.productId;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = localStorage.getItem('auth');\n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n\t\t// Check if this productID has been saved before (by the user)\n\t\tthis.state.saved = undefined;\n\t\t// Product Results page data \n\t\tthis.state.page = undefined;\n\t\t// img url \n\t\tthis.state.imgurl = undefined;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = undefined;\n\t\t// List of ingredients that were not found\n\t\tthis.state.not_found = undefined;\n\t}\n\n\t// Data is fetched once react is mounting \n\tcomponentDidMount() {\n\t\tScanService.getProductPage(this.state.product_id)\n\t\t\t.then(res => {\n\t\t\t\tlet isSaved = checkIfPageSaved(this.state);\n\t\t\t\tlet pageIngredients = getIngredients(res.data.contents);\n\t\t\t\tlet notFound = getNotFound(res.data.contents);\n\t\t\t\tlet page = res.data;\n\t\t\t\tif (pageIngredients === undefined || page === undefined) {\n\t\t\t\t\tthis.setState({ loaderr: \"Invalid data during mount provided\" });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsaved: isSaved, ingredients: pageIngredients,\n\t\t\t\t\t\timgurl: page.img_url, not_found: notFound, page: page\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"LOADING COMPLETE: OPENING PAGE\");\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tthis.setState({ loaderr: e });\n\t\t\t});\n\t}\n\n\t// The loading screen while the page awaits\n\tloadingScreen = () => {\n\t\tif (this.state.loaderr !== undefined) {\n\t\t\treturn (\n\t\t\t\t<Box align=\"center\" gap=\"small\" fill>\n\t\t\t\t\t<Box height=\"20%\" />\n\t\t\t\t\t<Box align=\"center\" pad=\"medium\" gap=\"medium\" border={{ color: \"status-error\", size: \"medium\" }}>\n\t\t\t\t\t\t<Icons.Alert size=\"xlarge\" color=\"status-error\" />\n\t\t\t\t\t\t<Text color=\"status-error\">Failure loading: {this.state.product_id} <br /> <br />\n\t\t\t\t\t\t\t<Link to='/upload' style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\t<Box direction=\"row\">\n\t\t\t\t\t\t\t\t\t<Icons.LinkPrevious color=\"status-error\" size=\"medium\" />\n\t\t\t\t\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t\t\t\t\t<Text color=\"status-error\">Go back</Text>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Box align=\"center\" gap=\"large\" fill>\n\t\t\t\t\t<Box height=\"25%\" />\n\t\t\t\t\t<PreviewLoader />\n\t\t\t\t\t<Text color={Colors.grey1}>Loading page: {this.state.product_id}</Text>\n\t\t\t\t</Box>\n\t\t\t)\n\t\t}\n\t}\n\n\tupdateSave = () => {\n\t\tthis.setState({ saved: true });\n\t}\n\t// The icon which you can click to save the page\n\tsaveIcon = () => {\n\t\tif(this.state.loggedin === undefined) { \n\t\t\treturn(<div />);\n\t\t}  else if(this.state.saved === true) { \n\t\t\treturn(\n\t\t\t\t<Box direction=\"row\" align=\"center\" justify=\"center\">\n\t\t\t\t\t<Icons.StatusGood size=\"large\"\tcolor=\"#00C781\" />\n\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t<Text color=\"#00C781\" size=\"12pt\">Saved!</Text>\n\t\t\t\t</Box> \n\t\t\t)\n\t\t} else { \n\t\t\treturn ( \n\t\t\t\t<Box>\n\t\t\t\t\t<SaveModal updateSave={this.updateSave} product_id={this.state.product_id}/>\n\t\t\t\t</Box> \n\t\t\t)\n\t\t}\n\t}\n\n\t// Main contents of the page \n\trenderPage = () => { \n\t\treturn(\n\t\t\t<Box direction=\"column\" pad=\"medium\" align=\"center\" width=\"625px\" fill>\n\t\t\t\t<Box direction=\"row\" gap=\"medium\" justify=\"between\">\n\t\t\t\t\t<ImagePreview img={this.state.imgurl} />\n\t\t\t\t\t<IngredientDistribution data={this.state}/>\n\t\t\t\t</Box>\n\t\t\t\t<Box margin=\"medium\" width=\"625px\">\n\t\t\t\t\t<CategoryAccordion {...this.state}/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t)\n\t}\n\n\t// Primary render call. Updates whole page\n\trender() {\n\t\tlet { loading } = this.state;\n\t\tif (loading === true) {\n\t\t\treturn (\n\t\t\t\t<Box fill>\n\t\t\t\t\t{loading && this.loadingScreen()}\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Box margin=\"large\" justify=\"center\" align=\"center\">\n\t\t\t\t\t\t<Box justify=\"between\" width=\"100%\" direction=\"row\">\n\t\t\t\t\t\t\t<Box width=\"33%\" justify=\"center\" align=\"start\" pad={{ left: \"large\" }}>\n\t\t\t\t\t\t\t\t<Link to='/upload'>\n\t\t\t\t\t\t\t\t\t{<Icons.LinkPrevious color={Colors.dark3} size=\"large\" justify=\"left\" align=\"left\" />}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box width=\"33%\" justify=\"center\" align=\"center\">\n\t\t\t\t\t\t\t\t{Style.Title(\"Scan Results:\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box direction=\"row\" width=\"33%\" justify=\"start\" align=\"end\" pad={{ left: \"medium\" }} >\n\t\t\t\t\t\t\t\t<Box direction=\"column\" align=\"center\" justify=\"end\">\n\t\t\t\t\t\t\t\t\t{this.state.loggedin && this.saveIcon()}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Text size=\"12pt\" color={Colors.grey1}> Not sure how it works? You can find a guide </Text>\n\t\t\t\t\t\t\t<Text size=\"12pt\" color={Colors.primary}>here</Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* MAIN PAGE HERE */}\n\t\t\t\t\t\t{this.renderPage()}\n\t\t\t\t\t\t<Box direction=\"row\" justify=\"start\" width=\"23.5%\">\n\t\t\t\t\t\t\t<Box width=\"10%\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t}\n\n}\n\n\n// ---------------------------------// ---------------------------------// ---------------------------------\n\n// True or false return if page has already been saved by logged in user. \nconst checkIfPageSaved = (state) => {\n\tlet userdata = state.userdata;\n\tlet product_id = state.product_id;\n\tif (userdata == null || userdata == undefined) {\n\t\treturn false;\n\t} else if (product_id === undefined) {\n\t\treturn false;\n\t}\n\tlet saved_products = userdata.products;\n\tif (saved_products.length == 0) {\n\t\treturn false;\n\t} else if (saved_products.includes(product_id)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n// Gets ingredients cleaner from productpage data \nconst getIngredients = (contents) => {\n\tif (contents.length == 0) {\n\t\treturn undefined;\n\t}\n\n\tlet ingredients = [];\n\tObject.keys(contents).forEach((value, index) => {\n\t\tif (String(value) !== \"Not Found\") {\n\t\t\tingredients[value] = contents[value];\n\t\t}\n\t})\n\treturn ingredients;\n}\n\n// Gets not founds that are rendered at the bottom of the page \nconst getNotFound = (contents) => {\n\tif (contents.length == 0) {\n\t\treturn [];\n\t}\n\n\tlet ingredients = [];\n\tObject.keys(contents).forEach((value, index) => {\n\t\tif (String(value) === \"Not Found\") {\n\t\t\tingredients = contents[value];\n\t\t}\n\t})\n\treturn ingredients;\n}\n\n// Loading bar for the page \nclass PreviewLoader extends React.Component {\n\tstate = { value: 10 };\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tconst { value } = this.state;\n\t\t\tthis.setState({ value: value < 100 ? value + 8 : 0 });\n\t\t}, 50);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Meter\n\t\t\t\tmargin=\"0\"\n\t\t\t\theight=\"100px\"\n\t\t\t\twidth=\"100px\"\n\t\t\t\ttype=\"circle\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tvalues={[{ value, color: value > 10 ? `${Colors.primary}` : `${Colors.primary}` }]} />\n\t\t);\n\t}\n}\n\n// Ingredient Accordion without preferencing flair \nclass CategoryAccordion extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props); \n\t\tthis.state = {};\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = this.props.loggedin; \n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata =  this.props.userdata;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = this.props.ingredients;\n\t\t// Panels rendered in the accordion\n\t\tthis.state.panels = []; \n\t}\n\n\tcomponentDidMount() {\n\t\tlet mounting = setInterval( () => { \n\t\t\tclearInterval(mounting);\n\t\t\tif(this.state.loggedin !== undefined || this.state.loggedin !== null) { \n\t\t\t\tthis.getPreferencedPanels(); \n\t\t\t} else { \n\t\t\t\tthis.getPanels(); \n\t\t\t}\n\t\t\tthis.setState({ loading: false});\n\t\t}, 500); \n\t}\n\n\t// TODO: \n\tgetPreferencedPanels = () => { \n\t\treturn this.getPanels(); \n\t}\n\n\tgetPanels = () => { \n\t\tlet contents = Object.entries(this.state.ingredients);\n\t\tlet panels = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tlet label = <Text color={Colors.dark3}>{contents[index][0]} {`(${contents[index][1].length})`}</Text>;\n\t\t\tpanels.push(\n\t\t\t<div>\n\t\t\t\t<AccordionPanel pad=\"small\" background={Colors.grey3} label={label}>\n\t\t\t\t\t<IngredientButtons content={contents[index][1]} {...this.props} />\n\t\t\t\t</AccordionPanel>\n\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn panels; \n\t}\n\n\trender() { \n\t\tif(this.state.loading === true) { \n\t\t\treturn(\n\t\t\t\t<Box width=\"800px\" height=\"400px\" border={{ size: \"small\", color: `${Colors.grey1}`}} align=\"center\" justify=\"center\">\n\t\t\t\t\t<GeneralLoader />\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else { \n\t\t\treturn ( \n\t\t\t\t<Box>\n\t\t\t\t\t<Box margin={{ bottom: \"20px\", top: \"10px\" }} direction=\"row\" align=\"center\" justify=\"center\" >\n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t\t<Box width=\"5px\" /> \n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t\t<Box width=\"5px\" /> \n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box direction=\"column\" margin={{ bottom: \"small\" }}>\n\t\t\t\t\t\t<Text textAlign=\"center\" size=\"10pt\" color={Colors.primary}>\n\t\t\t\t\t\t\tInformation about specific ingredients by category.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text textAlign=\"center\" size=\"10pt\" color={Colors.primary}>\n\t\t\t\t\t\t\tClick on a category, and ingredient to find out more about what we found.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Accordion margin={{top: \"medium\"}}>\n\t\t\t\t\t\t{this.getPanels()}\n\t\t\t\t\t</Accordion>\n\t\t\t\t\t<Box height=\"100px\" />\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t}\n\n}\n\nclass IngredientButtons extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props);\n\t\tthis.state = {};\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = this.props.loggedin; \n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata =  this.props.userdata;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = this.props.ingredients;\n\t}\n\n\trenderIngredientButtons = () => { \n\t\tif(this.state.loggedin === null \n\t\t\t|| this.state.loggedin === undefined\n\t\t\t|| this.state.userdata === undefined \n\t\t\t|| this.state.userdata === null) { \n\t\t\t\treturn this.renderIngredientsNormally();\n\t\t} else { \n\t\t\treturn this.renderIngredientsHighlighted();\n\t\t}\n\t}\n\n\t// TODO:\n\trenderIngredientsHighlighted = () => { \n\t\treturn this.renderIngredientsNormally();\n\t}\n\n\trenderIngredientsNormally = () => { \n\t\tlet contents = this.props.content; \n\t\tlet buttons = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tbuttons.push(\n\t\t\t\t<div> \n\n\t\t\t\t</div> \n\t\t\t)\n\t\t})\n\t\treturn (\n\t\t<div>\n\n\t\t</div>)\n\t}\n\n\trender() {\n\t\treturn( \n\t\t\t<Box pad={{ left: \"small\", right: \"small\", top: \"medium\", bottom: \"medium\"}} wrap fill> \n\t\t\t\t{this.renderIngredientButtons()}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\n\n// Loading for elements on the page\nclass GeneralLoader extends React.Component {\n\tstate = { value: 10 };\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tconst { value } = this.state;\n\t\t\tthis.setState({ value: value < 100 ? value + 8 : 0 });\n\t\t}, 50);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Meter\n\t\t\t\tmargin=\"0\"\n\t\t\t\theight=\"20px\"\n\t\t\t\twidth=\"20px\"\n\t\t\t\ttype=\"circle\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tvalues={[{ value, color: value > 10 ? `${Colors.grey1}` : `${Colors.grey3}` }]} />\n\t\t);\n\t}\n}\n\n// Renders a distributions of ingredients by category and preference. \nclass IngredientDistribution extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props); \n\t\tthis.state = {}; \n\t\tthis.state.loading = true; \n\t\tthis.state.contents = this.props.data.ingredients; \n\t\tthis.state.ranked_categories = undefined; \n\t\tthis.state.values = undefined; \n\t}\n\n\tcomponentDidMount() {\n\t\tlet mounting = setInterval(() => {\n\t\t\tclearInterval(mounting);\n\t\t\tlet contents = Object.entries(this.state.contents); \n\t\t\tcontents.sort((a,b) => { \n\t\t\t\treturn b[1].length - a[1].length;\n\t\t\t});\n\t\t\tlet distributionContents = [];\n\t\t\tlet distributionValues = []; \n\t\t\tcontents.forEach((value, index) => { \n\t\t\t\tif(distributionContents.length < 5) { \n\t\t\t\t\tlet tuple = [contents[index][0], contents[index][1].length];\n\t\t\t\t\tdistributionContents.push(tuple);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdistributionContents.forEach( (value, index) => { \n\t\t\t\tlet item = { value: distributionContents[index][1], label: distributionContents[index][0]};\n\t\t\t\tdistributionValues.push(item); \n\t\t\t});\n\t\t\tthis.setState({ ranked_categories: distributionContents, values: distributionValues, loading: false });\n\t\t}, 500);\n\t}\n\n\tloadingBar = () => { \n\t\treturn( \n\t\t\t<Box border={{ size: \"small\", color: `${Colors.grey1}`}} align=\"center\" justify=\"center\" height=\"200px\" width=\"400px\" >\n\t\t\t\t<GeneralLoader />\n\t\t\t</Box>\n\t\t)\n\t}\n\n\trender() { \n\t\tif(this.state.loading === true) { \n\t\t\treturn( \n\t\t\t\t<div>\n\t\t\t\t\t{this.loadingBar()}\n\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"small\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tDistribution of ingredients by category (Top 5 included)\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else { \n\t\t\treturn( \n\t\t\t\t<div>\n\t\t\t\t\t<Distribution height=\"200px\" width=\"400px\" values={this.state.values}>\n\t\t\t\t\t\t{value => (\n\t\t\t\t\t\t\t<Box pad=\"small\" background={Colors.primary} fill>\n\t\t\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey3}>{value.value} {value.label}</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Distribution>\n\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"xsmall\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tDistribution of ingredients by category (Top 5 included)\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\n// Click on an image to get the full thing.\nclass ImagePreview extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.state.imgurl = this.props.img;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\n\trenderModal = () => {\n\t\treturn (\n\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t<Box direction=\"column\" gap=\"small\">\n\t\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"xsmall\", left: \"small\", right: \"small\"}} >\n\t\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1} />\n\t\t\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.primary}>\n\t\t\t\t\t\t\t\tThis is the entire image we have associated with these scan results.\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t<Box direction=\"row\" justify=\"between\">\n\t\t\t\t\t\t<Image alt=\"Preview not Found\" src={this.state.imgurl} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Layer>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Button onClick={this.onOpen}> \n\t\t\t\t\t<Image fit=\"cover\" alt=\"Preview not Found\" src={this.state.imgurl} height=\"200px\" width=\"200px\"/>\n\t\t\t\t</Button>\n\t\t\t\t{open && this.renderModal()}\n\t\t\t\t<Box direction=\"row\" margin={{ top: \"2\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tImage Scanned\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n\n}\n\n// Save button\nclass SaveModal extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.state.loading = false; \n\t\tthis.state.err = undefined; \n\t\tthis.state.saved_name = undefined;\n\t\tthis.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n\t\tthis.state.saved_id = this.props.product_id;\n\t\tthis.state.updateSave = this.props.updateSave;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\tupdateName = (name) => {\n\t\tthis.setState({ saved_name: name });\n\t}\n\n\tgetErrorMsg = () => { \n\t\treturn (\n\t\t\t<Box direction=\"row\" \n\t\t\talign=\"center\"\n\t\t\tjustify=\"between\"  \n\t\t\tbackground=\"#ff9999\" \n\t\t\tborder={{ color: \"red\" }} \n\t\t\twrap pad=\"small\">\n\t\t\t\t<Text  color=\"red\" size=\"12pt\">{this.state.err}</Text>\n\t\t\t\t<Button icon={<Icons.Close color=\"red\" />} onClick={() => { this.setState({ err: undefined }) }} />\n\t\t\t</Box>\n\t\t)\n\t}\n\n\tsendSave = () => {\n\t\tthis.setState({ loading: true });\n\t\tUserService.saveProduct(this.state.saved_name, this.state.userdata, this.state.saved_id)\n\t\t.then(res => {\n\t\t\tthis.setState({ loading: false, err: undefined });\n\t\t\tthis.state.updateSave();\n\t\t\tthis.onClose();\n\t\t\treturn;\n\t\t})\n\t\t.catch(e => { \n\t\t\tthis.setState({ loading: false, err: String(e)});\n\t\t})\n\t}\n\n\trenderModal = () => {\n\t\tif(this.state.loading === true) { \n\t\t\treturn ( \n\t\t\t\t<Box align=\"center\" justify=\"center\"> \n\t\t\t\t\t<GeneralLoader />\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else { \n\t\t\treturn (\n\t\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t\t<Box direction=\"column\" pad=\"medium\" gap=\"medium\">\n\t\t\t\t\t\t<Box direction=\"row\" justify=\"between\">\n\t\t\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}> Save Scan Results</Text>\n\t\t\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} />} onClick={this.onClose} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Text>Save as: </Text>\n\t\t\t\t\t\t<TextInputBar onSet={this.updateName} />\n\t\t\t\t\t\t{this.state.err && this.getErrorMsg()}\n\t\t\t\t\t\t<Button color={Colors.primary} label={<Text color={Colors.primary}>Submit</Text>} onClick={this.sendSave} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Layer>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\n\t\t\t<Box align=\"center\" justify=\"center\">\n\t\t\t\t<Button direction=\"column\" margin=\"none\" \n\t\t\t\ticon={<Icons.Pin size=\"large\" color={Colors.dark3} />} \n\t\t\t\tlabel={<Text size=\"12pt\" color={Colors.primary}>Save<br/>results</Text>}\n\t\t\t\tonClick={this.onOpen} plain />\n\t\t\t\t{open && this.renderModal()}\n\t\t\t</Box>\n\t\t);\n\t}\n\n}\n\n// Generic text input bar, takes in argument \"onSet\" as a function to \n// update text somewhere.\nclass TextInputBar extends Component {\n\tstate = { value: \"\" };\n\n\tref = React.createRef();\n\tonChange = event => {\n\t\tthis.setName(event.target.value);\n\t\tthis.setState({ value: event.target.value });\n\t};\n\n\tsetName = (name) => this.props.onSet(name);\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Box width=\"medium\">\n\t\t\t\t<TextInput ref={this.ref} value={value} onChange={this.onChange} />\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nexport default withRouter(ProductPage); \n"]},"metadata":{},"sourceType":"module"}