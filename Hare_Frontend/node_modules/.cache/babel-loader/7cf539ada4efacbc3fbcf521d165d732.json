{"ast":null,"code":"// Set Username\nvar setUsernameLS = function setUsernameLS(username) {\n  localStorage.setItem('username', username);\n}; // Set Password \n\n\nvar setPasswordLS = function setPasswordLS(password) {\n  localStorage.setItem('password', password);\n}; // Retrieve username\n\n\nvar getUsernameLS = function getUsernameLS() {\n  var username = localStorage.getItem('username');\n  return username;\n}; // Retrieve password \n\n\nvar getPasswordLS = function getPasswordLS() {\n  var password = localStorage.getItem('password');\n  return password;\n}; // Log user in or out using set usr/pass\n\n\nvar authenticateUser = function authenticateUser() {\n  var pass = getPasswordLS();\n  var usr = getUsernameLS();\n\n  if (usr == null || usr === false || pass == null || pass === false) {\n    console.log(\"[Navbar.js: authenticateUser()]: usr or pass is null\");\n    console.log(\"[ARGS]: \", usr, pass);\n  } else if (usr == \"John\" && pass == \"123\") {\n    localStorage.setItem(\"auth\", true);\n  } else {\n    console.log(\"[Navbar.js: authenticateUser()]: invalid details entered\");\n    console.log(\"[ARGS]: \", usr, pass);\n  }\n\n  if (usr == \"John\" && pass == \"123\") {\n    localStorage.setItem('auth', true);\n  } else {\n    localStorage.setItem('auth', false);\n  }\n}; // Find out if the user is logged in or out \n\n\nvar isAuthenticated = function isAuthenticated() {\n  var authval = String(localStorage.getItem('auth'));\n\n  if (Boolean(authval)) {} else {}\n};\n\nvar LogOut = function LogOut() {\n  setPasswordLS(null);\n  setUsernameLS(null);\n  authenticateUser();\n};\n\nexport default {\n  setUsernameLS: setUsernameLS,\n  setPasswordLS: setPasswordLS,\n  getUsernameLS: getUsernameLS,\n  getPasswordLS: getPasswordLS,\n  authenticateUser: authenticateUser,\n  isAuthenticated: isAuthenticated,\n  LogOut: LogOut\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/Hare/Website_Demo/Hare_Frontend/src/components/AuthService.js"],"names":["setUsernameLS","username","localStorage","setItem","setPasswordLS","password","getUsernameLS","getItem","getPasswordLS","authenticateUser","pass","usr","console","log","isAuthenticated","authval","String","Boolean","LogOut"],"mappings":"AACA;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACnCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC;AACA,CAFD,C,CAIA;;;AACA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACnCH,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCE,QAAjC;AACA,CAFD,C,CAIA;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC3B,MAAIL,QAAQ,GAAGC,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAf;AACA,SAAON,QAAP;AACA,CAHD,C,CAKA;;;AACA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC3B,MAAIH,QAAQ,GAAGH,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAf;AACA,SAAOF,QAAP;AACA,CAHD,C,CAKA;;;AACA,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC9B,MAAIC,IAAI,GAAGF,aAAa,EAAxB;AACA,MAAIG,GAAG,GAAGL,aAAa,EAAvB;;AAEA,MAAIK,GAAG,IAAI,IAAP,IAAeA,GAAG,KAAK,KAAxB,IAAmCD,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,KAA/D,EAAuE;AACtEE,IAAAA,OAAO,CAACC,GAAR,CAAY,sDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB,EAA6BD,IAA7B;AACA,GAHD,MAGO,IAAGC,GAAG,IAAI,MAAP,IAAiBD,IAAI,IAAI,KAA5B,EAAmC;AACzCR,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;AACA,GAFM,MAEA;AACNS,IAAAA,OAAO,CAACC,GAAR,CAAY,0DAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAxB,EAA6BD,IAA7B;AACA;;AAED,MAAGC,GAAG,IAAI,MAAP,IAAiBD,IAAI,IAAI,KAA5B,EAAmC;AAClCR,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,IAA7B;AACA,GAFD,MAEO;AACND,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,KAA7B;AACA;AACD,CAnBD,C,CAqBA;;;AACA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC7B,MAAIC,OAAO,GAAGC,MAAM,CAACd,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAD,CAApB;;AACA,MAAGU,OAAO,CAACF,OAAD,CAAV,EAAqB,CAEpB,CAFD,MAEO,CAEN;AACD,CAPD;;AASA,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACpBd,EAAAA,aAAa,CAAC,IAAD,CAAb;AACAJ,EAAAA,aAAa,CAAC,IAAD,CAAb;AACAS,EAAAA,gBAAgB;AAChB,CAJD;;AAMA,eAAe;AACdT,EAAAA,aAAa,EAAbA,aADc;AAEdI,EAAAA,aAAa,EAAbA,aAFc;AAGdE,EAAAA,aAAa,EAAbA,aAHc;AAIdE,EAAAA,aAAa,EAAbA,aAJc;AAKdC,EAAAA,gBAAgB,EAAhBA,gBALc;AAMdK,EAAAA,eAAe,EAAfA,eANc;AAOdI,EAAAA,MAAM,EAANA;AAPc,CAAf","sourcesContent":["\n// Set Username\nconst setUsernameLS = (username) => {\n\tlocalStorage.setItem('username', username);\n} \n\n// Set Password \nconst setPasswordLS = (password) => { \n\tlocalStorage.setItem('password', password);\n} \n\n// Retrieve username\nconst getUsernameLS = () => { \n\tlet username = localStorage.getItem('username'); \n\treturn username; \n} \n\n// Retrieve password \nconst getPasswordLS = () => { \n\tlet password = localStorage.getItem('password');\n\treturn password; \n} \n\n// Log user in or out using set usr/pass\nconst authenticateUser = () => {\n\tlet pass = getPasswordLS(); \n\tlet usr = getUsernameLS(); \n\n\tif((usr == null || usr === false) || (pass == null || pass === false)) {\n\t\tconsole.log(\"[Navbar.js: authenticateUser()]: usr or pass is null\"); \n\t\tconsole.log(\"[ARGS]: \", usr, pass); \n\t} else if(usr == \"John\" && pass == \"123\") { \n\t\tlocalStorage.setItem(\"auth\", true); \n\t} else { \n\t\tconsole.log(\"[Navbar.js: authenticateUser()]: invalid details entered\");\n\t\tconsole.log(\"[ARGS]: \", usr, pass); \n\t} \n\n\tif(usr == \"John\" && pass == \"123\") { \n\t\tlocalStorage.setItem('auth', true); \n\t} else { \n\t\tlocalStorage.setItem('auth', false); \n\t} \n} \n\n// Find out if the user is logged in or out \nconst isAuthenticated = () => { \n\tlet authval = String(localStorage.getItem('auth'));\n\tif(Boolean(authval)) { \n\t\n\t} else { \n\n\t} \n} \n\nconst LogOut = () => { \n\tsetPasswordLS(null); \n\tsetUsernameLS(null); \n\tauthenticateUser(); \n} \n\nexport default { \n\tsetUsernameLS, \n\tsetPasswordLS, \n\tgetUsernameLS, \n\tgetPasswordLS, \n\tauthenticateUser, \n\tisAuthenticated,\n\tLogOut\n} \n"]},"metadata":{},"sourceType":"module"}