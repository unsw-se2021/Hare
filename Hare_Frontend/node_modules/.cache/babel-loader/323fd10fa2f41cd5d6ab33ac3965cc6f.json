{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { Children, Component, cloneElement } from 'react';\nvar KEYS = {\n  8: 'onBackspace',\n  9: 'onTab',\n  13: 'onEnter',\n  27: 'onEsc',\n  32: 'onSpace',\n  37: 'onLeft',\n  38: 'onUp',\n  39: 'onRight',\n  40: 'onDown',\n  188: 'onComma',\n  16: 'onShift'\n};\n\nvar Keyboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Keyboard, _Component);\n\n  function Keyboard() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      /* eslint-disable-next-line react/prop-types */\n      var onKeyDown = _this.props.onKeyDown;\n      var key = event.keyCode ? event.keyCode : event.which;\n      var callbackName = KEYS[key];\n      /* eslint-disable react/destructuring-assignment */\n\n      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        rest[_key2 - 1] = arguments[_key2];\n      }\n\n      if (callbackName && _this.props[callbackName]) {\n        var _this$props;\n\n        (_this$props = _this.props)[callbackName].apply(_this$props, [event].concat(rest));\n      }\n      /* eslint-enable react/destructuring-assignment */\n\n\n      if (onKeyDown) {\n        onKeyDown.apply(void 0, [event].concat(rest));\n      }\n    });\n\n    return _this;\n  }\n\n  var _proto = Keyboard.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    /* eslint-disable-next-line react/prop-types */\n    var target = this.props.target;\n\n    if (target === 'document') {\n      document.addEventListener('keydown', this.onKeyDown);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var target = this.props.target;\n\n    if (target === 'document') {\n      document.removeEventListener('keydown', this.onKeyDown);\n    }\n  };\n\n  _proto.render = function render() {\n    /* eslint-disable-next-line react/prop-types */\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        target = _this$props2.target;\n    return target === 'document' ? children : cloneElement(Children.only(children), {\n      onKeyDown: this.onKeyDown\n    });\n  };\n\n  return Keyboard;\n}(Component);\n\nvar KeyboardDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  KeyboardDoc = require('./doc').doc(Keyboard); // eslint-disable-line global-require\n}\n\nvar KeyboardWrapper = KeyboardDoc || Keyboard;\nexport { KeyboardWrapper as Keyboard };","map":null,"metadata":{},"sourceType":"module"}