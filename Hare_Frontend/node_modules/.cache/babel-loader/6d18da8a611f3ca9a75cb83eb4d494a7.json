{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { createRef, cloneElement, Component } from 'react';\nimport { Box } from '../Box';\nimport { Heading } from '../Heading';\nimport { Layer } from '../Layer';\n\nvar SkipLinks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(SkipLinks, _Component);\n\n  function SkipLinks() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      showLayer: false\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"layerRef\", createRef());\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onBlur\", function () {\n      // timeout needed so it gives enough time for activeElement to be updated\n      setTimeout(function () {\n        var layerNode = _this.layerRef.current;\n\n        if (layerNode && layerNode.layerContainer.contains && !layerNode.layerContainer.contains(document.activeElement)) {\n          _this.removeLayer();\n        }\n      }, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocus\", function () {\n      _this.setState({\n        showLayer: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"removeLayer\", function () {\n      _this.setState({\n        showLayer: false\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = SkipLinks.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n    /* eslint-disable-next-line react/prop-types */\n\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        id = _this$props.id,\n        messages = _this$props.messages;\n    var showLayer = this.state.showLayer;\n    return React.createElement(Layer, {\n      id: id,\n      position: showLayer ? 'top' : 'hidden',\n      ref: this.layerRef,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur\n    }, React.createElement(Box, {\n      pad: {\n        horizontal: 'medium'\n      }\n    }, React.createElement(Heading, {\n      level: 2\n    }, messages.skipTo, \":\"), React.createElement(Box, {\n      direction: \"row\",\n      align: \"center\",\n      pad: {\n        bottom: 'medium'\n      }\n    }, children.map(function (element, index) {\n      return cloneElement(element, {\n        key: \"skip-link-\" + index,\n        onClick: _this2.removeLayer\n      });\n    }))));\n  };\n\n  return SkipLinks;\n}(Component);\n\n_defineProperty(SkipLinks, \"defaultProps\", {\n  messages: {\n    skipTo: 'Skip To'\n  }\n});\n\nvar SkipLinksDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  SkipLinksDoc = require('./doc').doc(SkipLinks); // eslint-disable-line global-require\n}\n\nvar SkipLinksWrapper = SkipLinksDoc || SkipLinks;\nexport { SkipLinksWrapper as SkipLinks };","map":null,"metadata":{},"sourceType":"module"}