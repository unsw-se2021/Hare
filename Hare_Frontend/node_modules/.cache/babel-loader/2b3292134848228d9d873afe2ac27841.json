{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport { Box } from '../Box';\nimport { Button } from '../Button';\nimport { withForwardRef } from '../hocs';\n\nvar SelectOption =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(SelectOption, _Component);\n\n  function SelectOption() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = SelectOption.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _this$props = this.props,\n        active = _this$props.active,\n        disabled = _this$props.disabled,\n        option = _this$props.option,\n        selected = _this$props.selected;\n    var nextActive = nextProps.active,\n        nextDisabled = nextProps.disabled,\n        nextOption = nextProps.option,\n        nextSelected = nextProps.selected;\n    return active !== nextActive || selected !== nextSelected || disabled !== nextDisabled || option !== nextOption;\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        forwardRef = _this$props2.forwardRef,\n        rest = _objectWithoutPropertiesLoose(_this$props2, [\"forwardRef\"]);\n\n    return React.createElement(Box, {\n      flex: false\n    }, React.createElement(Button, _extends({\n      tabIndex: \"-1\",\n      ref: forwardRef,\n      role: \"menuitem\"\n    }, rest)));\n  };\n\n  return SelectOption;\n}(Component);\n\nvar SelectOptionWrapper = withForwardRef(SelectOption);\nexport { SelectOptionWrapper as SelectOption };","map":null,"metadata":{},"sourceType":"module"}