{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { Component } from 'react';\nimport { compose } from 'recompose';\nimport { withTheme } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Keyboard } from '../Keyboard';\nimport { normalizeColor, parseMetricToNum } from '../../utils';\nimport { withForwardRef } from '../hocs';\nvar DIRECTION_PROPS = {\n  horizontal: {\n    cursor: 'col-resize',\n    fill: 'vertical'\n  },\n  vertical: {\n    cursor: 'row-resize',\n    fill: 'horizontal'\n  }\n};\n\nvar EdgeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(EdgeControl, _Component);\n\n  function EdgeControl() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    return _this;\n  }\n\n  var _proto = EdgeControl.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        color = _this$props.color,\n        direction = _this$props.direction,\n        edge = _this$props.edge,\n        forwardRef = _this$props.forwardRef,\n        onDecrease = _this$props.onDecrease,\n        onIncrease = _this$props.onIncrease,\n        theme = _this$props.theme,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"color\", \"direction\", \"edge\", \"forwardRef\", \"onDecrease\", \"onIncrease\", \"theme\"]);\n\n    var focused = this.state.focused;\n    var _DIRECTION_PROPS$dire = DIRECTION_PROPS[direction],\n        cursor = _DIRECTION_PROPS$dire.cursor,\n        fill = _DIRECTION_PROPS$dire.fill;\n    var size = parseMetricToNum(theme.global.spacing) / 2;\n    var keyboardProps = direction === 'vertical' ? {\n      onUp: onDecrease,\n      onDown: onIncrease\n    } : {\n      onLeft: onDecrease,\n      onRight: onIncrease\n    };\n    var boxDirection = direction === 'vertical' ? 'row' : 'column';\n    var type = theme.rangeSelector && theme.rangeSelector.edge && theme.rangeSelector.edge.type || 'disc';\n    return React.createElement(Keyboard, keyboardProps, React.createElement(Box, {\n      direction: boxDirection,\n      style: {\n        flex: '0 0 1px'\n      },\n      overflow: \"visible\",\n      align: \"center\"\n    }, React.createElement(Box, _extends({\n      ref: forwardRef,\n      direction: boxDirection,\n      justify: type === 'bar' ? 'stretch' : 'center',\n      align: \"center\",\n      basis: \"full\",\n      fill: fill,\n      margin: type === 'bar' ? undefined : 'xsmall',\n      style: {\n        cursor: cursor,\n        minWidth: size,\n        minHeight: size,\n        zIndex: 10\n      },\n      onFocus: function onFocus() {\n        return _this2.setState({\n          focused: true\n        });\n      },\n      onBlur: function onBlur() {\n        return _this2.setState({\n          focused: false\n        });\n      }\n    }, rest), type === 'bar' ? React.createElement(Box, {\n      flex: true,\n      width: size + \"px\",\n      background: normalizeColor(color || 'control', theme),\n      border: focused ? {\n        color: normalizeColor('focus', theme)\n      } : undefined\n    }) : React.createElement(Box, {\n      width: size + (focused ? 2 : 0) + \"px\",\n      height: size + (focused ? 2 : 0) + \"px\",\n      round: \"full\",\n      background: normalizeColor(color || 'control', theme),\n      border: focused ? {\n        color: normalizeColor('focus', theme)\n      } : undefined\n    }))));\n  };\n\n  return EdgeControl;\n}(Component);\n\nEdgeControl.defaultProps = {};\nObject.setPrototypeOf(EdgeControl.defaultProps, defaultProps);\nvar EdgeControlWrapper = compose(withForwardRef, withTheme)(EdgeControl);\nexport { EdgeControlWrapper as EdgeControl };","map":null,"metadata":{},"sourceType":"module"}