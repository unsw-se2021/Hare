{"ast":null,"code":"import axios from 'axios';\n\nvar getProductPage = function getProductPage(id) {\n  var pid = String(id);\n  var url = \"https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/product?=\".concat(pid);\n  return axios.get(url);\n};\n\nvar getProductID = function getProductID(b64_data) {\n  return axios.post('https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/upload', String(b64_data));\n};\n\nvar cacheProduct = function cacheProduct(id) {\n  var pagePromise = getProductPage(id);\n  pagePromise.then(function (res) {\n    localStorage.setItem(id, res.data);\n  });\n};\n\nexport default {\n  getProductID: getProductID\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/actions/ScanService.js"],"names":["axios","getProductPage","id","pid","String","url","get","getProductID","b64_data","post","cacheProduct","pagePromise","then","res","localStorage","setItem","data"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,EAAE,EAAI;AACzB,MAAIC,GAAG,GAAGC,MAAM,CAACF,EAAD,CAAhB;AACA,MAAIG,GAAG,iFAA0EF,GAA1E,CAAP;AACA,SACIH,KAAK,CACJM,GADD,CACKD,GADL,CADJ;AAIH,CAPD;;AASA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,QAAQ,EAAI;AAC7B,SACIR,KAAK,CAACS,IAAN,CAAW,mEAAX,EAAgFL,MAAM,CAACI,QAAD,CAAtF,CADJ;AAGH,CAJD;;AAMA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACR,EAAD,EAAQ;AACzB,MAAIS,WAAW,GAAGV,cAAc,CAACC,EAAD,CAAhC;AACAS,EAAAA,WAAW,CAACC,IAAZ,CAAkB,UAAAC,GAAG,EAAI;AACrBC,IAAAA,YAAY,CAACC,OAAb,CAAqBb,EAArB,EAAyBW,GAAG,CAACG,IAA7B;AACH,GAFD;AAGH,CALD;;AAOA,eAAe;AACXT,EAAAA,YAAY,EAAZA;AADW,CAAf","sourcesContent":["\nimport axios from 'axios'; \n\nconst getProductPage = id => { \n    let pid = String(id);\n    let url = `https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/product?=${pid}`;\n    return( \n        axios\n        .get(url)\n    )\n}\n\nconst getProductID = b64_data => {\n    return ( \n        axios.post('https://0d569b81-281f-42aa-b7c8-982eef0cfaa0.mock.pstmn.io/upload', String(b64_data))\n    )\n}\n\nconst cacheProduct = (id) => { \n    let pagePromise = getProductPage(id); \n    pagePromise.then( res => { \n        localStorage.setItem(id, res.data);\n    })\n}\n\nexport default { \n    getProductID, \n}"]},"metadata":{},"sourceType":"module"}