{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/styles/Style.js\";\n//\nimport Colors from './Color';\nimport React, { Component } from 'react';\nimport { Text } from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nvar Title = function Title(input, colors) {\n  var apply = \"#8292A6\";\n\n  if (colors != undefined || colors != null) {\n    apply = colors;\n  }\n\n  return React.createElement(Text, {\n    size: \"36pt\",\n    color: apply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, input);\n};\n\nvar SubTitle = function SubTitle(input) {\n  var ptsize = \"12pt\";\n  return React.createElement(Text, {\n    size: ptsize,\n    color: Colors.grey1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, input);\n};\n\nvar Hint = function Hint(hint, colors) {\n  var ptsize = \"12pt\";\n  var ptcolor = Colors.grey2;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, hint);\n};\n\nvar Body = function Body(input) {\n  var ptsize = \"12pt\";\n  var ptcolor = Colors.dark3;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, input);\n};\n\nvar BodyColored = function BodyColored(input, color) {\n  var ptsize = \"12pt\";\n  var ptcolor = color;\n  return React.createElement(Text, {\n    size: ptsize,\n    color: ptcolor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, input);\n};\n\nvar Colorindex = {\n  0: \"\",\n  1: \"red\",\n  2: \"blue\",\n  3: \"green\",\n  4: \"purple\",\n  5: \"#33D1FF\"\n};\nexport default {\n  Title: Title,\n  SubTitle: SubTitle,\n  Hint: Hint,\n  Body: Body,\n  BodyColored: BodyColored,\n  ColorIndex: ColorIndex\n};","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/styles/Style.js"],"names":["Colors","React","Component","Text","Icons","Title","input","colors","apply","undefined","SubTitle","ptsize","grey1","Hint","hint","ptcolor","grey2","Body","dark3","BodyColored","color","Colorindex","ColorIndex"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,IADJ,QAEO,SAFP;AAGA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC7B,MAAIC,KAAK,GAAG,SAAZ;;AACA,MAAGD,MAAM,IAAIE,SAAV,IAAuBF,MAAM,IAAI,IAApC,EAA0C;AACtCC,IAAAA,KAAK,GAAGD,MAAR;AACH;;AACD,SACF,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAEC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEF,KADF,CADE;AAKH,CAVD;;AAYA,IAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AACxB,MAAIK,MAAM,GAAG,MAAb;AACA,SACF,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,MAAZ;AAAoB,IAAA,KAAK,EAAEX,MAAM,CAACY,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,KADF,CADE;AAKH,CAPD;;AASA,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAOP,MAAP,EAAkB;AAC3B,MAAII,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGf,MAAM,CAACgB,KAArB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEL,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ;AAKH,CARD;;AAUA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACX,KAAD,EAAW;AACpB,MAAIK,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGf,MAAM,CAACkB,KAArB;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KADL,CADJ;AAKH,CARD;;AAUA,IAAMa,WAAW,GAAG,SAAdA,WAAc,CAACb,KAAD,EAAQc,KAAR,EAAkB;AAClC,MAAIT,MAAM,GAAG,MAAb;AACA,MAAII,OAAO,GAAGK,KAAd;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,MAAZ;AAAoB,IAAA,KAAK,EAAEI,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KADL,CADJ;AAKH,CARD;;AAUA,IAAMe,UAAU,GAAG;AACf,KAAG,EADY;AAEf,KAAG,KAFY;AAGf,KAAG,MAHY;AAIf,KAAG,OAJY;AAKf,KAAG,QALY;AAMf,KAAG;AANY,CAAnB;AASA,eAAe;AACXhB,EAAAA,KAAK,EAALA,KADW;AAEXK,EAAAA,QAAQ,EAARA,QAFW;AAGXG,EAAAA,IAAI,EAAJA,IAHW;AAIXI,EAAAA,IAAI,EAAJA,IAJW;AAKXE,EAAAA,WAAW,EAAXA,WALW;AAMXG,EAAAA,UAAU,EAAVA;AANW,CAAf","sourcesContent":["//\nimport Colors from './Color';\nimport React, { Component } from 'react'; \nimport {\n    Text,\n} from \"grommet\";\nimport * as Icons from \"grommet-icons\";\n\nconst Title = (input, colors) => { \n    let apply = \"#8292A6\";\n    if(colors != undefined || colors != null) { \n        apply = colors;\n    }\n    return( \n\t\t<Text size=\"36pt\" color={apply}> \n\t\t\t{input} \n\t\t</Text> \n    );\n};\n\nconst SubTitle = (input) => { \n    let ptsize = \"12pt\";\n    return( \n\t\t<Text size={ptsize} color={Colors.grey1}> \n\t\t\t{input}\n\t\t</Text> \n    );\n};\n\nconst Hint = (hint, colors) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = Colors.grey2;\n    return( \n        <Text size={ptsize} color={ptcolor}>\n            {hint}\n        </Text> \n    );\n};\n\nconst Body = (input) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = Colors.dark3; \n    return( \n        <Text size={ptsize} color={ptcolor}> \n            {input}\n        </Text> \n    );\n};\n\nconst BodyColored = (input, color) => { \n    let ptsize = \"12pt\"; \n    let ptcolor = color; \n    return(\n        <Text size={ptsize} color={ptcolor}>\n            {input}\n        </Text> \n    );\n};\n\nconst Colorindex = {\n    0: \"\", \n    1: \"red\",\n    2: \"blue\", \n    3: \"green\", \n    4: \"purple\", \n    5: \"#33D1FF\", \n} \n\nexport default { \n    Title, \n    SubTitle, \n    Hint, \n    Body, \n    BodyColored, \n    ColorIndex,\n}"]},"metadata":{},"sourceType":"module"}