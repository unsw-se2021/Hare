{"ast":null,"code":"import _classCallCheck from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Product.js\";\nimport React, { Component } from 'react';\nimport { Grommet, DataTable, grommet, Meter, TextInput, DropButton, Button, Box, Heading, Menu, Paragraph, Carousel, Accordion, AccordionPanel, Text, Image, Distribution, Layer } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { withRouter, Redirect, Route, Link, Router, BrowserRouter } from 'react-router-dom';\nimport Style from './styles/Style';\nimport Colors from './styles/Color';\nimport AuthService from './actions/AuthService';\nimport UserService from './actions/UserService';\nimport ScanService from './actions/ScanService'; // ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\nvar ProductPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductPage, _Component);\n\n  // All necessary states and data declared here\n  function ProductPage(props) {\n    var _this;\n\n    _classCallCheck(this, ProductPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductPage).call(this, props));\n\n    _this.loadingScreen = function () {\n      if (_this.state.loaderr !== undefined) {\n        return React.createElement(Box, {\n          align: \"center\",\n          gap: \"small\",\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Box, {\n          height: \"20%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), React.createElement(Box, {\n          align: \"center\",\n          pad: \"medium\",\n          gap: \"medium\",\n          border: {\n            color: \"status-error\",\n            size: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Icons.Alert, {\n          size: \"xlarge\",\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Failure loading: \", _this.state.product_id, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), React.createElement(Link, {\n          to: \"/upload\",\n          style: {\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Icons.LinkPrevious, {\n          color: \"status-error\",\n          size: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"status-error\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Go back\"))))));\n      } else {\n        return React.createElement(Box, {\n          align: \"center\",\n          gap: \"large\",\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Box, {\n          height: \"25%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), React.createElement(PreviewLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Loading page: \", _this.state.product_id));\n      }\n    };\n\n    _this.updateSave = function () {\n      _this.setState({\n        saved: true\n      });\n    };\n\n    _this.saveIcon = function () {\n      if (_this.state.loggedin === undefined) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      } else if (_this.state.saved === true) {\n        return React.createElement(Box, {\n          direction: \"row\",\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(Icons.StatusGood, {\n          size: \"large\",\n          color: \"#00C781\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }), React.createElement(Text, {\n          color: \"#00C781\",\n          size: \"12pt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Saved!\"));\n      } else {\n        return React.createElement(Box, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(SaveModal, {\n          updateSave: _this.updateSave,\n          product_id: _this.state.product_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.renderPage = function () {\n      return React.createElement(Box, {\n        direction: \"column\",\n        pad: \"medium\",\n        align: \"center\",\n        width: \"625px\",\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        gap: \"medium\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(ImagePreview, {\n        img: _this.state.imgurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(IngredientDistribution, {\n        data: _this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(Box, {\n        margin: \"medium\",\n        width: \"625px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(CategoryAccordion, Object.assign({}, _this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))));\n    };\n\n    _this.notFound = function () {\n      console.log(_this.state.not_found);\n      var not_founds = [];\n\n      _this.state.not_found.forEach(function (v, i) {\n        not_founds.push(_this.state.not_found[i].name);\n      });\n\n      not_founds.join(', ');\n      console.log(not_founds);\n    };\n\n    _this.state = {}; // If page has acquired everything \n\n    _this.state.loading = true; // If loading resulted in an error \n\n    _this.state.loaderr = undefined; // The ID of this product page \n\n    _this.state.product_id = _this.props.match.params.productId; // A check to see if the user is authenticated \n\n    _this.state.loggedin = localStorage.getItem('auth'); // If the user is logged in, get their userdata \n\n    _this.state.userdata = JSON.parse(localStorage.getItem('userdata')); // Check if this productID has been saved before (by the user)\n\n    _this.state.saved = undefined; // Product Results page data \n\n    _this.state.page = undefined; // img url \n\n    _this.state.imgurl = undefined; // List of ingredients by category \n\n    _this.state.ingredients = undefined; // List of ingredients that were not found\n\n    _this.state.not_found = undefined;\n    return _this;\n  } // Data is fetched once react is mounting \n\n\n  _createClass(ProductPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ScanService.getProductPage(this.state.product_id).then(function (res) {\n        var isSaved = checkIfPageSaved(_this2.state);\n        var pageIngredients = getIngredients(res.data.contents);\n        var notFound = getNotFound(res.data.contents);\n        var page = res.data;\n\n        if (pageIngredients === undefined || page === undefined) {\n          _this2.setState({\n            loaderr: \"Invalid data during mount provided\"\n          });\n        } else {\n          _this2.setState({\n            saved: isSaved,\n            ingredients: pageIngredients,\n            imgurl: page.img_url,\n            not_found: notFound,\n            page: page\n          });\n\n          console.log(\"LOADING COMPLETE: OPENING PAGE\");\n\n          _this2.setState({\n            loading: false\n          });\n        }\n      }).catch(function (e) {\n        _this2.setState({\n          loaderr: e\n        });\n      });\n    } // The loading screen while the page awaits\n\n  }, {\n    key: \"render\",\n    // Primary render call. Updates whole page\n    value: function render() {\n      var loading = this.state.loading;\n\n      if (loading === true) {\n        return React.createElement(Box, {\n          fill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157\n          },\n          __self: this\n        }, loading && this.loadingScreen());\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(Box, {\n          margin: \"large\",\n          justify: \"center\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Box, {\n          justify: \"between\",\n          width: \"100%\",\n          direction: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(Box, {\n          width: \"33%\",\n          justify: \"center\",\n          align: \"start\",\n          pad: {\n            left: \"large\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Icons.LinkPrevious, {\n          color: Colors.dark3,\n          size: \"large\",\n          justify: \"left\",\n          align: \"left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }))), React.createElement(Box, {\n          width: \"33%\",\n          justify: \"center\",\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, Style.Title(\"Scan Results:\")), React.createElement(Box, {\n          direction: \"row\",\n          width: \"33%\",\n          justify: \"start\",\n          align: \"end\",\n          pad: {\n            left: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"column\",\n          align: \"center\",\n          justify: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, this.state.loggedin && this.saveIcon()))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \" Not sure how it works? You can find a guide \"), React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"here\")), this.renderPage(), this.notFound(), React.createElement(Box, {\n          direction: \"row\",\n          justify: \"start\",\n          width: \"23.5%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Box, {\n          width: \"10%\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return ProductPage;\n}(Component); // ---------------------------------// ---------------------------------// ---------------------------------\n// True or false return if page has already been saved by logged in user. \n\n\nvar checkIfPageSaved = function checkIfPageSaved(state) {\n  var userdata = state.userdata;\n  var product_id = state.product_id;\n\n  if (userdata == null || userdata == undefined) {\n    return false;\n  } else if (product_id === undefined) {\n    return false;\n  }\n\n  var saved_products = userdata.products;\n\n  if (saved_products.length == 0) {\n    return false;\n  } else if (saved_products.includes(product_id)) {\n    return true;\n  }\n\n  return false;\n}; // Gets ingredients cleaner from productpage data \n\n\nvar getIngredients = function getIngredients(contents) {\n  if (contents.length == 0) {\n    return undefined;\n  }\n\n  var ingredients = [];\n  Object.keys(contents).forEach(function (value, index) {\n    if (String(value) !== \"Not Found\") {\n      ingredients[value] = contents[value];\n    }\n  });\n  return ingredients;\n}; // Gets not founds that are rendered at the bottom of the page \n\n\nvar getNotFound = function getNotFound(contents) {\n  if (contents.length == 0) {\n    return [];\n  }\n\n  var ingredients = [];\n  Object.keys(contents).forEach(function (value, index) {\n    if (String(value) === \"Not Found\") {\n      ingredients = contents[value];\n    }\n  });\n  return ingredients;\n}; // Loading bar for the page \n\n\nvar PreviewLoader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PreviewLoader, _React$Component);\n\n  function PreviewLoader() {\n    var _getPrototypeOf2;\n\n    var _this3;\n\n    _classCallCheck(this, PreviewLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PreviewLoader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this3.state = {\n      value: 10\n    };\n    return _this3;\n  }\n\n  _createClass(PreviewLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this4.state.value;\n\n        _this4.setState({\n          value: value < 100 ? value + 8 : 0\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        height: \"100px\",\n        width: \"100px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 10 ? \"\".concat(Colors.primary) : \"\".concat(Colors.primary)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PreviewLoader;\n}(React.Component); // Ingredient Accordion without preferencing flair \n\n\nvar CategoryAccordion =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(CategoryAccordion, _Component2);\n\n  function CategoryAccordion(props) {\n    var _this5;\n\n    _classCallCheck(this, CategoryAccordion);\n\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryAccordion).call(this, props));\n\n    _this5.getHighlightedBubbles = function (category) {\n      var bubbles = [];\n      var highlights = {\n        \"1\": 0,\n        \"2\": 0,\n        \"3\": 0,\n        \"4\": 0,\n        \"5\": 0\n      };\n      category.forEach(function (v, i) {\n        if (_this5.state.pref_names.includes(category[i].name)) {\n          var found_item = _this5.state.preferences.find(function (pref) {\n            return pref.name === category[i].name;\n          });\n\n          highlights[found_item.color]++;\n        }\n      });\n      Object.keys(highlights).forEach(function (value, index) {\n        if (highlights[value] != 0) {\n          bubbles.push(React.createElement(Box, {\n            background: Style.ColorIndex[value],\n            width: \"20px\",\n            height: \"20px\",\n            round: true,\n            align: \"center\",\n            justify: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331\n            },\n            __self: this\n          }, React.createElement(Text, {\n            size: \"12pt\",\n            color: Colors.grey3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336\n            },\n            __self: this\n          }, highlights[value])));\n        }\n      });\n      return React.createElement(Box, {\n        direction: \"row\",\n        gap: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, bubbles);\n    };\n\n    _this5.getPreferencedPanels = function () {\n      var contents = Object.entries(_this5.state.ingredients);\n      var panels = [];\n      contents.forEach(function (value, index) {\n        var str = \"\".concat(contents[index][0], \" (\").concat(contents[index][1].length, \")\");\n        var label = React.createElement(Box, {\n          direction: \"row\",\n          gap: \"medium\",\n          align: \"center\",\n          height: \"20pt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(Text, {\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, str), React.createElement(Box, {\n          direction: \"row\",\n          pad: \"xsmall\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, _this5.getHighlightedBubbles(contents[index][1])));\n        panels.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, React.createElement(AccordionPanel, {\n          pad: \"small\",\n          background: Colors.grey3,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }, React.createElement(IngredientButtons, Object.assign({\n          content: contents[index][1]\n        }, _this5.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })))));\n      });\n      return panels;\n    };\n\n    _this5.getPanels = function () {\n      if (_this5.state.loggedin !== null || _this5.state.loggedin !== undefined) {\n        return _this5.getPreferencedPanels();\n      }\n\n      var contents = Object.entries(_this5.state.ingredients);\n      var panels = [];\n      contents.forEach(function (value, index) {\n        var label = React.createElement(Text, {\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, contents[index][0], \" \", \"(\".concat(contents[index][1].length, \")\"));\n        panels.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(AccordionPanel, {\n          pad: \"small\",\n          background: Colors.grey3,\n          label: label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, React.createElement(IngredientButtons, Object.assign({\n          content: contents[index][1]\n        }, _this5.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        })))));\n      });\n      return panels;\n    };\n\n    _this5.state = {}; // If page has acquired everything \n\n    _this5.state.loading = true; // A check to see if the user is authenticated \n\n    _this5.state.loggedin = _this5.props.loggedin; // If the user is logged in, get their userdata \n\n    _this5.state.userdata = _this5.props.userdata; // List of ingredients by category \n\n    _this5.state.ingredients = _this5.props.ingredients; // Panels rendered in the accordion\n\n    _this5.state.panels = []; // Ingredient preferences \n\n    _this5.state.preferences = get_preferences(_this5.state.userdata.preferences); // Preference names \n\n    var prefs = [];\n\n    _this5.state.preferences.forEach(function (v, i) {\n      prefs.push(_this5.state.preferences[i].name);\n    });\n\n    _this5.state.pref_names = prefs;\n    return _this5;\n  }\n\n  _createClass(CategoryAccordion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this6 = this;\n\n      var mounting = setInterval(function () {\n        clearInterval(mounting);\n\n        if (_this6.state.loggedin !== undefined || _this6.state.loggedin !== null) {\n          _this6.getPreferencedPanels();\n        } else {\n          _this6.getPanels();\n        }\n\n        _this6.setState({\n          loading: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(Box, {\n          width: \"800px\",\n          height: \"400px\",\n          border: {\n            size: \"small\",\n            color: \"\".concat(Colors.grey1)\n          },\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }, React.createElement(GeneralLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Box, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403\n          },\n          __self: this\n        }, React.createElement(Box, {\n          margin: {\n            bottom: \"20px\",\n            top: \"10px\"\n          },\n          direction: \"row\",\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }, React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }), React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408\n          },\n          __self: this\n        }), React.createElement(Box, {\n          round: true,\n          background: Colors.grey1,\n          width: \"5px\",\n          height: \"5px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        })), React.createElement(Box, {\n          direction: \"column\",\n          margin: {\n            bottom: \"small\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(Text, {\n          textAlign: \"center\",\n          size: \"10pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, \"Information about specific ingredients by category.\"), React.createElement(Text, {\n          textAlign: \"center\",\n          size: \"10pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 415\n          },\n          __self: this\n        }, \"Click on a category, and ingredient to find out more about what we found.\")), React.createElement(Accordion, {\n          margin: {\n            top: \"medium\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }, this.getPanels()));\n      }\n    }\n  }]);\n\n  return CategoryAccordion;\n}(Component);\n\nvar IngredientButtons =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(IngredientButtons, _Component3);\n\n  function IngredientButtons(props) {\n    var _this7;\n\n    _classCallCheck(this, IngredientButtons);\n\n    _this7 = _possibleConstructorReturn(this, _getPrototypeOf(IngredientButtons).call(this, props));\n\n    _this7.renderIngredientButtons = function () {\n      if (_this7.state.loggedin === null || _this7.state.loggedin === undefined || _this7.state.userdata === undefined || _this7.state.userdata === null) {\n        return _this7.renderIngredientsNormally();\n      } else {\n        return _this7.renderIngredientsHighlighted();\n      }\n    };\n\n    _this7.renderIngredientsHighlighted = function () {\n      var contents = _this7.props.content;\n      var buttons = [];\n      contents.forEach(function (value, index) {\n        var found_pref = undefined;\n\n        if (_this7.state.pref_names.includes(contents[index].name)) {\n          var found_item = _this7.state.preferences.find(function (pref) {\n            return pref.name === contents[index].name;\n          });\n\n          found_pref = found_item.color;\n        }\n\n        buttons.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 474\n          },\n          __self: this\n        }, React.createElement(IngredientModal, {\n          name: contents[index].name,\n          desc: contents[index].desc,\n          pref: found_pref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        })));\n      });\n      return buttons;\n    };\n\n    _this7.renderIngredientsNormally = function () {\n      var contents = _this7.props.content;\n      var buttons = [];\n      contents.forEach(function (value, index) {\n        buttons.push(React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 487\n          },\n          __self: this\n        }, React.createElement(IngredientModal, {\n          name: contents[index].name,\n          desc: contents[index].desc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        })));\n      });\n      return buttons;\n    };\n\n    _this7.state = {}; // If page has acquired everything \n\n    _this7.state.loading = true; // A check to see if the user is authenticated \n\n    _this7.state.loggedin = _this7.props.loggedin; // If the user is logged in, get their userdata \n\n    _this7.state.userdata = _this7.props.userdata; // List of ingredients by category \n\n    _this7.state.ingredients = _this7.props.ingredients; // Ingredient preferences \n\n    _this7.state.preferences = get_preferences(_this7.state.userdata.preferences); // Preference names \n\n    var prefs = [];\n\n    _this7.state.preferences.forEach(function (v, i) {\n      prefs.push(_this7.state.preferences[i].name);\n    });\n\n    _this7.state.pref_names = prefs;\n    return _this7;\n  }\n\n  _createClass(IngredientButtons, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Box, {\n        direction: \"row\",\n        gap: \"small\",\n        pad: {\n          left: \"small\",\n          right: \"small\",\n          top: \"medium\",\n          bottom: \"medium\"\n        },\n        wrap: true,\n        fill: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, this.renderIngredientButtons());\n    }\n  }]);\n\n  return IngredientButtons;\n}(Component);\n\nvar IngredientModal =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(IngredientModal, _Component4);\n\n  function IngredientModal(props) {\n    var _this8;\n\n    _classCallCheck(this, IngredientModal);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(IngredientModal).call(this, props));\n\n    _this8.onOpen = function () {\n      return _this8.setState({\n        open: true\n      });\n    };\n\n    _this8.onClose = function () {\n      return _this8.setState({\n        open: undefined\n      });\n    };\n\n    _this8.renderModal = function () {\n      return React.createElement(Layer, {\n        position: \"center\",\n        modal: true,\n        onClickOutside: _this8.onClose,\n        onEsc: _this8.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"column\",\n        pad: \"medium\",\n        gap: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        gap: \"small\",\n        align: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, React.createElement(Icons.CircleInformation, {\n        size: \"large\",\n        color: Colors.dark3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }), React.createElement(Text, {\n        size: \"24pt\",\n        color: Colors.dark3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"Ingredient: \\\"\", _this8.state.name, \"\\\"\")), React.createElement(Button, {\n        icon: React.createElement(Icons.Close, {\n          color: Colors.dark3,\n          size: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }),\n        onClick: _this8.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      })), React.createElement(Box, {\n        background: Colors.grey2,\n        pad: \"small\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, React.createElement(Text, {\n        size: \"12pt\",\n        color: Colors.dark3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, _this8.state.desc))));\n    };\n\n    _this8.state = {};\n    _this8.state.open = undefined;\n    _this8.state.name = _this8.props.name;\n    _this8.state.desc = _this8.props.desc;\n    _this8.state.pref = _this8.props.pref;\n    return _this8;\n  }\n\n  _createClass(IngredientModal, [{\n    key: \"render\",\n    value: function render() {\n      var bg = Colors.grey3;\n      var tc = Colors.dark3;\n\n      if (this.state.pref != null || this.state.pref != undefined) {\n        bg = Style.ColorIndex[this.state.pref];\n        tc = Colors.grey3;\n      }\n\n      return React.createElement(Box, {\n        background: bg,\n        pad: \"xsmall\",\n        margin: {\n          top: \"small\",\n          bottom: \"small\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(Button, {\n        label: React.createElement(Text, {\n          size: \"8pt\",\n          color: tc,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547\n          },\n          __self: this\n        }, this.state.name),\n        onClick: this.onOpen,\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      }), this.state.open && this.renderModal());\n    }\n  }]);\n\n  return IngredientModal;\n}(Component); // Loading for elements on the page\n\n\nvar GeneralLoader =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(GeneralLoader, _React$Component2);\n\n  function GeneralLoader() {\n    var _getPrototypeOf3;\n\n    var _this9;\n\n    _classCallCheck(this, GeneralLoader);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this9 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(GeneralLoader)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this9.state = {\n      value: 10\n    };\n    return _this9;\n  }\n\n  _createClass(GeneralLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this10 = this;\n\n      this.timer = setInterval(function () {\n        var value = _this10.state.value;\n\n        _this10.setState({\n          value: value < 100 ? value + 8 : 0\n        });\n      }, 50);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Meter, {\n        margin: \"0\",\n        height: \"20px\",\n        width: \"20px\",\n        type: \"circle\",\n        size: \"small\",\n        values: [{\n          value: value,\n          color: value > 10 ? \"\".concat(Colors.grey1) : \"\".concat(Colors.grey3)\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 576\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GeneralLoader;\n}(React.Component); // Renders a distributions of ingredients by category and preference. \n\n\nvar IngredientDistribution =\n/*#__PURE__*/\nfunction (_Component5) {\n  _inherits(IngredientDistribution, _Component5);\n\n  function IngredientDistribution(props) {\n    var _this11;\n\n    _classCallCheck(this, IngredientDistribution);\n\n    _this11 = _possibleConstructorReturn(this, _getPrototypeOf(IngredientDistribution).call(this, props));\n\n    _this11.loadingBar = function () {\n      return React.createElement(Box, {\n        border: {\n          size: \"small\",\n          color: \"\".concat(Colors.grey1)\n        },\n        align: \"center\",\n        justify: \"center\",\n        height: \"200px\",\n        width: \"400px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(GeneralLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }));\n    };\n\n    _this11.state = {};\n    _this11.state.loading = true;\n    _this11.state.contents = _this11.props.data.ingredients;\n    _this11.state.ranked_categories = undefined;\n    _this11.state.values = undefined;\n    return _this11;\n  }\n\n  _createClass(IngredientDistribution, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this12 = this;\n\n      var mounting = setInterval(function () {\n        clearInterval(mounting);\n        var contents = Object.entries(_this12.state.contents);\n        contents.sort(function (a, b) {\n          return b[1].length - a[1].length;\n        });\n        var distributionContents = [];\n        var distributionValues = [];\n        contents.forEach(function (value, index) {\n          if (distributionContents.length < 5) {\n            var tuple = [contents[index][0], contents[index][1].length];\n            distributionContents.push(tuple);\n          }\n        });\n        distributionContents.forEach(function (value, index) {\n          var item = {\n            value: distributionContents[index][1],\n            label: distributionContents[index][0]\n          };\n          distributionValues.push(item);\n        });\n\n        _this12.setState({\n          ranked_categories: distributionContents,\n          values: distributionValues,\n          loading: false\n        });\n      }, 500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading === true) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 633\n          },\n          __self: this\n        }, this.loadingBar(), React.createElement(Box, {\n          direction: \"row\",\n          margin: {\n            top: \"small\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 635\n          },\n          __self: this\n        }, React.createElement(Icons.CircleInformation, {\n          size: \"small\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 637\n          },\n          __self: this\n        }), React.createElement(Text, {\n          size: \"8pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 638\n          },\n          __self: this\n        }, \"Distribution of ingredients by category (Top 5 included)\")));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 646\n          },\n          __self: this\n        }, React.createElement(Distribution, {\n          height: \"200px\",\n          width: \"400px\",\n          values: this.state.values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 647\n          },\n          __self: this\n        }, function (value) {\n          return React.createElement(Box, {\n            pad: \"small\",\n            background: Colors.primary,\n            fill: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 649\n            },\n            __self: this\n          }, React.createElement(Text, {\n            size: \"8pt\",\n            color: Colors.grey3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 650\n            },\n            __self: this\n          }, value.value, \" \", value.label));\n        }), React.createElement(Box, {\n          direction: \"row\",\n          margin: {\n            top: \"xsmall\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654\n          },\n          __self: this\n        }, React.createElement(Icons.CircleInformation, {\n          size: \"small\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655\n          },\n          __self: this\n        }), React.createElement(Box, {\n          width: \"10px\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 656\n          },\n          __self: this\n        }), React.createElement(Text, {\n          size: \"8pt\",\n          color: Colors.grey1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 657\n          },\n          __self: this\n        }, \"Distribution of ingredients by category (Top 5 included)\")));\n      }\n    }\n  }]);\n\n  return IngredientDistribution;\n}(Component); // Click on an image to get the full thing.\n\n\nvar ImagePreview =\n/*#__PURE__*/\nfunction (_Component6) {\n  _inherits(ImagePreview, _Component6);\n\n  function ImagePreview(props) {\n    var _this13;\n\n    _classCallCheck(this, ImagePreview);\n\n    _this13 = _possibleConstructorReturn(this, _getPrototypeOf(ImagePreview).call(this, props));\n\n    _this13.onOpen = function () {\n      return _this13.setState({\n        open: true\n      });\n    };\n\n    _this13.onClose = function () {\n      return _this13.setState({\n        open: undefined\n      });\n    };\n\n    _this13.renderModal = function () {\n      return React.createElement(Layer, {\n        position: \"center\",\n        modal: true,\n        onClickOutside: _this13.onClose,\n        onEsc: _this13.onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"column\",\n        gap: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, React.createElement(Box, {\n        direction: \"row\",\n        margin: {\n          top: \"xsmall\",\n          left: \"small\",\n          right: \"small\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, React.createElement(Icons.CircleInformation, {\n        size: \"small\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }), React.createElement(Box, {\n        width: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }), React.createElement(Text, {\n        size: \"8pt\",\n        color: Colors.primary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"This is the entire image we have associated with these scan results.\")), React.createElement(Box, {\n        direction: \"row\",\n        justify: \"between\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(Image, {\n        alt: \"Preview not Found\",\n        src: _this13.state.imgurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }))));\n    };\n\n    _this13.state = {};\n    _this13.state.imgurl = _this13.props.img;\n    return _this13;\n  }\n\n  _createClass(ImagePreview, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return React.createElement(Box, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }, React.createElement(Image, {\n        fit: \"cover\",\n        alt: \"Preview not Found\",\n        src: this.state.imgurl,\n        height: \"200px\",\n        width: \"200px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704\n        },\n        __self: this\n      })), open && this.renderModal(), React.createElement(Box, {\n        direction: \"row\",\n        margin: {\n          top: \"2\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }, React.createElement(Icons.CircleInformation, {\n        size: \"small\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }), React.createElement(Box, {\n        width: \"10px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }), React.createElement(Text, {\n        size: \"8pt\",\n        color: Colors.grey1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, \"Image Scanned\")));\n    }\n  }]);\n\n  return ImagePreview;\n}(Component); // Save button\n\n\nvar SaveModal =\n/*#__PURE__*/\nfunction (_Component7) {\n  _inherits(SaveModal, _Component7);\n\n  function SaveModal(props) {\n    var _this14;\n\n    _classCallCheck(this, SaveModal);\n\n    _this14 = _possibleConstructorReturn(this, _getPrototypeOf(SaveModal).call(this, props));\n\n    _this14.onOpen = function () {\n      return _this14.setState({\n        open: true\n      });\n    };\n\n    _this14.onClose = function () {\n      return _this14.setState({\n        open: undefined\n      });\n    };\n\n    _this14.updateName = function (name) {\n      _this14.setState({\n        saved_name: name\n      });\n    };\n\n    _this14.getErrorMsg = function () {\n      return React.createElement(Box, {\n        direction: \"row\",\n        align: \"center\",\n        justify: \"between\",\n        background: \"#ff9999\",\n        border: {\n          color: \"red\"\n        },\n        wrap: true,\n        pad: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(Text, {\n        color: \"red\",\n        size: \"12pt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, _this14.state.err), React.createElement(Button, {\n        icon: React.createElement(Icons.Close, {\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 750\n          },\n          __self: this\n        }),\n        onClick: function onClick() {\n          _this14.setState({\n            err: undefined\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }));\n    };\n\n    _this14.sendSave = function () {\n      _this14.setState({\n        loading: true\n      });\n\n      UserService.saveProduct(_this14.state.saved_name, _this14.state.userdata, _this14.state.saved_id).then(function (res) {\n        _this14.setState({\n          loading: false,\n          err: undefined\n        });\n\n        _this14.state.updateSave();\n\n        _this14.onClose();\n\n        return;\n      }).catch(function (e) {\n        _this14.setState({\n          loading: false,\n          err: String(e)\n        });\n      });\n    };\n\n    _this14.renderModal = function () {\n      if (_this14.state.loading === true) {\n        return React.createElement(Box, {\n          align: \"center\",\n          justify: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 772\n          },\n          __self: this\n        }, React.createElement(GeneralLoader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(Layer, {\n          position: \"center\",\n          modal: true,\n          onClickOutside: _this14.onClose,\n          onEsc: _this14.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 778\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"column\",\n          pad: \"medium\",\n          gap: \"medium\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 779\n          },\n          __self: this\n        }, React.createElement(Box, {\n          direction: \"row\",\n          justify: \"between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 780\n          },\n          __self: this\n        }, React.createElement(Text, {\n          size: \"24pt\",\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781\n          },\n          __self: this\n        }, \" Save Scan Results\"), React.createElement(Button, {\n          icon: React.createElement(Icons.Close, {\n            color: Colors.dark3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 782\n            },\n            __self: this\n          }),\n          onClick: _this14.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 782\n          },\n          __self: this\n        })), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784\n          },\n          __self: this\n        }, \"Save as: \"), React.createElement(TextInputBar, {\n          onSet: _this14.updateName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785\n          },\n          __self: this\n        }), _this14.state.err && _this14.getErrorMsg(), React.createElement(Button, {\n          color: Colors.primary,\n          label: React.createElement(Text, {\n            color: Colors.primary,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 787\n            },\n            __self: this\n          }, \"Submit\"),\n          onClick: _this14.sendSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 787\n          },\n          __self: this\n        })));\n      }\n    };\n\n    _this14.state = {};\n    _this14.state.loading = false;\n    _this14.state.err = undefined;\n    _this14.state.saved_name = undefined;\n    _this14.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n    _this14.state.saved_id = _this14.props.product_id;\n    _this14.state.updateSave = _this14.props.updateSave;\n    return _this14;\n  }\n\n  _createClass(SaveModal, [{\n    key: \"render\",\n    value: function render() {\n      var open = this.state.open;\n      return React.createElement(Box, {\n        align: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, React.createElement(Button, {\n        direction: \"column\",\n        margin: \"none\",\n        icon: React.createElement(Icons.Pin, {\n          size: \"large\",\n          color: Colors.dark3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799\n          },\n          __self: this\n        }),\n        label: React.createElement(Text, {\n          size: \"12pt\",\n          color: Colors.primary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800\n          },\n          __self: this\n        }, \"Save\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800\n          },\n          __self: this\n        }), \"results\"),\n        onClick: this.onOpen,\n        plain: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }), open && this.renderModal());\n    }\n  }]);\n\n  return SaveModal;\n}(Component); // Generic text input bar, takes in argument \"onSet\" as a function to \n// update text somewhere.\n\n\nvar TextInputBar =\n/*#__PURE__*/\nfunction (_Component8) {\n  _inherits(TextInputBar, _Component8);\n\n  function TextInputBar() {\n    var _getPrototypeOf4;\n\n    var _this15;\n\n    _classCallCheck(this, TextInputBar);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this15 = _possibleConstructorReturn(this, (_getPrototypeOf4 = _getPrototypeOf(TextInputBar)).call.apply(_getPrototypeOf4, [this].concat(args)));\n    _this15.state = {\n      value: \"\"\n    };\n    _this15.ref = React.createRef();\n\n    _this15.onChange = function (event) {\n      _this15.setName(event.target.value);\n\n      _this15.setState({\n        value: event.target.value\n      });\n    };\n\n    _this15.setName = function (name) {\n      return _this15.props.onSet(name);\n    };\n\n    return _this15;\n  }\n\n  _createClass(TextInputBar, [{\n    key: \"render\",\n    value: function render() {\n      var value = this.state.value;\n      return React.createElement(Box, {\n        width: \"medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, React.createElement(TextInput, {\n        ref: this.ref,\n        value: value,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TextInputBar;\n}(Component);\n\nvar get_preferences = function get_preferences(preferences) {\n  var objs = Object.entries(preferences.ingredients);\n  var ingredient_objs = [];\n  objs.forEach(function (value, index) {\n    var to_push = {\n      name: objs[index][1].ingredient,\n      color: objs[index][1].color\n    };\n    ingredient_objs.push(to_push);\n  });\n  return ingredient_objs;\n};\n\nexport default withRouter(ProductPage);","map":{"version":3,"sources":["/Users/michaelwlloyd/Desktop/NeoHare/Hare_Frontend/src/components/Product.js"],"names":["React","Component","Grommet","DataTable","grommet","Meter","TextInput","DropButton","Button","Box","Heading","Menu","Paragraph","Carousel","Accordion","AccordionPanel","Text","Image","Distribution","Layer","Icons","withRouter","Redirect","Route","Link","Router","BrowserRouter","Style","Colors","AuthService","UserService","ScanService","ProductPage","props","loadingScreen","state","loaderr","undefined","color","size","product_id","textDecoration","grey1","updateSave","setState","saved","saveIcon","loggedin","renderPage","imgurl","notFound","console","log","not_found","not_founds","forEach","v","i","push","name","join","loading","match","params","productId","localStorage","getItem","userdata","JSON","parse","page","ingredients","getProductPage","then","res","isSaved","checkIfPageSaved","pageIngredients","getIngredients","data","contents","getNotFound","img_url","catch","e","left","dark3","Title","primary","saved_products","products","length","includes","Object","keys","value","index","String","PreviewLoader","timer","setInterval","clearInterval","CategoryAccordion","getHighlightedBubbles","category","bubbles","highlights","pref_names","found_item","preferences","find","pref","ColorIndex","grey3","getPreferencedPanels","entries","panels","str","label","getPanels","get_preferences","prefs","mounting","bottom","top","IngredientButtons","renderIngredientButtons","renderIngredientsNormally","renderIngredientsHighlighted","content","buttons","found_pref","desc","right","IngredientModal","onOpen","open","onClose","renderModal","grey2","bg","tc","GeneralLoader","IngredientDistribution","loadingBar","ranked_categories","values","sort","a","b","distributionContents","distributionValues","tuple","item","ImagePreview","img","SaveModal","updateName","saved_name","getErrorMsg","err","sendSave","saveProduct","saved_id","TextInputBar","ref","createRef","onChange","event","setName","target","onSet","objs","ingredient_objs","to_push","ingredient"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Grommet, DataTable, grommet, Meter, TextInput, DropButton, Button, Box, Heading, Menu, Paragraph, Carousel, Accordion, AccordionPanel, Text, Image, Distribution, Layer } from 'grommet';\nimport * as Icons from 'grommet-icons';\nimport { withRouter, Redirect, Route, Link, Router, BrowserRouter } from 'react-router-dom';\n\nimport Style from './styles/Style';\nimport Colors from './styles/Color';\nimport AuthService from './actions/AuthService';\nimport UserService from './actions/UserService';\nimport ScanService from './actions/ScanService';\n\n\n\n// ---------------------------------// ---------------------------------// ---------------------------------\n// ---------------------------------// ---------------------------------// ---------------------------------\n\nclass ProductPage extends Component {\n\n\t// All necessary states and data declared here\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// If loading resulted in an error \n\t\tthis.state.loaderr = undefined;\n\t\t// The ID of this product page \n\t\tthis.state.product_id = this.props.match.params.productId;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = localStorage.getItem('auth');\n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n\t\t// Check if this productID has been saved before (by the user)\n\t\tthis.state.saved = undefined;\n\t\t// Product Results page data \n\t\tthis.state.page = undefined;\n\t\t// img url \n\t\tthis.state.imgurl = undefined;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = undefined;\n\t\t// List of ingredients that were not found\n\t\tthis.state.not_found = undefined;\n\t}\n\n\t// Data is fetched once react is mounting \n\tcomponentDidMount() {\n\t\tScanService.getProductPage(this.state.product_id)\n\t\t\t.then(res => {\n\t\t\t\tlet isSaved = checkIfPageSaved(this.state);\n\t\t\t\tlet pageIngredients = getIngredients(res.data.contents);\n\t\t\t\tlet notFound = getNotFound(res.data.contents);\n\t\t\t\tlet page = res.data;\n\t\t\t\tif (pageIngredients === undefined || page === undefined) {\n\t\t\t\t\tthis.setState({ loaderr: \"Invalid data during mount provided\" });\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tsaved: isSaved, ingredients: pageIngredients,\n\t\t\t\t\t\timgurl: page.img_url, not_found: notFound, page: page\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log(\"LOADING COMPLETE: OPENING PAGE\");\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tthis.setState({ loaderr: e });\n\t\t\t});\n\t}\n\n\t// The loading screen while the page awaits\n\tloadingScreen = () => {\n\t\tif (this.state.loaderr !== undefined) {\n\t\t\treturn (\n\t\t\t\t<Box align=\"center\" gap=\"small\" fill>\n\t\t\t\t\t<Box height=\"20%\" />\n\t\t\t\t\t<Box align=\"center\" pad=\"medium\" gap=\"medium\" border={{ color: \"status-error\", size: \"medium\" }}>\n\t\t\t\t\t\t<Icons.Alert size=\"xlarge\" color=\"status-error\" />\n\t\t\t\t\t\t<Text color=\"status-error\">Failure loading: {this.state.product_id} <br /> <br />\n\t\t\t\t\t\t\t<Link to='/upload' style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\t<Box direction=\"row\">\n\t\t\t\t\t\t\t\t\t<Icons.LinkPrevious color=\"status-error\" size=\"medium\" />\n\t\t\t\t\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t\t\t\t\t<Text color=\"status-error\">Go back</Text>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Box align=\"center\" gap=\"large\" fill>\n\t\t\t\t\t<Box height=\"25%\" />\n\t\t\t\t\t<PreviewLoader />\n\t\t\t\t\t<Text color={Colors.grey1}>Loading page: {this.state.product_id}</Text>\n\t\t\t\t</Box>\n\t\t\t)\n\t\t}\n\t}\n\n\tupdateSave = () => {\n\t\tthis.setState({ saved: true });\n\t}\n\t// The icon which you can click to save the page\n\tsaveIcon = () => {\n\t\tif(this.state.loggedin === undefined) { \n\t\t\treturn(<div />);\n\t\t}  else if(this.state.saved === true) { \n\t\t\treturn(\n\t\t\t\t<Box direction=\"row\" align=\"center\" justify=\"center\">\n\t\t\t\t\t<Icons.StatusGood size=\"large\"\tcolor=\"#00C781\" />\n\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t<Text color=\"#00C781\" size=\"12pt\">Saved!</Text>\n\t\t\t\t</Box> \n\t\t\t)\n\t\t} else { \n\t\t\treturn ( \n\t\t\t\t<Box>\n\t\t\t\t\t<SaveModal updateSave={this.updateSave} product_id={this.state.product_id}/>\n\t\t\t\t</Box> \n\t\t\t)\n\t\t}\n\t}\n\n\t// Main contents of the page \n\trenderPage = () => { \n\t\treturn(\n\t\t\t<Box direction=\"column\" pad=\"medium\" align=\"center\" width=\"625px\" fill>\n\t\t\t\t<Box direction=\"row\" gap=\"medium\" justify=\"between\">\n\t\t\t\t\t<ImagePreview img={this.state.imgurl} />\n\t\t\t\t\t<IngredientDistribution data={this.state}/>\n\t\t\t\t</Box>\n\t\t\t\t<Box margin=\"medium\" width=\"625px\">\n\t\t\t\t\t<CategoryAccordion {...this.state}/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t)\n\t}\n\n\t// Display not found ingredients\n\tnotFound = () => { \n\t\tconsole.log(this.state.not_found); \n\t\tlet not_founds = []; \n\t\tthis.state.not_found.forEach( (v,i) => {\n\t\t\tnot_founds.push(this.state.not_found[i].name);\n\t\t}); \n\t\tnot_founds.join(', ');\n\t\tconsole.log(not_founds);\n\t}\n\n\t// Primary render call. Updates whole page\n\trender() {\n\t\tlet { loading } = this.state;\n\t\tif (loading === true) {\n\t\t\treturn (\n\t\t\t\t<Box fill>\n\t\t\t\t\t{loading && this.loadingScreen()}\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Box margin=\"large\" justify=\"center\" align=\"center\">\n\t\t\t\t\t\t<Box justify=\"between\" width=\"100%\" direction=\"row\">\n\t\t\t\t\t\t\t<Box width=\"33%\" justify=\"center\" align=\"start\" pad={{ left: \"large\" }}>\n\t\t\t\t\t\t\t\t<Link to='/upload'>\n\t\t\t\t\t\t\t\t\t{<Icons.LinkPrevious color={Colors.dark3} size=\"large\" justify=\"left\" align=\"left\" />}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box width=\"33%\" justify=\"center\" align=\"center\">\n\t\t\t\t\t\t\t\t{Style.Title(\"Scan Results:\")}\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<Box direction=\"row\" width=\"33%\" justify=\"start\" align=\"end\" pad={{ left: \"medium\" }} >\n\t\t\t\t\t\t\t\t<Box direction=\"column\" align=\"center\" justify=\"end\">\n\t\t\t\t\t\t\t\t\t{this.state.loggedin && this.saveIcon()}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Text size=\"12pt\" color={Colors.grey1}> Not sure how it works? You can find a guide </Text>\n\t\t\t\t\t\t\t<Text size=\"12pt\" color={Colors.primary}>here</Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* MAIN PAGE HERE */}\n\t\t\t\t\t\t{this.renderPage()}\n\t\t\t\t\t\t{this.notFound()}\n\t\t\t\t\t\t<Box direction=\"row\" justify=\"start\" width=\"23.5%\">\n\t\t\t\t\t\t\t<Box width=\"10%\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t}\n\n}\n\n\n// ---------------------------------// ---------------------------------// ---------------------------------\n\n// True or false return if page has already been saved by logged in user. \nconst checkIfPageSaved = (state) => {\n\tlet userdata = state.userdata;\n\tlet product_id = state.product_id;\n\tif (userdata == null || userdata == undefined) {\n\t\treturn false;\n\t} else if (product_id === undefined) {\n\t\treturn false;\n\t}\n\tlet saved_products = userdata.products;\n\tif (saved_products.length == 0) {\n\t\treturn false;\n\t} else if (saved_products.includes(product_id)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n// Gets ingredients cleaner from productpage data \nconst getIngredients = (contents) => {\n\tif (contents.length == 0) {\n\t\treturn undefined;\n\t}\n\n\tlet ingredients = [];\n\tObject.keys(contents).forEach((value, index) => {\n\t\tif (String(value) !== \"Not Found\") {\n\t\t\tingredients[value] = contents[value];\n\t\t}\n\t})\n\treturn ingredients;\n}\n\n// Gets not founds that are rendered at the bottom of the page \nconst getNotFound = (contents) => {\n\tif (contents.length == 0) {\n\t\treturn [];\n\t}\n\n\tlet ingredients = [];\n\tObject.keys(contents).forEach((value, index) => {\n\t\tif (String(value) === \"Not Found\") {\n\t\t\tingredients = contents[value];\n\t\t}\n\t})\n\treturn ingredients;\n}\n\n// Loading bar for the page \nclass PreviewLoader extends React.Component {\n\tstate = { value: 10 };\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tconst { value } = this.state;\n\t\t\tthis.setState({ value: value < 100 ? value + 8 : 0 });\n\t\t}, 50);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Meter\n\t\t\t\tmargin=\"0\"\n\t\t\t\theight=\"100px\"\n\t\t\t\twidth=\"100px\"\n\t\t\t\ttype=\"circle\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tvalues={[{ value, color: value > 10 ? `${Colors.primary}` : `${Colors.primary}` }]} />\n\t\t);\n\t}\n}\n\n// Ingredient Accordion without preferencing flair \nclass CategoryAccordion extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props); \n\t\tthis.state = {};\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = this.props.loggedin; \n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata =  this.props.userdata;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = this.props.ingredients;\n\t\t// Panels rendered in the accordion\n\t\tthis.state.panels = []; \n\t\t// Ingredient preferences \n\t\tthis.state.preferences = get_preferences(this.state.userdata.preferences);\n\t\t// Preference names \n\t\tlet prefs = []\n\t\tthis.state.preferences.forEach((v, i) => { \n\t\t\tprefs.push(this.state.preferences[i].name);\n\t\t})\n\t\tthis.state.pref_names = prefs;\n\t}\n\n\tcomponentDidMount() {\n\t\tlet mounting = setInterval( () => { \n\t\t\tclearInterval(mounting);\n\t\t\tif(this.state.loggedin !== undefined || this.state.loggedin !== null) { \n\t\t\t\tthis.getPreferencedPanels(); \n\t\t\t} else { \n\t\t\t\tthis.getPanels(); \n\t\t\t}\n\t\t\tthis.setState({ loading: false});\n\t\t}, 500); \n\t}\n\n\tgetHighlightedBubbles = (category) => { \n\t\tlet bubbles = []; \n\t\tlet highlights = { \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0};\n\t\t\n\t\tcategory.forEach((v, i) => { \n\t\t\tif(this.state.pref_names.includes(category[i].name)) { \n\t\t\t\tlet found_item = this.state.preferences.find( pref => pref.name === category[i].name);\n\t\t\t\thighlights[found_item.color]++; \n\t\t\t}\n\t\t});\n\n\t\tObject.keys(highlights).forEach((value, index) => { \n\t\t\tif(highlights[value] != 0) { \n\t\t\t\tbubbles.push(\n\t\t\t\t\t<Box background={Style.ColorIndex[value]}\n\t\t\t\t\t\twidth=\"20px\"\n\t\t\t\t\t\theight=\"20px\"\n\t\t\t\t\t\tround\n\t\t\t\t\t\talign=\"center\" justify=\"center\">\n\t\t\t\t\t\t<Text size=\"12pt\" color={Colors.grey3}>\n\t\t\t\t\t\t\t{highlights[value]}\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t)\n\t\t\t}\n\t\t});\n\t\treturn (\n\t\t\t<Box direction=\"row\" gap=\"small\"> \n\t\t\t\t{bubbles}\n\t\t\t</Box>\n\t\t)\n\t}\n\t\n\tgetPreferencedPanels = () => { \n\t\tlet contents = Object.entries(this.state.ingredients);\n\t\tlet panels = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tlet str = `${contents[index][0]} (${contents[index][1].length})`;\n\t\t\tlet label = (<Box direction=\"row\" gap=\"medium\" align=\"center\" height=\"20pt\"> \n\t\t\t\t\t\t\t\t<Text color={Colors.dark3}>{str}</Text>\n\t\t\t\t\t\t\t\t<Box direction=\"row\" pad=\"xsmall\"> \n\t\t\t\t\t\t\t\t\t{this.getHighlightedBubbles(contents[index][1])}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Box>);\n\n\t\t\tpanels.push(\n\t\t\t<div>\n\t\t\t\t<AccordionPanel pad=\"small\" background={Colors.grey3} label={label}>\n\t\t\t\t\t<IngredientButtons content={contents[index][1]} {...this.props} />\n\t\t\t\t</AccordionPanel>\n\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn panels; \n\t}\n\n\tgetPanels = () => { \n\n\t\tif(this.state.loggedin !== null || this.state.loggedin !== undefined) { \n\t\t\treturn this.getPreferencedPanels();\n\t\t}\n\n\t\tlet contents = Object.entries(this.state.ingredients);\n\t\tlet panels = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tlet label = <Text color={Colors.dark3}>{contents[index][0]} {`(${contents[index][1].length})`}</Text>;\n\t\t\tpanels.push(\n\t\t\t<div>\n\t\t\t\t<AccordionPanel pad=\"small\" background={Colors.grey3} label={label}>\n\t\t\t\t\t<IngredientButtons content={contents[index][1]} {...this.props} />\n\t\t\t\t</AccordionPanel>\n\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn panels; \n\t}\n\n\trender() { \n\t\tif(this.state.loading === true) { \n\t\t\treturn(\n\t\t\t\t<Box width=\"800px\" height=\"400px\" border={{ size: \"small\", color: `${Colors.grey1}`}} align=\"center\" justify=\"center\">\n\t\t\t\t\t<GeneralLoader />\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else { \n\t\t\treturn ( \n\t\t\t\t<Box>\n\t\t\t\t\t<Box margin={{ bottom: \"20px\", top: \"10px\" }} direction=\"row\" align=\"center\" justify=\"center\" >\n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t\t<Box width=\"5px\" /> \n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t\t<Box width=\"5px\" /> \n\t\t\t\t\t\t<Box round background={Colors.grey1} width=\"5px\" height=\"5px\"/>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box direction=\"column\" margin={{ bottom: \"small\" }}>\n\t\t\t\t\t\t<Text textAlign=\"center\" size=\"10pt\" color={Colors.primary}>\n\t\t\t\t\t\t\tInformation about specific ingredients by category.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<Text textAlign=\"center\" size=\"10pt\" color={Colors.primary}>\n\t\t\t\t\t\t\tClick on a category, and ingredient to find out more about what we found.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Accordion margin={{top: \"medium\"}}>\n\t\t\t\t\t\t{this.getPanels()}\n\t\t\t\t\t</Accordion>\n\t\t\t\t</Box>\n\t\t\t);\n\t\t}\n\t}\n\n}\n\nclass IngredientButtons extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props);\n\t\tthis.state = {};\n\t\t// If page has acquired everything \n\t\tthis.state.loading = true;\n\t\t// A check to see if the user is authenticated \n\t\tthis.state.loggedin = this.props.loggedin; \n\t\t// If the user is logged in, get their userdata \n\t\tthis.state.userdata =  this.props.userdata;\n\t\t// List of ingredients by category \n\t\tthis.state.ingredients = this.props.ingredients;\n\t\t// Ingredient preferences \n\t\tthis.state.preferences = get_preferences(this.state.userdata.preferences);\n\t\t// Preference names \n\t\tlet prefs = []\n\t\tthis.state.preferences.forEach((v, i) => { \n\t\t\tprefs.push(this.state.preferences[i].name);\n\t\t})\n\t\tthis.state.pref_names = prefs;\n\t}\n\n\trenderIngredientButtons = () => { \n\t\tif(this.state.loggedin === null \n\t\t\t|| this.state.loggedin === undefined\n\t\t\t|| this.state.userdata === undefined \n\t\t\t|| this.state.userdata === null) { \n\t\t\t\treturn this.renderIngredientsNormally();\n\t\t} else { \n\t\t\treturn this.renderIngredientsHighlighted();\n\t\t}\n\t}\n\n\t// TODO:\n\trenderIngredientsHighlighted = () => { \n\t\tlet contents = this.props.content; \n\t\tlet buttons = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tlet found_pref = undefined; \n\t\t\tif(this.state.pref_names.includes(contents[index].name)) { \n\t\t\t\tlet found_item = this.state.preferences.find( pref => pref.name === contents[index].name);\n\t\t\t\tfound_pref = found_item.color;\n\t\t\t}\n\t\t\tbuttons.push(\n\t\t\t\t<div> \n\t\t\t\t\t<IngredientModal name={contents[index].name} desc={contents[index].desc} pref={found_pref}/>\n\t\t\t\t</div> \n\t\t\t)\n\t\t})\n\t\treturn buttons;\n\t}\n\n\trenderIngredientsNormally = () => { \n\t\tlet contents = this.props.content; \n\t\tlet buttons = [];\n\t\tcontents.forEach((value, index) => { \n\t\t\tbuttons.push(\n\t\t\t\t<div> \n\t\t\t\t\t<IngredientModal name={contents[index].name} desc={contents[index].desc}/>\n\t\t\t\t</div> \n\t\t\t)\n\t\t})\n\t\treturn buttons;\n\t}\n\n\trender() {\n\t\treturn( \n\t\t\t<Box direction=\"row\" gap=\"small\" pad={{ left: \"small\", right: \"small\", top: \"medium\", bottom: \"medium\"}} wrap fill> \n\t\t\t\t{this.renderIngredientButtons()}\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nclass IngredientModal extends Component { \n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {}; \n\t\tthis.state.open = undefined; \n\t\tthis.state.name = this.props.name; \n\t\tthis.state.desc = this.props.desc; \n\t\tthis.state.pref = this.props.pref;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\trenderModal = () => {\n\t\treturn ( \n\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t<Box direction=\"column\" pad=\"medium\" gap=\"medium\"> \n\t\t\t\t<Box direction=\"row\" justify=\"between\"> \n\t\t\t\t<Box direction=\"row\" gap=\"small\" align=\"center\" justify=\"center\">\n\t\t\t\t\t<Icons.CircleInformation size=\"large\" color={Colors.dark3} />\n\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}>Ingredient: \"{this.state.name}\"</Text> \n\t\t\t\t</Box>\n\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} size=\"medium\"/>} onClick={this.onClose} />\n\t\t\t\t</Box>\n\t\t\t\t<Box background={Colors.grey2} pad=\"small\" round> \n\t\t\t\t\t<Text size=\"12pt\" color={Colors.dark3}>{this.state.desc}</Text>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Layer>\n\t\t)\n\t}\n\n\trender() {\n\t\tlet bg = Colors.grey3; \n\t\tlet tc = Colors.dark3;\n\t\tif(this.state.pref != null || this.state.pref != undefined) { \n\t\t\tbg = Style.ColorIndex[this.state.pref];\n\t\t\ttc = Colors.grey3;\n\t\t}\n\t\treturn (\n\t\t\t<Box background={bg} pad=\"xsmall\" margin={{top: \"small\", bottom: \"small\"}}>\n\t\t\t\t<Button\n\t\t\t\t\tlabel={<Text size=\"8pt\"\n\t\t\t\t\t\tcolor={tc}>{this.state.name}\n\t\t\t\t\t</Text>}\n\t\t\t\t\tonClick={this.onOpen} plain />\n\t\t\t\t{this.state.open && this.renderModal()}\n\t\t\t</Box>\n\t\t)\n\t}\n\n}\n\n// Loading for elements on the page\nclass GeneralLoader extends React.Component {\n\tstate = { value: 10 };\n\n\tcomponentDidMount() {\n\t\tthis.timer = setInterval(() => {\n\t\t\tconst { value } = this.state;\n\t\t\tthis.setState({ value: value < 100 ? value + 8 : 0 });\n\t\t}, 50);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Meter\n\t\t\t\tmargin=\"0\"\n\t\t\t\theight=\"20px\"\n\t\t\t\twidth=\"20px\"\n\t\t\t\ttype=\"circle\"\n\t\t\t\tsize=\"small\"\n\t\t\t\tvalues={[{ value, color: value > 10 ? `${Colors.grey1}` : `${Colors.grey3}` }]} />\n\t\t);\n\t}\n}\n\n// Renders a distributions of ingredients by category and preference. \nclass IngredientDistribution extends Component { \n\n\tconstructor(props) { \n\t\tsuper(props); \n\t\tthis.state = {}; \n\t\tthis.state.loading = true; \n\t\tthis.state.contents = this.props.data.ingredients; \n\t\tthis.state.ranked_categories = undefined; \n\t\tthis.state.values = undefined; \n\t}\n\n\tcomponentDidMount() {\n\t\tlet mounting = setInterval(() => {\n\t\t\tclearInterval(mounting);\n\t\t\tlet contents = Object.entries(this.state.contents); \n\t\t\tcontents.sort((a,b) => { \n\t\t\t\treturn b[1].length - a[1].length;\n\t\t\t});\n\t\t\tlet distributionContents = [];\n\t\t\tlet distributionValues = []; \n\t\t\tcontents.forEach((value, index) => { \n\t\t\t\tif(distributionContents.length < 5) { \n\t\t\t\t\tlet tuple = [contents[index][0], contents[index][1].length];\n\t\t\t\t\tdistributionContents.push(tuple);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdistributionContents.forEach( (value, index) => { \n\t\t\t\tlet item = { value: distributionContents[index][1], label: distributionContents[index][0]};\n\t\t\t\tdistributionValues.push(item); \n\t\t\t});\n\t\t\tthis.setState({ ranked_categories: distributionContents, values: distributionValues, loading: false });\n\t\t}, 500);\n\t}\n\n\tloadingBar = () => { \n\t\treturn( \n\t\t\t<Box border={{ size: \"small\", color: `${Colors.grey1}`}} align=\"center\" justify=\"center\" height=\"200px\" width=\"400px\" >\n\t\t\t\t<GeneralLoader />\n\t\t\t</Box>\n\t\t)\n\t}\n\n\trender() { \n\t\tif(this.state.loading === true) { \n\t\t\treturn( \n\t\t\t\t<div>\n\t\t\t\t\t{this.loadingBar()}\n\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"small\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tDistribution of ingredients by category (Top 5 included)\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else { \n\t\t\treturn( \n\t\t\t\t<div>\n\t\t\t\t\t<Distribution height=\"200px\" width=\"400px\" values={this.state.values}>\n\t\t\t\t\t\t{value => (\n\t\t\t\t\t\t\t<Box pad=\"small\" background={Colors.primary} fill>\n\t\t\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey3}>{value.value} {value.label}</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Distribution>\n\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"xsmall\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tDistribution of ingredients by category (Top 5 included)\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n}\n\n// Click on an image to get the full thing.\nclass ImagePreview extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.state.imgurl = this.props.img;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\n\trenderModal = () => {\n\t\treturn (\n\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t<Box direction=\"column\" gap=\"small\">\n\t\t\t\t\t\t<Box direction=\"row\" margin={{ top: \"xsmall\", left: \"small\", right: \"small\"}} >\n\t\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1} />\n\t\t\t\t\t\t\t<Box width=\"10px\" />\n\t\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.primary}>\n\t\t\t\t\t\t\t\tThis is the entire image we have associated with these scan results.\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t<Box direction=\"row\" justify=\"between\">\n\t\t\t\t\t\t<Image alt=\"Preview not Found\" src={this.state.imgurl} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Layer>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Button onClick={this.onOpen}> \n\t\t\t\t\t<Image fit=\"cover\" alt=\"Preview not Found\" src={this.state.imgurl} height=\"200px\" width=\"200px\"/>\n\t\t\t\t</Button>\n\t\t\t\t{open && this.renderModal()}\n\t\t\t\t<Box direction=\"row\" margin={{ top: \"2\"}} >\n\t\t\t\t\t\t<Icons.CircleInformation size=\"small\" color={Colors.grey1}/>\n\t\t\t\t\t\t<Box width=\"10px\"/>\n\t\t\t\t\t\t<Text size=\"8pt\" color={Colors.grey1}>\n\t\t\t\t\t\t\tImage Scanned\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t);\n\t}\n\n}\n\n// Save button\nclass SaveModal extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.state.loading = false; \n\t\tthis.state.err = undefined; \n\t\tthis.state.saved_name = undefined;\n\t\tthis.state.userdata = JSON.parse(localStorage.getItem('userdata'));\n\t\tthis.state.saved_id = this.props.product_id;\n\t\tthis.state.updateSave = this.props.updateSave;\n\t}\n\n\tonOpen = () => this.setState({ open: true });\n\tonClose = () => this.setState({ open: undefined });\n\n\tupdateName = (name) => {\n\t\tthis.setState({ saved_name: name });\n\t}\n\n\tgetErrorMsg = () => { \n\t\treturn (\n\t\t\t<Box direction=\"row\" \n\t\t\talign=\"center\"\n\t\t\tjustify=\"between\"  \n\t\t\tbackground=\"#ff9999\" \n\t\t\tborder={{ color: \"red\" }} \n\t\t\twrap pad=\"small\">\n\t\t\t\t<Text  color=\"red\" size=\"12pt\">{this.state.err}</Text>\n\t\t\t\t<Button icon={<Icons.Close color=\"red\" />} onClick={() => { this.setState({ err: undefined }) }} />\n\t\t\t</Box>\n\t\t)\n\t}\n\n\tsendSave = () => {\n\t\tthis.setState({ loading: true });\n\t\tUserService.saveProduct(this.state.saved_name, this.state.userdata, this.state.saved_id)\n\t\t.then(res => {\n\t\t\tthis.setState({ loading: false, err: undefined });\n\t\t\tthis.state.updateSave();\n\t\t\tthis.onClose();\n\t\t\treturn;\n\t\t})\n\t\t.catch(e => { \n\t\t\tthis.setState({ loading: false, err: String(e)});\n\t\t})\n\t}\n\n\trenderModal = () => {\n\t\tif(this.state.loading === true) { \n\t\t\treturn ( \n\t\t\t\t<Box align=\"center\" justify=\"center\"> \n\t\t\t\t\t<GeneralLoader />\n\t\t\t\t</Box>\n\t\t\t)\n\t\t} else { \n\t\t\treturn (\n\t\t\t\t<Layer position=\"center\" modal onClickOutside={this.onClose} onEsc={this.onClose}>\n\t\t\t\t\t<Box direction=\"column\" pad=\"medium\" gap=\"medium\">\n\t\t\t\t\t\t<Box direction=\"row\" justify=\"between\">\n\t\t\t\t\t\t\t<Text size=\"24pt\" color={Colors.dark3}> Save Scan Results</Text>\n\t\t\t\t\t\t\t<Button icon={<Icons.Close color={Colors.dark3} />} onClick={this.onClose} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Text>Save as: </Text>\n\t\t\t\t\t\t<TextInputBar onSet={this.updateName} />\n\t\t\t\t\t\t{this.state.err && this.getErrorMsg()}\n\t\t\t\t\t\t<Button color={Colors.primary} label={<Text color={Colors.primary}>Submit</Text>} onClick={this.sendSave} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Layer>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { open } = this.state;\n\t\treturn (\n\t\t\t<Box align=\"center\" justify=\"center\">\n\t\t\t\t<Button direction=\"column\" margin=\"none\" \n\t\t\t\ticon={<Icons.Pin size=\"large\" color={Colors.dark3} />} \n\t\t\t\tlabel={<Text size=\"12pt\" color={Colors.primary}>Save<br/>results</Text>}\n\t\t\t\tonClick={this.onOpen} plain />\n\t\t\t\t{open && this.renderModal()}\n\t\t\t</Box>\n\t\t);\n\t}\n\n}\n\n// Generic text input bar, takes in argument \"onSet\" as a function to \n// update text somewhere.\nclass TextInputBar extends Component {\n\tstate = { value: \"\" };\n\n\tref = React.createRef();\n\tonChange = event => {\n\t\tthis.setName(event.target.value);\n\t\tthis.setState({ value: event.target.value });\n\t};\n\n\tsetName = (name) => this.props.onSet(name);\n\n\trender() {\n\t\tconst { value } = this.state;\n\t\treturn (\n\t\t\t<Box width=\"medium\">\n\t\t\t\t<TextInput ref={this.ref} value={value} onChange={this.onChange} />\n\t\t\t</Box>\n\t\t);\n\t}\n}\n\nconst get_preferences = (preferences) => { \n\n\tlet objs = Object.entries(preferences.ingredients);\n\tlet ingredient_objs = []; \n\tobjs.forEach( (value, index) => { \n\t\tlet to_push = { name: objs[index][1].ingredient, color: objs[index][1].color}\n\t\tingredient_objs.push(to_push);\n\t});\n\n\treturn ingredient_objs; \n}\n\nexport default withRouter(ProductPage); \n"]},"metadata":{},"sourceType":"module"}